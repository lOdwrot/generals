{"version":3,"sources":["Lobby/JoinRoomModal/JoinRoomModal.module.scss","Settings/Settings.module.scss","UserStats/UserStats.module.scss","Lobby/CreateRoomModal/CreateRoomModal.module.scss","BattleHistory/BattleHistory.module.scss","Abilities/Abilities.module.scss","Lobby/Lobby.module.scss","config.js","storage/game/game.action.js","storage/user/user.reducer.js","storage/messages/message.reducer.js","storage/game/game.reducer.js","storage/settings/settings.reducer.js","storage/history/history.action.js","storage/history/history.reducer.js","storage/reducer.js","storage/user/user.action.js","storage/messages/message.action.js","storage/settings/settings.action.js","storage/store.js","audioPlayer/audioPlayer.js","storage/game/game.selector.js","storage/settings/settings.selector.js","socket/socketManager.js","storage/user/user.selector.js","RoomTeams/RoomTeams.jsx","hooks/useLocalStorage.js","Lobby/CreateRoomModal/CreateRoomModal.jsx","Lobby/JoinRoomModal/JoinRoomModal.jsx","Lobby/Lobby.jsx","storage/messages/messages.selector.js","LiveChat/LiveChat.jsx","Game/Moves.js","Game/Reactions.js","Game/Field.jsx","Game/Board.jsx","Settings/Settings.jsx","GameInfo/GameInfo.jsx","AudioControl/AudioControl.jsx","storage/history/history.selector.js","hooks/useRefState.js","BattleHistory/BattleHistory.jsx","Abilities/Ability.jsx","Abilities/Abilities.jsx","UserStats/UserStats.jsx","App.js","serviceWorker.js","index.js","LiveChat/LiveChat.module.scss","AudioControl/AudioControl.module.scss","RoomTeams/RoomTeams.module.scss","GameInfo/GameInfo.module.scss"],"names":["module","exports","config","address","SET_BOARD","setActiveField","coordinates","type","payload","setCommands","commands","removeCommands","commandIds","setPlayerRole","role","updateStats","stats","setAbilitySelection","ability","INITIAL_STATE","userName","socketId","roomId","INIT_COOLDOWNS","reborn","unite","moveCapitol","defender","plowingField","scan","autumn","archery","players","playerIdToTeamId","board","activeField","x","y","userColors","usersStats","tourCounter","playerRole","moveType","abilitySelection","cooldowns","abilityVisibleFields","passiveAbilities","privateSettings","gameSettings","mapWidth","mapHeight","gameMode","nonAggression","castlesDensity","mountainDensity","archeryTowersDensity","observerTowersDensity","abandonedFortressesDensity","castleProduction","fieldProduction","turnDuration","setUserColorsInHistory","history","reducers","user","state","action","find","v","messages","game","reduce","acc","teamId","color","actions","filter","includes","id","nextCooldowns","Object","keys","forEach","key","nextFields","settings","settingName","value","rootReducer","combineReducers","middlwares","thunk","audio","dialogsAudio","dialogsAudio2","createStoreWithMiddleware","applyMiddleware","createStore","reducer","playersSelector","boardSelector","activeFieldSelector","commandsSelector","userColorsSelector","playerRoleSelector","usersStatsSelector","tourCounterSelector","moveTypeSelector","abilitySelectionSelector","playerIdToTeamIdSelector","cooldownsSelector","abilityVisibleFieldsSelector","passiveAbilitiesSelector","gameSettingsSelector","BATTLE_START_MUSIC","process","OPENING_MUSIC","WELCOME_DIALOG","PEACFULL_BACKGROUNDS","BATTLE_MUSIC","LOST_MUSIC","WON_MUSIC","playStartMusic","playMusic","playStartDialog","playDialog","playBattleStartMusic","playPeacfullBackgoundMusic","sample","playBattleMusic","REBORN_DIALOG","PLOWING_FIELD1","ATTACK_WARNINGS","LOST_CASTLE","RANDOM_CAPITOL","MOVE_CAPITOL","UNITE_ARMY","DEFENDER","CONQUER_CAPITOL","LOST_CAPITOL","CONQUER_CASTLE","ARCHERY_SELECT","AUTUMN_SELECT","AUTUMN_EFFECT","playAutumnEffect","CROWN_FINDER","ARCHERY_SHOOTED","volume","volume2","audioPath","Audio","onended","gState","store","getState","tour","pause","src","load","play","console","log","playDialog2","io","socketIO","eraseCommands","emit","executeInstantCommand","commandType","details","on","dispatch","flat","owner","vX","vY","isVisible","setBoard","cooldownName","name","setCooldown","fields","iX","iY","push","message","joinToRoom","joinAsSpectactor","replaceGameSetting","window","replaceState","setUser","setPlayers","Modal","error","content","location","pathname","slice","approved","userSelector","TEAM_NAMES","useSelector","className","styles","onClick","map","index","nextTeamId","disabled","useLocalStorage","defaultValue","useState","localStorage","getItem","setValue","nextValue","setItem","Option","Select","FormItem","Form","Item","possiblePlayerNumbers","Array","fill","isModalOpen","setIsModalOpen","isRoomPublic","setIsRoomPublic","maxPlayers","setMaxPlayers","closable","visible","title","onOk","isPublic","createRoom","onCancel","help","checked","onChange","e","target","rooms","setRooms","setRoomId","closeModal","removeAllListeners","joinToRoomById","subscriber","footer","users","length","style","display","marginTop","placeholder","setUserName","isNameConfirmed","setIsNameConfirmed","isAllDisabled","useEffect","alt","marginBottom","CreateRoomModal","JoinRoomModal","RoomTeams","messagesSelector","newMessage","setNewMessage","setIsVisible","isHighlighted","setIsHighlighted","handleSendMessage","classnames","onKeyDown","move","prevX","prevY","translateDirectionKeyToMove","direction","isPositionValid","tileTo","command","nextCommand","from","uniqid","clickOnActiveField","MOVE_KEYS","keyboardListener","eraseLastCommand","eraseAllCommands","modifieZoom","commandToErase","React","memo","field","visibleFromAbility","notifyMouseOver","clearAbilityHover","isHoveredByAbility","isActiveField","useDispatch","units","isOwner","isClickableByAbility","Math","random","onContextMenu","event","preventDefault","onMouseEnter","backgroundColor","backgroundImage","getImageLink","getClassForArrow","getSignForArrow","prevProps","nextProps","isEqual","imagePath","debug","alert","overridedBoard","overridedUserColors","visibleFields","abilityHoveredFields","setAbilityHoveredFields","isAllVisible","allCrownsVisible","handleHoverField","setTimeout","capitol","ownedSpecialFields","document","getElementById","top","innerHeight","left","innerWidth","addEventListener","mouseMoveListener","mouseWheelListener","removeEventListener","commandsForFields","transform","row","Field","movementX","movementY","buttons","Number","deltaY","scrollValue","forceValue","nextScale","String","padEnd","notifySettingsChange","debounce","setRoomSettings","isHost","handleChangeSetting","modifyGameSetting","handleStartBattle","gameParams","width","min","max","step","userStats","Fragment","background","lands","volumeLevel","setVolumeLevel","volumeLevel2","setVolumeLevel2","level","ap","icon","CommentOutlined","SoundOutlined","historySelector","historyUserColorsSelector","useRefState","initialValue","setState","stateRef","useRef","current","historyUserColors","tourIndexRef","setTourIndex","speed","speedRef","setSpeed","isAutoPlay","isAutoPlayRef","setIsAutoPlay","updateBoard","userIds","castle","archeryTower","observerTower","abandonedFortress","flatten","calculateUserStatsLocal","rewindBack","frames","nextBoardIndex","rewindForward","autoFrma","init","DoubleLeftOutlined","BackwardOutlined","CaretLeftOutlined","CaretRightOutlined","FastForwardOutlined","DoubleRightOutlined","handleClick","selectedAbility","cooldown","isPassive","isOwned","description","maxCooldown","cost","isDisabled","placement","boxShadow","ceil","imgPath","abilityReborn","capitolAbilities","builidingAbilities","fromFieldName","gatheredPassiveAbilities","playerStats","isPlayerDead","handleClickAbility","handleSetAbilitySelectionMode","Ability","some","isModalOpened","setIsModalOpened","sort","wins","failures","App","AudioControl","Abilities","GameInfo","LiveChat","Lobby","Settings","BattleHistory","UserStats","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.94eca464.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-row\":\"JoinRoomModal_info-row__19Z2N\",\"available-rooms-container\":\"JoinRoomModal_available-rooms-container__1vBLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-wrapper\":\"Settings_settings-wrapper__1-tcm\",\"settings-content-box\":\"Settings_settings-content-box__38rES\",\"settings-list\":\"Settings_settings-list__3xNVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"UserStats_row__1-fuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-room-parameters\":\"CreateRoomModal_new-room-parameters__3sssW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speed-slider\":\"BattleHistory_speed-slider__1IaQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ability-panel\":\"Abilities_ability-panel__3qPLH\",\"ability-block-container\":\"Abilities_ability-block-container__3GhIM\",\"ability-block\":\"Abilities_ability-block__1IWen\",\"filler-block\":\"Abilities_filler-block__3xwKI\",\"filler-block__disabled\":\"Abilities_filler-block__disabled__1QYAQ\",\"ability-description-box\":\"Abilities_ability-description-box__2pgdv\",\"selected-block\":\"Abilities_selected-block__cdLMW\",\"clickable\":\"Abilities_clickable__y9Paf\",\"popover-stats\":\"Abilities_popover-stats__3nSM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobby-wrapper\":\"Lobby_lobby-wrapper__lDjyO\",\"lobby-content-box\":\"Lobby_lobby-content-box__QuG4U\",\"header\":\"Lobby_header__2r9_D\",\"subtytle\":\"Lobby_subtytle__2WrLL\",\"logo\":\"Lobby_logo__tbCPE\",\"logo-left\":\"Lobby_logo-left__1BVEf\",\"logo-right\":\"Lobby_logo-right__3mpPN\"};","const devConfig = {\r\n    address: '/'\r\n}\r\n\r\nconst config = devConfig\r\n\r\nexport default config","export const SET_PLAYERS = 'game.setPlayers'\r\nexport const setPlayers = (players) => ({\r\n    type: SET_PLAYERS,\r\n    payload: players\r\n})\r\n\r\nexport const SET_BOARD = 'game.setBoard'\r\nexport const setBoard = (board) => ({\r\n    type: SET_BOARD,\r\n    payload: board\r\n})\r\n\r\nexport const SET_ACTIVE_FIELD = 'game.setActiveField'\r\nexport const setActiveField = (coordinates) => ({\r\n    type: SET_ACTIVE_FIELD,\r\n    payload: coordinates\r\n})\r\n\r\nexport const SET_COMMANDS = 'game.setCommands'\r\nexport const setCommands = (commands) => ({\r\n    type: SET_COMMANDS,\r\n    payload: commands\r\n})\r\n\r\nexport const REMOVE_COMMANDS = 'game.removeCommands'\r\nexport const removeCommands = (commandIds) => ({\r\n    type: REMOVE_COMMANDS,\r\n    payload: commandIds\r\n})\r\n\r\nexport const SET_PLAYER_ROLE = 'game.setPlayerRole'\r\nexport const setPlayerRole = (role) => ({\r\n    type: SET_PLAYER_ROLE,\r\n    payload: role\r\n})\r\n\r\nexport const UPDATE_STATS = 'game.updateStats'\r\nexport const updateStats = (stats) => ({\r\n    type: UPDATE_STATS,\r\n    payload: stats\r\n})\r\n\r\nexport const SET_MOVE_TYPE = 'game.setMoveType'\r\nexport const setMoveType = (type) => ({\r\n    type: SET_MOVE_TYPE,\r\n    payload: type\r\n})\r\n\r\nexport const SET_ABILITY_SELECTION = 'game.abilitySelection'\r\nexport const setAbilitySelection = (ability) => ({\r\n    type: SET_ABILITY_SELECTION,\r\n    payload: ability\r\n})\r\n\r\nexport const SET_COOLDOWN = 'game.setCooldown'\r\nexport const setCooldown = (name, value) => ({\r\n    type: SET_COOLDOWN,\r\n    payload: {[name]: value}\r\n})\r\n\r\nexport const COOLDOWN_TIC = 'game.cooldownTic'\r\nexport const cooldownTic = () => ({\r\n    type: COOLDOWN_TIC,\r\n})\r\n\r\nexport const ADD_AILITY_VISIBLE_FIELDS = 'game.addAbilityVisibleFields'\r\nexport const addAbilityVisibleFields = (fieldsList) => ({\r\n    type: ADD_AILITY_VISIBLE_FIELDS,\r\n    payload: fieldsList\r\n})\r\n\r\nexport const ADD_PASSIVE_ABILITY = 'game.addPassiveAbility'\r\nexport const addPassiveAbility = (ability) => ({\r\n    type: ADD_PASSIVE_ABILITY,\r\n    payload: ability\r\n})","import * as actions from './user.action'\r\nimport { SET_PLAYERS } from '../game/game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    userName: 'King',\r\n    socketId: '',\r\n    roomId: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_USER_NAME:\r\n            return {...state, userName: action.payload}\r\n        case actions.SET_USER:\r\n            return {...state, ...action.payload}\r\n        case SET_PLAYERS:\r\n            return {...state, ...action.payload.find(v => v.socketId === state.socketId)}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './message.action'\r\n\r\nconst INITIAL_STATE = []\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ADD_MESSAGE:\r\n            return [...state, action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './game.action'\r\n\r\nconst INIT_COOLDOWNS = {\r\n    reborn: 0,\r\n    unite: 0,\r\n    moveCapitol: 0,\r\n    defender: 0,\r\n    plowingField: 0,\r\n    scan: 0,\r\n    autumn: 0,\r\n    archery: 0\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    players: [],\r\n    playerIdToTeamId: {},\r\n    board: [[]],\r\n    activeField: {x: -1, y: -1},\r\n    commands: [],\r\n    userColors: {},\r\n    usersStats: {},\r\n    tourCounter: 0,\r\n    playerRole: 'lobby',\r\n    moveType: 'all',\r\n    abilitySelection: null,\r\n    cooldowns: INIT_COOLDOWNS,\r\n    abilityVisibleFields: {},\r\n    passiveAbilities: [],\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_PLAYERS:\r\n            return {\r\n                ...state, \r\n                players: action.payload,\r\n                playerIdToTeamId: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.teamId}), {}),\r\n                userColors: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n            }\r\n        case actions.SET_BOARD:\r\n            return {...state, board: action.payload}\r\n        case actions.SET_ACTIVE_FIELD:\r\n            return {...state, activeField: action.payload, moveType: 'all'}\r\n        case actions.SET_COMMANDS:\r\n            return {...state, commands: action.payload}\r\n        case actions.REMOVE_COMMANDS:\r\n            return {...state, commands: state.commands.filter(v => !action.payload.includes(v.id))}\r\n        case actions.SET_PLAYER_ROLE:\r\n            return {...state, playerRole: action.payload, cooldowns: INIT_COOLDOWNS, abilityVisibleFields: {}, passiveAbilities: []}\r\n        case actions.UPDATE_STATS:\r\n            return {...state, ...action.payload}\r\n        case actions.SET_MOVE_TYPE:\r\n            return {...state, moveType: action.payload}\r\n        case actions.SET_ABILITY_SELECTION:\r\n            return {...state, abilitySelection: action.payload}\r\n        case actions.SET_COOLDOWN:\r\n            return {...state, cooldowns: {...state.cooldowns, ...action.payload}}\r\n        case actions.COOLDOWN_TIC:{\r\n            const nextCooldowns = {...state.cooldowns}\r\n            Object.keys(nextCooldowns).forEach(key => nextCooldowns[key] && nextCooldowns[key]--)\r\n            return {...state, cooldowns: nextCooldowns}\r\n        }\r\n        case actions.ADD_AILITY_VISIBLE_FIELDS:{\r\n            const nextFields = {...state.abilityVisibleFields}\r\n            action.payload.forEach(({x, y}) => {\r\n                if(!nextFields[x]) nextFields[x] = {}\r\n                nextFields[x][y] = true\r\n            })\r\n            return {...state, abilityVisibleFields: nextFields}\r\n        }\r\n        case actions.ADD_PASSIVE_ABILITY:{\r\n            return {...state, passiveAbilities: [...state.passiveAbilities, action.payload]}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './settings.action'\r\n\r\n\r\nconst INITIAL_STATE = ({\r\n    privateSettings: {},\r\n    gameSettings: {\r\n        mapWidth: 20,\r\n        mapHeight: 20,\r\n        gameMode: 'Conquest',\r\n        nonAggression: 50,\r\n        castlesDensity: 0.5,\r\n        mountainDensity: 0.5,\r\n        archeryTowersDensity: 0.3,\r\n        observerTowersDensity: 0.3,\r\n        abandonedFortressesDensity: 0.3,\r\n        castleProduction: 1,\r\n        fieldProduction: 25,\r\n        turnDuration: 1000,\r\n    }\r\n})\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.REPLACE_GAME_SETTING:\r\n            return {...state, gameSettings: action.payload}\r\n        case actions.MODIFY_GAME_SETTING:{\r\n            const {settingName, value} = action.payload\r\n            return {...state, gameSettings: {...state.gameSettings, [settingName]: value}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","export const ERASE_HISTORY = 'history.erase'\r\nexport const eraseHistory = () => ({\r\n    type: ERASE_HISTORY\r\n})\r\n\r\nexport const SET_USER_COLORS = 'history.setUserColors'\r\nexport const setUserColorsInHistory = (userColors) => ({\r\n    type: SET_USER_COLORS,\r\n    payload: userColors\r\n})","import * as actions from './history.action'\r\nimport { SET_BOARD } from '../game/game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    history: [],\r\n    userColors: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ERASE_HISTORY:\r\n            return INITIAL_STATE\r\n        case actions.SET_USER_COLORS:\r\n            return {...state, userColors: action.payload}\r\n        case SET_BOARD:\r\n            return {...state, history: [...state.history, action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport user from './user/user.reducer'\r\nimport messages from './messages/message.reducer'\r\nimport game from './game/game.reducer'\r\nimport settings from './settings/settings.reducer'\r\nimport history from './history/history.reducer'\r\n\r\nconst reducers = {\r\n    user,\r\n    messages,\r\n    game,\r\n    settings,\r\n    history\r\n}\r\n\r\nconst rootReducer = (state ={}, action) => combineReducers(reducers)(state, action)\r\n\r\nexport default rootReducer\r\n","export const SET_USER_NAME = 'user.setName'\r\nexport const setUserName = (name) => ({\r\n    type: SET_USER_NAME,\r\n    payload: name\r\n})\r\n\r\nexport const SET_USER = 'user.setUser'\r\nexport const setUser = (user) => ({\r\n    type: SET_USER,\r\n    payload: user\r\n})","export const ADD_MESSAGE = 'messages.addMessage'\r\nexport const addMessage = (msg) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: msg\r\n})","export const MODIFY_GAME_SETTING = 'MODIFY_GAME_SETTING'\r\nexport const modifyGameSetting = (settingName, value) => ({\r\n    type: MODIFY_GAME_SETTING,\r\n    payload: {settingName, value}\r\n})\r\n\r\nexport const REPLACE_GAME_SETTING = 'REPLACE_GAME_SETTING'\r\nexport const replaceGameSetting = (settings) => ({\r\n    type: REPLACE_GAME_SETTING,\r\n    payload: settings\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nlet middlwares = [thunk]\r\nif(process.env.NODE_ENV === 'development') middlwares.push(logger)\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    ...middlwares\r\n)(createStore)\r\n\r\nexport default createStoreWithMiddleware(reducer)","import {sample} from 'lodash'\r\nimport store from '../storage/store'\r\nimport { playerRoleSelector, tourCounterSelector } from '../storage/game/game.selector'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\n\r\nconst BATTLE_START_MUSIC =  `${process.env.PUBLIC_URL}/battleStart1.mp3`\r\nconst OPENING_MUSIC =  `${process.env.PUBLIC_URL}/open.mp3`\r\nconst WELCOME_DIALOG =  `${process.env.PUBLIC_URL}/dialogs/Welcome.wav`\r\nconst CAPTURE_CAPITOL_SOUND = `${process.env.PUBLIC_URL}/cnquest.mp3`\r\n\r\nconst PEACFULL_MUSIC = `${process.env.PUBLIC_URL}/peacefullMusic.mp3`\r\nconst PEACFULL_MUSIC2 = `${process.env.PUBLIC_URL}/peacefullMusic2.mp3`\r\nconst PEACFULL_MUSIC3 = `${process.env.PUBLIC_URL}/peacefullMusic3.mp3`\r\nconst PEACFULL_MUSIC4 = `${process.env.PUBLIC_URL}/peacefullMusic4.mp3`\r\nconst PEACFULL_BACKGROUNDS = [PEACFULL_MUSIC, PEACFULL_MUSIC2, PEACFULL_MUSIC3, PEACFULL_MUSIC4]\r\n\r\nconst BATTLE_MUSIC = `${process.env.PUBLIC_URL}/battleMusic.mp3`\r\n\r\nconst LOST_MUSIC = `${process.env.PUBLIC_URL}/lost.mp3`\r\nconst WON_MUSIC = `${process.env.PUBLIC_URL}/won.mp3`\r\n\r\nexport const playStartMusic = () => playMusic(OPENING_MUSIC)\r\nexport const playStartDialog = () => playDialog(WELCOME_DIALOG)\r\nexport const playOpeningMusic = () => {\r\n    setTimeout(playStartDialog, 1000)\r\n    setTimeout(playStartMusic, 5000)\r\n}\r\nexport const playBattleStartMusic = () => playMusic(BATTLE_START_MUSIC)\r\nexport const playCaptureCapitolSound = () => playDialog(CAPTURE_CAPITOL_SOUND)\r\n\r\nexport const playPeacfullBackgoundMusic = () => playMusic(sample(PEACFULL_BACKGROUNDS))\r\nexport const playBattleMusic = () => playMusic(BATTLE_MUSIC)\r\n\r\nexport const playLostMusic = () => playMusic(LOST_MUSIC)\r\nexport const playWinMusic = () => playMusic(WON_MUSIC)\r\n\r\n// commands\r\nconst REBORN_DIALOG = `${process.env.PUBLIC_URL}/dialogs/RiseFromAshes.wav`\r\nexport const playRebornDialog = () => playDialog(REBORN_DIALOG)\r\n\r\nconst PLOWING_FIELD1 = `${process.env.PUBLIC_URL}/dialogs/PlowingField1.wav`\r\nexport const playPlowingFieldConfirmation = () => playDialog(PLOWING_FIELD1)\r\n\r\nconst ATTACK_WARNINGS = [\r\n    `${process.env.PUBLIC_URL}/dialogs/WarningAttack.wav`,\r\n]\r\nexport const playAttackWarning = () => playDialog(sample(ATTACK_WARNINGS))\r\n\r\nconst LOST_CASTLE = `${process.env.PUBLIC_URL}/dialogs/WarningAttack2.wav`\r\nexport const playLostCastle = () => playDialog(LOST_CASTLE)\r\n\r\nconst RANDOM_CAPITOL = [\r\n    `${process.env.PUBLIC_URL}/dialogs/RandomCapitol.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/RandomCapitol2.wav`,\r\n]\r\nexport const playRandomCapitol = () => playDialog(sample(RANDOM_CAPITOL))\r\n\r\n\r\nconst MOVE_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/MoveCapitol.wav`\r\nexport const playMoveCapitolConfirmation = () => playDialog(MOVE_CAPITOL)\r\n\r\nconst UNITE_ARMY = [\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy3.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy4.wav`\r\n]\r\nexport const playUniteArmyConfirmation = () => playDialog(sample(UNITE_ARMY))\r\n\r\nconst DEFENDER = [\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender3.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender4.wav`,\r\n]\r\nexport const playDefenderConfirmation = () => playDialog(sample(DEFENDER))\r\n\r\nconst CONQUER_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/ConquerCapitol.wav`\r\nexport const playConquerCapitol = () => playDialog(CONQUER_CAPITOL)\r\n\r\nconst LOST_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/LostCapitol.wav`\r\nexport const playLostCapitol = () => playDialog(LOST_CAPITOL)\r\n\r\nconst CONQUER_CASTLE = [\r\n    `${process.env.PUBLIC_URL}/dialogs/ConquerCastle.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ConquerCastle2.wav`\r\n]\r\nexport const playConquerCastle = () => playDialog(sample(CONQUER_CASTLE))\r\n\r\nconst ARCHERY_SELECT = [\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchPrepare1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchPrepare2.wav`,\r\n]\r\nexport const playArcheriesReady = () => playDialog2(sample(ARCHERY_SELECT))\r\n\r\nconst AUTUMN_SELECT = [\r\n    `${process.env.PUBLIC_URL}/dialogs/5gSelect.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/5gSelect2.wav`\r\n]\r\nexport const playAutumnSelect = () => playDialog2(sample(AUTUMN_SELECT))\r\n\r\nconst AUTUMN_EFFECT = `${process.env.PUBLIC_URL}/dialogs/5gEffect.mp3`\r\nexport const playAutumnEffect = () => playDialog(AUTUMN_EFFECT)\r\n\r\nconst CROWN_FINDER = `${process.env.PUBLIC_URL}/dialogs/FindCapitol.wav`\r\nexport const playCrownFinder = () => playDialog(CROWN_FINDER)\r\n\r\nconst ARCHERY_SHOOTED = [\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted1.wav`,\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchShooted3.wav`,\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted4.wav`,\r\n]\r\nexport const playArcheryShooted = () => playDialog(sample(ARCHERY_SHOOTED))\r\n\r\nvar audio\r\nvar dialogsAudio\r\nvar dialogsAudio2\r\nvar volume = 0.5\r\nvar volume2 = 1\r\n\r\nconst playMusic = (audioPath) => {\r\n    if(!audio) {\r\n        audio = new Audio()\r\n        audio.onended = () => {\r\n            const gState = store.getState()\r\n            const playerRole = playerRoleSelector(gState)\r\n            if (playerRole !== 'fighter' && playerRole !== 'spectator') return \r\n            const {nonAggression} = gameSettingsSelector(gState)\r\n            const tour = tourCounterSelector(gState)\r\n            if (tour < nonAggression && tour > 50) playPeacfullBackgoundMusic()\r\n            else playBattleMusic()\r\n        }\r\n    }\r\n    audio.pause()\r\n    audio.src = audioPath\r\n    audio.load()\r\n    audio.volume = volume\r\n    audio.play()\r\n}\r\n\r\nconst playDialog = (audioPath) => {\r\n    console.log('Playing: ', audioPath)\r\n    if(!dialogsAudio) dialogsAudio = new Audio()\r\n    dialogsAudio.pause()\r\n    dialogsAudio.src = audioPath\r\n    dialogsAudio.load()\r\n    dialogsAudio.volume = volume2\r\n    dialogsAudio.play()\r\n}\r\n\r\nconst playDialog2 = (audioPath) => {\r\n    console.log('Playing2: ', audioPath)\r\n    if(!dialogsAudio2) dialogsAudio2 = new Audio()\r\n    dialogsAudio2.pause()\r\n    dialogsAudio2.src = audioPath\r\n    dialogsAudio2.load()\r\n    dialogsAudio2.volume = volume2\r\n    dialogsAudio2.play()\r\n}\r\n\r\nexport const stopSounds = () => {\r\n    if(audio) audio.pause()\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n    if(dialogsAudio2) dialogsAudio2.pause()\r\n}\r\n\r\nexport const setVolume = (level) => {\r\n    volume = level\r\n    if(audio) audio.volume = volume\r\n}\r\n\r\nexport const setVolume2 = (level) => {\r\n    volume2 = level\r\n    if(dialogsAudio) dialogsAudio.volume = volume2\r\n    if(dialogsAudio2) dialogsAudio2.volume = volume2\r\n}","export const playersSelector = state => state.game.players\r\nexport const boardSelector = state => state.game.board\r\nexport const activeFieldSelector = state => state.game.activeField\r\nexport const commandsSelector = state => state.game.commands\r\nexport const userColorsSelector = state => state.game.userColors\r\nexport const playerRoleSelector = state => state.game.playerRole\r\nexport const usersStatsSelector = state => state.game.usersStats\r\nexport const tourCounterSelector = state => state.game.tourCounter\r\nexport const moveTypeSelector = state => state.game.moveType\r\nexport const abilitySelectionSelector = state => state.game.abilitySelection\r\nexport const playerIdToTeamIdSelector = state => state.game.playerIdToTeamId\r\nexport const cooldownsSelector = state => state.game.cooldowns\r\nexport const abilityVisibleFieldsSelector = state => state.game.abilityVisibleFields\r\nexport const passiveAbilitiesSelector = state => state.game.passiveAbilities","export const gameSettingsSelector = state => state.settings.gameSettings","import socketIO from 'socket.io-client'\r\nimport config from '../config'\r\nimport store from '../storage/store'\r\nimport { setUser } from '../storage/user/user.action'\r\nimport { setPlayers, setBoard, removeCommands, updateStats, setPlayerRole, setActiveField, setCommands, setAbilitySelection, setCooldown, cooldownTic, addAbilityVisibleFields, addPassiveAbility } from '../storage/game/game.action'\r\nimport { addMessage } from '../storage/messages/message.action'\r\nimport { replaceGameSetting } from '../storage/settings/settings.action'\r\nimport { playBattleStartMusic, playLostMusic, playWinMusic, playBattleMusic, playRebornDialog, playPlowingFieldConfirmation, playMoveCapitolConfirmation, playUniteArmyConfirmation, playDefenderConfirmation, playConquerCastle, playConquerCapitol, playLostCapitol, playArcheryShooted, playAutumn, playAutumnEffect, playAttackWarning, playLostCastle } from '../audioPlayer/audioPlayer'\r\nimport { eraseHistory, setUserColorsInHistory } from '../storage/history/history.action'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\nimport { Modal } from 'antd';\r\n\r\nconst io = socketIO(config.address)\r\n\r\n// MAIN ACTIONS\r\nexport const startGame = (gameParams) => io.emit('start', gameParams)\r\nexport const addCommand = (command) => io.emit('addCommand', command)\r\nexport const eraseCommands = (commandIds) => io.emit('eraseCommands', commandIds)\r\nexport const executeInstantCommand = (commandType, details) => io.emit('executeInstantCommand', commandType, details)\r\nio.on('startBattle', () => {\r\n    store.dispatch(setActiveField({x: -1, y: -1}))\r\n    store.dispatch(setCommands([]))\r\n    store.dispatch(setPlayerRole('fighter'))\r\n    store.dispatch(setAbilitySelection(null))\r\n    playBattleStartMusic()\r\n    \r\n    // HISTORY\r\n    const userColors = playersSelector(store.getState())\r\n                        .reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n    store.dispatch(eraseHistory())\r\n    store.dispatch(setUserColorsInHistory(userColors))\r\n})\r\nio.on('updateStats', (stats) => store.dispatch(updateStats(stats)))\r\nio.on('loser', () => {\r\n    playLostMusic()\r\n})\r\nio.on('winner', () => {\r\n    playWinMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\n\r\nio.on('endOfPeace', () => playBattleMusic())\r\n\r\nio.on('updateBoard', board => {\r\n    const teamId = store.getState().user.teamId\r\n    const playerIdToTeamId = store.getState().game.playerIdToTeamId\r\n\r\n    board\r\n        .flat()\r\n        .filter(v => playerIdToTeamId[v.owner] === teamId)\r\n        .forEach((({x, y}) => {\r\n            for(let vX = x -1; vX <= x + 1; vX++)\r\n                for(let vY = y -1; vY <= y + 1; vY++) \r\n                    if(board[vY] && board[vY][vX])\r\n                        board[vY][vX].isVisible = true\r\n        }))\r\n\r\n    store.dispatch(setBoard(board))\r\n})\r\nio.on('removeCommands', commandIds => store.dispatch(removeCommands(commandIds)))\r\nio.on('setCooldown', (cooldownName, value) => {\r\n    store.dispatch(setCooldown(cooldownName, value))\r\n    if (cooldownName === 'reborn') playRebornDialog()\r\n    if (cooldownName === 'unite') playUniteArmyConfirmation()\r\n    if (cooldownName === 'defender') playDefenderConfirmation()\r\n    if (cooldownName === 'autumn') playAutumnEffect()\r\n    if (cooldownName === 'revealCapitols') {\r\n        store.dispatch(addPassiveAbility('revealCapitols'))\r\n    }\r\n})\r\nio.on('cooldownTic', () => store.dispatch(cooldownTic()))\r\nio.on('confirmScan', ({x, y}) => {\r\n    const fields = []\r\n    for (let iX = x - 1; iX <= x + 1; iX++) {\r\n        for (let iY = y - 1; iY <= y + 1; iY++) {\r\n            fields.push({x: iX, y: iY})\r\n        }\r\n    }\r\n    store.dispatch(addAbilityVisibleFields(fields))\r\n})\r\n\r\n// SOUND_NOTYFICATIONS\r\nio.on('sound_ConquerCastle', playConquerCastle)\r\nio.on('sound_ConquerCapitol', playConquerCapitol)\r\nio.on('sound_LostCapitol', playLostCapitol)\r\nio.on('sound_archeryShooted', playArcheryShooted)\r\nio.on('sound_autumn', playAutumnEffect)\r\nio.on('sound_capitolAttack', playAttackWarning)\r\nio.on('sound_lostCastle', playLostCastle)\r\n\r\n// CHAT\r\nexport const sendMessage = (message) => io.emit('sendMessage', message)\r\nio.on('chat', message => store.dispatch(addMessage(message)))\r\n\r\n// ROOM\r\nexport const createRoom = (userName, isPublic, maxPlayers) => io.emit('createRoom', userName, isPublic, maxPlayers)\r\nexport const joinToRoom = (roomId, userName) => io.emit('join', {\r\n    roomId,\r\n    userName\r\n})\r\nexport const setRoomSettings = (settings) => io.emit('setRoomSettings', settings)\r\nexport const changeTeam = (nextTeamId) => io.emit('changeTeam', nextTeamId)\r\nexport const joinAsSpectactor = () => io.emit('joinAsSpectactor')\r\n\r\nexport const joinToGameSearch = (subscriber) => {\r\n    io.on('searchRoomUpdate', subscriber)\r\n    io.emit('joinToGameSearch')\r\n}\r\nexport const leaveGameSearch = () => {\r\n    io.removeAllListeners('searchRoomUpdate')\r\n    io.emit('leaveGameSearch')\r\n}\r\n\r\n\r\nio.on('setRoomSettings', settings => store.dispatch(replaceGameSetting(settings)))\r\nio.on('joined', user => {\r\n    window.history.replaceState({}, null, user.roomId)\r\n    store.dispatch(setUser(user))\r\n})\r\nio.on('refreshPlayersInRoom', players => store.dispatch(setPlayers(players)))\r\n\r\nio.on('noRoom', () => {\r\n    Modal.error({\r\n        content: `No room with given id ${window.location.pathname.slice(1)}`\r\n    })\r\n    window.history.replaceState({}, null, './')\r\n})\r\nio.on('spectactorResponse', (approved) => {\r\n    if(approved) {\r\n        store.dispatch(setPlayerRole('spectator'))\r\n        store.dispatch(setUserColorsInHistory(store.getState().game.userColors))\r\n        playBattleStartMusic()\r\n    } else Modal.error({\r\n        content: 'There is no game in progress'\r\n    })\r\n})\r\n\r\nio.on('genericError', (message) => {\r\n    Modal.error({\r\n        content: message\r\n    })\r\n})\r\n\r\n\r\nexport default io","export const userSelector = state => state.user","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\nimport styles from './RoomTeams.module.scss'\r\nimport { Button } from 'antd'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { changeTeam, joinAsSpectactor } from '../socket/socketManager'\r\n\r\nconst TEAM_NAMES = [\r\n    'Kings',\r\n    'Knights',\r\n    'Rulers',\r\n    'Hussars',\r\n    'Monarchs',\r\n    'Warriors',\r\n    'Heroes',\r\n    'Spartans',\r\n    'Franks',\r\n    'Kings4',\r\n    'Kings5',\r\n    'Kings6',\r\n    'Kings7',\r\n    'Kings8',\r\n    'Kings9',\r\n    'Kings10',\r\n    'Kings11',\r\n    'Kings12',\r\n    'Kings13',\r\n    'Kings13',\r\n]\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const user = useSelector(userSelector)\r\n\r\n    return (\r\n        <>  \r\n            <div className={styles['room-header']}>Room: {user.roomId}</div>\r\n            <Button onClick={joinAsSpectactor}>Watch Current Game</Button>\r\n            <div className={styles['rooms-wrapper']}>\r\n                {\r\n                    players.map((v, index) => (\r\n                        <div key={index}>\r\n                            <div className={styles['room-name']}>Team {TEAM_NAMES[index]}</div>\r\n                            <div>\r\n                                <div className={styles['players-block']}>\r\n                                    {\r\n                                        players\r\n                                            .filter(v => v.teamId === index)\r\n                                            .map(v => <div key={v.socketId}>{v.userName}</div>)\r\n                                    }\r\n                                </div>\r\n                                <Button\r\n                                    onClick={() => changeTeam(index)}\r\n                                    disabled={user.teamId === index}\r\n                                >\r\n                                    Join\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\"\n\nconst useLocalStorage = (key, defaultValue) => {\n    const [value, setValue] = useState(localStorage.getItem(key) || defaultValue || '')\n    const modifieValue = (nextValue) => {\n        setValue(nextValue)\n        localStorage.setItem(key, nextValue)\n    }\n\n    return [value, modifieValue]\n}\n\nexport default useLocalStorage","import React from 'react'\nimport { useState } from 'react'\nimport { Select, Form, Button, Modal, Checkbox } from 'antd';\nimport styles from './CreateRoomModal.module.scss'\nimport { createRoom } from '../../socket/socketManager';\n\nconst { Option } = Select;\nconst FormItem = Form.Item;\nconst possiblePlayerNumbers = Array(14).fill(null).map((v, index) => index + 2)\n\nexport default ({userName}) => {\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [isRoomPublic, setIsRoomPublic] = useState(true)\n    const [maxPlayers, setMaxPlayers] = useState(4)\n\n    const showModal = () => setIsModalOpen(true)\n    const confirmRoomCreation = () => {\n        createRoom(userName, isRoomPublic, maxPlayers)\n        setIsModalOpen(false)\n    }\n\n    return (\n        <>\n            <Button \n                disabled={!userName}\n                type=\"primary\" \n                onClick={showModal}\n            >\n                Create Room\n            </Button>\n            <Modal\n                closable={false}\n                visible={isModalOpen}\n                title='Create Room'\n                onOk={confirmRoomCreation}\n                onCancel={() => setIsModalOpen(false)}\n            >\n                <div className={styles['new-room-parameters']}>\n                    <FormItem help='Is Public'>\n                        <Checkbox \n                            checked={isRoomPublic}\n                            onChange={(e) => setIsRoomPublic(e.target.value)}>\n                        </Checkbox>\n                    </FormItem>\n                    <FormItem help='Maximum Players'>\n                        <Select \n                            value={maxPlayers} \n                            onChange={v => setMaxPlayers(v)}\n                        >\n                            {\n                                possiblePlayerNumbers.map(v => <Option value={v} key={v}>{v}</Option>)\n                            }\n                        </Select>\n                    </FormItem>\n                    \n                </div>\n            </Modal>\n      </>\n    )\n}\n","import React, { useState } from 'react'\nimport { Button, Divider, Input, Modal } from 'antd';\nimport { joinToGameSearch, joinToRoom, leaveGameSearch } from './../../socket/socketManager';\nimport styles from './JoinRoomModal.module.scss'\n\nexport default ({userName}) => {\n     const [isModalOpen, setIsModalOpen] = useState(false)\n     const [rooms, setRooms] = useState([])\n     const [roomId, setRoomId] = useState('')\n\n    const showModal = () => {\n        setRooms([])\n        setRoomId('')\n        joinToGameSearch((rooms) => {\n            console.log('Rooms update', rooms)\n            setRooms(rooms)\n        })\n        setIsModalOpen(true)\n    }\n\n    const closeModal = () => {\n        setIsModalOpen(false)\n        leaveGameSearch()\n    }\n\n    const joinToRoomById = (roomId) => {\n        joinToRoom(roomId, userName)\n        closeModal()\n    }\n\n     return (\n        <>\n            <Button\n                disabled={!userName}\n                type=\"primary\" \n                onClick={showModal}\n            >\n                Join Room\n            </Button>\n            <Modal\n                closable={false}\n                visible={isModalOpen}\n                title='Join To Room'\n                onCancel={closeModal}\n                footer={[\n                    <Button key=\"close\" onClick={closeModal}>\n                        Close\n                    </Button>\n                ]}\n            >\n                <div className={styles['available-rooms-container']}>\n                    <div className={styles['info-row']}>\n                        <div>Room Id</div>\n                        <div>Players</div>\n                        <div/>\n                    </div>\n                    {\n                        rooms.map((v, index) => (\n                            <div key={index} className={styles['info-row']}>\n                                <div>{v.roomId}</div>\n                                <div>{`${v.users.length} / ${v.maxPlayers}`}</div>\n                                <div>\n                                    <Button onClick={() => joinToRoomById(v.roomId)}>\n                                        Join\n                                    </Button>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n                {\n                    !!rooms.length &&\n                    <Divider/>\n                }\n                <div>\n                    <div style={{display: 'flex', marginTop: '10px'}}>\n                        <Input\n                            placeholder='Room ID' \n                            value={roomId}\n                            onChange={(e) => setRoomId(e.target.value)}\n                        />\n                        <Button onClick={() => joinToRoomById(roomId)}>\n                            Join\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </>\n     )\n}","import React, { useState, useEffect } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { joinToRoom } from '../socket/socketManager';\r\nimport { useSelector } from 'react-redux'\r\nimport styles from './Lobby.module.scss'\r\nimport { userSelector } from '../storage/user/user.selector';\r\nimport RoomTeams from '../RoomTeams/RoomTeams';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport CreateRoomModal from './CreateRoomModal/CreateRoomModal';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport JoinRoomModal from './JoinRoomModal/JoinRoomModal';\r\n\r\nconst FormItem = Form.Item\r\n\r\nexport default () => {\r\n    const [userName, setUserName] = useLocalStorage('userName', 'King')\r\n    const [isNameConfirmed, setIsNameConfirmed] = useState(false)\r\n    const user = useSelector(userSelector)\r\n    const isAllDisabled = !!user.roomId\r\n\r\n    useEffect(() => {\r\n        !user.roomId &&\r\n        window.location.pathname.length > 1 && \r\n        joinToRoom(window.location.pathname.slice(1), userName)\r\n    }, [])\r\n    \r\n    return (\r\n        <div className={styles['lobby-wrapper']}>\r\n            <div className={styles['lobby-content-box']}>\r\n                <img alt='logo' src='/logo.png' className={`${styles['logo']}  ${styles['logo-left']}`}/>\r\n                <img alt='logo' src='/logo.png' className={`${styles['logo']}  ${styles['logo-right']}`}/>\r\n                <h3 className={styles['header']}>\r\n                    Generals <br/>\r\n                    <span className={styles['subtytle']}>Kings Alliance</span>\r\n                </h3>\r\n                <FormItem help='User Name'>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Input\r\n                            onChange={e => setUserName(e.target.value)}\r\n                            value={userName}\r\n                            placeholder='User Name'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                        />\r\n\r\n                        {\r\n                            !user.roomId &&\r\n                            <Button \r\n                                type='primary'\r\n                                disabled={isNameConfirmed || isAllDisabled}\r\n                                onClick={() => setIsNameConfirmed(true)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </FormItem>\r\n                {\r\n                    !user.roomId &&\r\n                    <div style={{marginBottom: '25px'}}>\r\n                        <ButtonGroup>\r\n                            <CreateRoomModal\r\n                                userName={userName}\r\n                            />\r\n                            <JoinRoomModal\r\n                                userName={userName}\r\n                            />\r\n                        </ButtonGroup>\r\n                    </div>\r\n                }\r\n                {\r\n                    user.roomId && <RoomTeams/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messagesSelector = state => state.messages","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { messagesSelector } from '../storage/messages/messages.selector'\r\nimport { sendMessage } from '../socket/socketManager'\r\nimport styles from './LiveChat.module.scss'\r\nimport { Input, Button } from 'antd'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport classnames from 'classnames'\r\n\r\nexport default () => {\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [isHighlighted, setIsHighlighted] = useState(true)\r\n    const user = useSelector(userSelector)\r\n    const messages = useSelector(messagesSelector)\r\n\r\n    useEffect(() => {\r\n        if(!isVisible && !isHighlighted && messages.length){\r\n            setIsHighlighted(true)\r\n        }\r\n    }, [messages])\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage)\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles['chat-wrapper']}>\r\n            <div \r\n                onClick={() => {\r\n                    setIsVisible(!isVisible)\r\n                    setIsHighlighted(false)\r\n                }}\r\n                className={classnames(styles['chat-header'], {\r\n                    [styles['chat-header-attention']]: isHighlighted\r\n                })}>\r\n                Room Chat\r\n            </div>\r\n            {\r\n                isVisible &&\r\n                <div>\r\n                    <div className={styles['chat-history']}>\r\n                        {\r\n                            messages.map((v, index) => <div key={index}>{v}</div>)\r\n                        }\r\n                        {\r\n                            !user.roomId && <div style={{color: 'red'}}>Join to room to use Room Chat</div>\r\n                        }\r\n                    </div>\r\n                    <div className={styles['new-message']}>\r\n                        <Input \r\n                            onKeyDown={(e) => {\r\n                                e.key === 'Enter' && handleSendMessage()\r\n                            }}\r\n                            placeholder='Message....'\r\n                            value={newMessage}\r\n                            onChange={e => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button onClick={handleSendMessage}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import store from '../storage/store'\r\nimport { setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { activeFieldSelector, commandsSelector, boardSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport uniqid from 'uniqid'\r\nimport { addCommand } from '../socket/socketManager'\r\n\r\nconst CMD_MOVE_ALL = 'MOVE_ALL'\r\nconst CMD_MOVE_HALF = 'MOVE_HALF'\r\n\r\nexport const move = (key) => {\r\n    const commands = commandsSelector(store.getState())\r\n    const board = boardSelector(store.getState())\r\n    const activeField = activeFieldSelector(store.getState())\r\n    const moveType = moveTypeSelector(store.getState())\r\n    const prevX = activeField.x, prevY = activeField.y\r\n    \r\n    const {x, y, direction} = translateDirectionKeyToMove(prevX, prevY, key)\r\n\r\n    if(\r\n        !isPositionValid(x, y, board) || \r\n        !isPositionValid(prevX, prevY, board)\r\n    ) return\r\n\r\n    const tileTo = board[y][x]\r\n    if(tileTo.isVisible && tileTo.type === 'mountain') {\r\n        return\r\n    }\r\n\r\n    const nextCommand = {\r\n        from: {x: prevX, y: prevY},\r\n        direction,\r\n        id: uniqid(),\r\n        type: moveType === 'all' \r\n            ? CMD_MOVE_ALL\r\n            : CMD_MOVE_HALF\r\n    }\r\n\r\n    addCommand(nextCommand)\r\n    store.dispatch(setActiveField({x, y}))\r\n    store.dispatch(setCommands([...commands, nextCommand]))\r\n}\r\n\r\nconst isPositionValid = (x, y, board) => {\r\n    return (\r\n        x >= 0 && x < board[0].length &&\r\n        y >= 0 && y < board.length\r\n    )\r\n}\r\n\r\nconst translateDirectionKeyToMove = (x, y, key) => {\r\n    let direction\r\n    if(key === 'w' || key === 'ArrowUp') {\r\n        direction = 'u'\r\n        y--\r\n    }\r\n    if(key === 's' || key === 'ArrowDown') {\r\n        y++\r\n        direction = 'd'\r\n    }\r\n    if(key === 'a' || key === 'ArrowLeft') {\r\n        x--\r\n        direction = 'l'\r\n    }\r\n    if(key === 'd' || key === 'ArrowRight') {\r\n        x++\r\n        direction = 'r'\r\n    }\r\n\r\n    return {x, y, direction}\r\n}","import store from '../storage/store'\r\nimport { setActiveField, removeCommands, setMoveType } from '../storage/game/game.action'\r\nimport { move } from './Moves'\r\nimport { commandsSelector } from '../storage/game/game.selector'\r\nimport { eraseCommands } from '../socket/socketManager'\r\nimport { modifieZoom } from './Board'\r\n\r\nexport const clickOnActiveField = (x, y) => store.dispatch(setActiveField({x, y}))\r\nexport const setHalfUnitsMove = () => store.dispatch(setMoveType('half'))\r\n\r\nconst MOVE_KEYS = ['w', 's', 'a', 'd', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\r\nexport const keyboardListener\r\n = ({key}) => {\r\n    if(MOVE_KEYS.includes(key)) return move(key)\r\n    if(key === 'e') eraseLastCommand()\r\n    if(key === 'q') eraseAllCommands()\r\n    if(key === 'o') modifieZoom(-0.3, true)\r\n    if(key === 'p') modifieZoom(0.3, true)\r\n}\r\n\r\nconst eraseLastCommand = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n    const commandToErase = commands[commands.length - 1]\r\n    const commandIds = [commandToErase.id]\r\n\r\n    if(commandToErase.from) {\r\n        const {x, y} = commandToErase.from\r\n        clickOnActiveField(x, y)\r\n    }\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\nconst eraseAllCommands = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n\r\n    const commandIds = commands.map(v => v.id)\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { activeFieldSelector, moveTypeSelector, playerIdToTeamIdSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport { clickOnActiveField, setHalfUnitsMove } from './Reactions'\r\nimport {executeInstantCommand} from '../socket/socketManager'\r\nimport {isEqual} from 'lodash'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\nimport { playRandomCapitol } from '../audioPlayer/audioPlayer'\r\n\r\nexport default React.memo(({\r\n    field,\r\n    commands,\r\n    visibleFromAbility,\r\n    userColors,\r\n    abilitySelection,\r\n    notifyMouseOver,\r\n    clearAbilityHover,\r\n    isHoveredByAbility,\r\n    isActiveField,\r\n    moveType\r\n}) => {\r\n    const user = useSelector(userSelector)\r\n    const playerIdToTeamId = useSelector(playerIdToTeamIdSelector)\r\n    const dispatch = useDispatch()\r\n    const { type, owner, units, x, y, isVisible } = field\r\n    const isOwner = user.socketId === owner\r\n\r\n    const handleClickField = () => {\r\n        if (!isOwner) return\r\n        if (type === 'capitol' && Math.random() < 0.08) playRandomCapitol()\r\n        if (isActiveField && moveType === 'all') return setHalfUnitsMove()\r\n        clickOnActiveField(x, y)\r\n    }\r\n\r\n    const handleRightClickField = (event) => {\r\n        event.preventDefault()\r\n        if  (isClickableByAbility()) executeInstantCommand(abilitySelection, {x, y}) \r\n        if (abilitySelection) dispatch(setAbilitySelection(null))\r\n    }\r\n\r\n    const getBackgroundColor = () => {\r\n        if (!visibleFromAbility && !isVisible === true) return '#202020'\r\n        if(owner === 'n') return 'grey'\r\n        return userColors[owner] || 'grey'\r\n    }\r\n\r\n    const getFieldUnits = () => (visibleFromAbility || !!isVisible) && (units != null) && units\r\n    const isClickableByAbility = () => {\r\n        if(!abilitySelection) return false\r\n        if(abilitySelection === 'reborn' && type === 'castle' && playerIdToTeamId[owner] === playerIdToTeamId[user.socketId]) return true\r\n        if(abilitySelection === 'moveCapitol' && type === 'castle' && owner === user.socketId) return true\r\n        if(abilitySelection === 'plowingField' && type === 'plain' && owner === user.socketId) return true\r\n        if(abilitySelection === 'archeryFire' && (visibleFromAbility || isVisible)) return true\r\n        if(abilitySelection === 'scan') return true\r\n    }\r\n    // not-visible\r\n    return (\r\n        <div \r\n            onClick={handleClickField}\r\n            onContextMenu={handleRightClickField}\r\n            onMouseEnter={() => abilitySelection && (isClickableByAbility() ? notifyMouseOver(x, y) : clearAbilityHover())}\r\n            style={{\r\n                backgroundColor: getBackgroundColor(),\r\n                backgroundImage: getImageLink(type, isVisible || visibleFromAbility)\r\n            }}\r\n            className={classnames('board-tile', {\r\n                'clickable': isOwner || isClickableByAbility(),\r\n                'selected-field': isActiveField,\r\n                'hovered-by-ability' : isHoveredByAbility\r\n            })}\r\n        >\r\n            {\r\n                (isActiveField && moveType === 'half')\r\n                    ? '50%'\r\n                    :  getFieldUnits()\r\n            }\r\n            {\r\n                commands.map((v, index) => (\r\n                    <div key={index} className={getClassForArrow(v)}>\r\n                        {getSignForArrow(v)}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    if(\r\n        prevProps.commands.length === nextProps.commands.length &&\r\n        prevProps.isActiveField === nextProps.isActiveField &&\r\n        prevProps.moveType === nextProps.moveType &&\r\n        isEqual(prevProps.field, nextProps.field) &&\r\n        isEqual(prevProps.visibleFromAbility, nextProps.visibleFromAbility) &&\r\n        isEqual(prevProps.isHoveredByAbility, nextProps.isHoveredByAbility)\r\n    ) return true\r\n    return false\r\n})\r\n\r\nfunction getImageLink(type, isVisible) {\r\n    let imagePath = '';\r\n    isVisible = isVisible || window.debug\r\n    if (type === 'plain' || (!isVisible && type === 'capitol')) return 'unset'\r\n    else if(!isVisible && type !== 'capitol') imagePath = '/obstacle.png'\r\n    else if(type === 'castle') imagePath = '/city.png'\r\n    else if(type === 'mountain') imagePath = '/mountain.png'\r\n    else if(type === 'capitol') imagePath = '/crown.png'\r\n    else if(type === 'defendedCapitol') imagePath = '/defendedCrown.png'\r\n    else if(type === 'archeryTower') imagePath = '/archery_tower.png'\r\n    else if(type === 'observerTower') imagePath = '/observer_tower.png'\r\n    else if(type === 'abandonedFortress') imagePath = '/tower5G.png'\r\n\r\n    return `url(${process.env.PUBLIC_URL + imagePath})`\r\n}\r\n  \r\nfunction getSignForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return '↑'\r\n        case 'd':return '↓'\r\n        case 'l':return '←'\r\n        case 'r':return '→'\r\n        default: return 'x'\r\n    }\r\n}\r\n\r\nfunction getClassForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return 'arrow-container arrow-up'\r\n        case 'd':return 'arrow-container arrow-down'\r\n        case 'l':return 'arrow-container arrow-left'\r\n        case 'r':return 'arrow-container arrow-right'\r\n        default: return alert('command without direction')\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { boardSelector, commandsSelector, playerRoleSelector, userColorsSelector, abilityVisibleFieldsSelector, passiveAbilitiesSelector, usersStatsSelector, playersSelector, abilitySelectionSelector, activeFieldSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport './Board.css'\r\nimport Field from './Field'\r\nimport { keyboardListener } from './Reactions'\r\nimport store from '../storage/store'\r\n\r\nexport default ({\r\n    overridedBoard,\r\n    overridedUserColors\r\n}) => {\r\n    const board = overridedBoard || useSelector(boardSelector)\r\n    const userColors = overridedUserColors || useSelector(userColorsSelector)\r\n    const commands = useSelector(commandsSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const visibleFields = useSelector(abilityVisibleFieldsSelector)\r\n    const passiveAbilities = useSelector(passiveAbilitiesSelector)\r\n    const abilitySelection = useSelector(abilitySelectionSelector)\r\n    const activeField = useSelector(activeFieldSelector)\r\n    const moveType = useSelector(moveTypeSelector)\r\n    const [abilityHoveredFields, setAbilityHoveredFields] = useState({})\r\n\r\n    const isAllVisible = playerRole === 'spectator' || playerRole === 'historySpectator' || window.debug === true\r\n    const allCrownsVisible= passiveAbilities.includes('revealCapitols')\r\n\r\n    const handleHoverField = (x, y) => {\r\n        if (!abilitySelection) return\r\n        const fields = {}\r\n        for (let iX = x - 1; iX <= x + 1; iX++) {\r\n            for (let iY = y - 1; iY <= y + 1; iY++) {\r\n                if(!fields[iX]) fields[iX] = {}\r\n                fields[iX][iY] = true\r\n            }\r\n        }\r\n        setAbilityHoveredFields(fields)\r\n    }\r\n\r\n    const clearAbilityHover = () => setAbilityHoveredFields({})\r\n\r\n    useEffect(() => {\r\n        centerOnCapitol()\r\n        if(playerRole !== 'historySpectator') {\r\n            window.addEventListener('keydown', keyboardListener)\r\n        }\r\n        window.addEventListener('mousemove', mouseMoveListener)\r\n        window.addEventListener('mousewheel', mouseWheelListener)\r\n        return () => {\r\n            if(playerRole !== 'historySpectator') {\r\n                window.removeEventListener('keydown', keyboardListener)\r\n            }\r\n            window.removeEventListener('mousemove', mouseMoveListener)\r\n            window.removeEventListener('mousewheel', mouseWheelListener)\r\n        }\r\n    }, [])\r\n\r\n    const commandsForFields = commands.reduce((acc, v) => {\r\n        const key = `${v.from.x}-${v.from.y}`\r\n        if(!acc[key]) acc[key] = []\r\n        acc[key].push(v)\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id='board'\r\n                className='board-container'\r\n                style={{left: '10px', top: \"10px\", transform: \"scale(1)\"}}\r\n            >\r\n                {\r\n                    board.map((row, index) => (\r\n                        <div key={index} className='board-row '>\r\n                            {\r\n                                row.map((v, index) => (\r\n                                    <Field\r\n                                        key={index}\r\n                                        abilitySelection={abilitySelection}\r\n                                        userColors={userColors}\r\n                                        visibleFromAbility={isAllVisible || visibleFields[v.x]?.[v.y] || (allCrownsVisible && (v.type === 'capitol' || v.type === 'defendedCapitol'))}\r\n                                        commands={commandsForFields[`${v.x}-${v.y}`] || []}\r\n                                        field={v}\r\n                                        notifyMouseOver={handleHoverField}\r\n                                        clearAbilityHover={clearAbilityHover}\r\n                                        isHoveredByAbility={abilitySelection && abilityHoveredFields[v.x]?.[v.y]}\r\n                                        isActiveField={v.x === activeField.x && v.y === activeField.y}\r\n                                        moveType={moveType}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mouseMoveListener({movementX, movementY, buttons}) {\r\n    if(buttons !== 1) return\r\n    const board = document.getElementById('board')\r\n    const {left, top} = board.style\r\n    board.style.left = (Number(left.slice(0, -2)) + movementX) + 'px'\r\n    board.style.top = (Number(top.slice(0, -2)) + movementY) + 'px'\r\n}\r\n\r\nfunction mouseWheelListener({deltaY}) {\r\n    modifieZoom(deltaY)\r\n}\r\n\r\nexport function modifieZoom(scrollValue, forceValue) {\r\n    const board = document.getElementById('board')\r\n    const currnetScale = Number(board.style.transform.slice(6, -1))\r\n    const scaleModifier = forceValue \r\n        ? scrollValue\r\n        : (scrollValue > 0\r\n            ? -0.1\r\n            : 0.1\r\n        )\r\n    const nextScale = currnetScale + scaleModifier\r\n    if (nextScale > 2 || nextScale < 0.3) return\r\n\r\n    board.style.transform = `scale(${String(nextScale).padEnd(3, '.0')})`\r\n} \r\n\r\n\r\n\r\n// TO DO: rewrite to reactive way\r\nfunction centerOnCapitol() {\r\n    setTimeout(() => {\r\n        try {\r\n            const gState = store.getState()\r\n            const userStats = gState.game.usersStats\r\n            const socketId = gState.user.socketId\r\n            const capitol = userStats[socketId].ownedSpecialFields[0]\r\n            if(!capitol) console.error('# no capitol for player found')\r\n            const {x, y} = capitol\r\n            const board = document.getElementById('board')\r\n            board.style.top = `${(window.innerHeight / 2) - 45 * y}px`\r\n            board.style.left = `${(window.innerWidth / 2) - 45 * x}px`\r\n        } catch(e) {\r\n            console.error('Data to center map not available yet')\r\n            console.error(e)\r\n        }\r\n    }, 1750)\r\n}","import React from 'react'\r\nimport styles from './Settings.module.scss'\r\nimport { Slider, Form, Divider, Select, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { modifyGameSetting } from '../storage/settings/settings.action'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport {debounce} from 'lodash'\r\nimport { setRoomSettings, startGame } from '../socket/socketManager'\r\nimport store from '../storage/store'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst AVAILABLE_GAME_MODES = [\r\n    {name: 'Conquest', description: 'Capture all opponent capitols'}\r\n]\r\nconst DISABLED_GAME_MODES = [\r\n    {name: 'Units Collector', descroption: 'Gather the biggest army in whole state'}, \r\n    {name: 'King of Castles', descroption: 'Capture the castles around the whole world'}, \r\n    {name: 'Territory Wars', descroption: 'Rule the whole world'}, \r\n]\r\n\r\nconst notifySettingsChange = debounce(\r\n    (settings) =>  setRoomSettings(settings),\r\n    500\r\n)\r\n\r\nexport default () => {\r\n    const settings = useSelector(gameSettingsSelector)\r\n    const user = useSelector(userSelector)\r\n    const players = useSelector(playersSelector)\r\n    const dispatch = useDispatch()\r\n    const isHost = user.socketId === players[0]?.socketId\r\n\r\n    const {\r\n        mapWidth,\r\n        mapHeight,\r\n        gameMode,\r\n        nonAggression,\r\n        castlesDensity,\r\n        mountainDensity,\r\n        castleProduction,\r\n        fieldProduction,\r\n        turnDuration,\r\n        archeryTowersDensity,\r\n        observerTowersDensity,\r\n        abandonedFortressesDensity\r\n    } = settings\r\n\r\n    const handleChangeSetting = (settingName, value) => {\r\n        dispatch(modifyGameSetting(settingName, value))\r\n        notifySettingsChange(gameSettingsSelector(store.getState()))\r\n    }\r\n\r\n    const handleStartBattle = () => startGame(settings)\r\n\r\n    if(!user.roomId) return null\r\n\r\n    return (\r\n        <div className={styles['settings-wrapper']}>\r\n            <div className={styles['settings-content-box']}>\r\n                <Button\r\n                    onClick={() => handleStartBattle()}\r\n                    type={\"primary\"}\r\n                    style={{width: '300px', marginTop: '10px'}}\r\n                    disabled={!isHost}\r\n                >\r\n                    Battle!\r\n                </Button>\r\n                <div className={styles['settings-list']}>\r\n                    <Divider>Only Host Can Modify This Settings</Divider>\r\n                    <Divider>Map Dimmensions</Divider>\r\n                    <div>\r\n                        <FormItem help={`Map Width: ${mapWidth}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapWidth}\r\n                                onChange={(v) => handleChangeSetting('mapWidth', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Map Height: ${mapHeight}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapHeight}\r\n                                onChange={(v) => handleChangeSetting('mapHeight', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Game Rules</Divider>\r\n                        <FormItem help={`Duration Of Non-Aggression Pact: ${nonAggression}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={10}\r\n                                max={300}\r\n                                step={10}\r\n                                value={nonAggression}\r\n                                onChange={(v) => handleChangeSetting('nonAggression', v)}\r\n                            />\r\n                        </FormItem>\r\n                    <Divider>Map Objects</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Density: ${castlesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={castlesDensity}\r\n                                onChange={(v) => handleChangeSetting('castlesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Mountains Density: ${mountainDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={mountainDensity}\r\n                                onChange={(v) => handleChangeSetting('mountainDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`5G Towers Density: ${abandonedFortressesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={abandonedFortressesDensity}\r\n                                onChange={(v) => handleChangeSetting('abandonedFortressesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Observer Towers Density: ${observerTowersDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={observerTowersDensity}\r\n                                onChange={(v) => handleChangeSetting('observerTowersDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Archery Towers Density: ${archeryTowersDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={archeryTowersDensity}\r\n                                onChange={(v) => handleChangeSetting('archeryTowersDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Other</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Units Production Time: ${castleProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={castleProduction}\r\n                                onChange={(v) => handleChangeSetting('castleProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Field Units Production Time: ${fieldProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={fieldProduction}\r\n                                onChange={(v) => handleChangeSetting('fieldProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Turn Duration: ${turnDuration} ms`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={250}\r\n                                max={3000}\r\n                                step={250}\r\n                                value={turnDuration}\r\n                                onChange={(v) => handleChangeSetting('turnDuration', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { playersSelector, userColorsSelector, usersStatsSelector, tourCounterSelector, playerRoleSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport styles from './GameInfo.module.scss'\r\nimport { Button } from 'antd'\r\nimport { setPlayerRole } from '../storage/game/game.action'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { playPeacfullBackgoundMusic } from '../audioPlayer/audioPlayer'\r\nimport { userSelector } from '../storage/user/user.selector'\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const userColors = useSelector(userColorsSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const user = useSelector(userSelector)\r\n    const tour = useSelector(tourCounterSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const {nonAggression} = useSelector(gameSettingsSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickLobby = () => dispatch(setPlayerRole('lobby'))\r\n    const handleClickAcceptFailure = () => dispatch(setPlayerRole('spectator'))\r\n    const handleClickHistory = () => {\r\n        playPeacfullBackgoundMusic()\r\n        dispatch(setPlayerRole('historySpectator'))\r\n    }\r\n\r\n    return (\r\n        <div className={styles['info-panel']}>\r\n            <div className={classnames(styles['grid-container'])}>\r\n                <div/>\r\n                <div>\r\n                    Team\r\n                </div>\r\n                <div className={styles['room-header']}>\r\n                    Player\r\n                </div>\r\n                <div>Army</div>\r\n                <div>Lands</div>\r\n                {\r\n                    players.map(v => (\r\n                        <React.Fragment key={v.socketId}>\r\n                            <div>\r\n                                <div\r\n                                    className={styles['color-box']}\r\n                                    style={{background: userColors[v.socketId]}}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {v.teamId}\r\n                            </div>\r\n                            <div>\r\n                                {`${v.userName}`}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.units || 0}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.lands || 0}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div>\r\n                Tour: {tour} / {nonAggression}\r\n            </div>\r\n            <div>\r\n                {\r\n                    playerRole === 'spectator'  &&\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleClickHistory}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Battle History\r\n                    </Button>\r\n                }\r\n                {\r\n                    (playerRole === 'spectator' || playerRole === 'historySpectator') &&\r\n                    <Button\r\n                        onClick={handleClickLobby}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Back To Lobby!\r\n                    </Button>\r\n                }\r\n                {\r\n                    playerRole === 'fighter' && userStats[user.socketId]?.lands === 0 &&\r\n                    <Button\r\n                        onClick={handleClickAcceptFailure}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Accept Failure\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport styles from './AudioControl.module.scss'\r\nimport { Button, Slider } from 'antd'\r\nimport { SoundOutlined, CommentOutlined } from '@ant-design/icons'\r\nimport * as ap from '../audioPlayer/audioPlayer'\r\nimport useLocalStorage from './../hooks/useLocalStorage';\r\n\r\nexport default () => {\r\n    const [volumeLevel, setVolumeLevel] = useLocalStorage('volume1', 50)\r\n    const [volumeLevel2, setVolumeLevel2] = useLocalStorage('volume2', 100)\r\n    useEffect(\r\n        () => {\r\n            ap.setVolume(volumeLevel / 100)\r\n            ap.setVolume2(volumeLevel2 / 100)\r\n        }, [volumeLevel, volumeLevel2]\r\n    )\r\n\r\n    return (\r\n        <div className={styles['audio-panel']}>\r\n            <div className={styles['controller']}>\r\n                <Button\r\n                    onClick={() => setVolumeLevel2(volumeLevel2 ? 0 : 100)}\r\n                    icon={<CommentOutlined />}\r\n                />\r\n                <div className={styles['slider-wrapper']}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={setVolumeLevel2}\r\n                        value={volumeLevel2}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={styles['controller']}>\r\n                <Button\r\n                    onClick={() => setVolumeLevel(volumeLevel ? 0 : 100)}\r\n                    icon={<SoundOutlined />}\r\n                />\r\n                <div className={styles['slider-wrapper']}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={setVolumeLevel}\r\n                        value={volumeLevel}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const historySelector = state => state.history.history\r\nexport const historyUserColorsSelector = state => state.history.userColors\r\n","import { useState, useRef, useEffect } from \"react\"\r\n\r\nconst useRefState = initialValue => {\r\n    const [state, setState] = useState(initialValue)\r\n    const stateRef = useRef(state)\r\n    useEffect(\r\n      () => { stateRef.current = state },\r\n      [state]\r\n    )\r\n    return [state, stateRef, setState]\r\n}\r\n\r\nexport default useRefState","import React, { useState } from 'react'\r\nimport { historySelector, historyUserColorsSelector } from '../storage/history/history.selector'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styles from './BattleHistory.module.scss'\r\nimport Board from '../Game/Board'\r\nimport { Slider, Button } from 'antd'\r\nimport { DoubleLeftOutlined, BackwardOutlined, CaretLeftOutlined, CaretRightOutlined, FastForwardOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport useRefState from '../hooks/useRefState'\r\nimport { updateStats } from '../storage/game/game.action'\r\nimport { flatten } from 'lodash'\r\n\r\n\r\nexport default () => {\r\n    const history = useSelector(historySelector)\r\n    const historyUserColors = useSelector(historyUserColorsSelector)\r\n    const [tourIndex, tourIndexRef, setTourIndex] = useRefState(0)\r\n    const [board, setBoard] = useState(history[0])\r\n    const [speed, speedRef, setSpeed] = useRefState(25)\r\n    const [isAutoPlay, isAutoPlayRef, setIsAutoPlay] = useRefState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const updateBoard = (tourCounter) => {\r\n        setTourIndex(tourCounter)\r\n        setBoard(history[tourCounter])\r\n        const usersStats = calculateUserStatsLocal(history[tourCounter], Object.keys(historyUserColors))\r\n        dispatch(updateStats({\r\n            usersStats, tourCounter\r\n        }))\r\n    }\r\n\r\n    const incrementBoard = () => {\r\n        if(!history[tourIndexRef.current + 1]) {\r\n            return false\r\n        }\r\n        updateBoard(tourIndexRef.current + 1)\r\n        return true\r\n    }\r\n\r\n    const rewindBack = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current - frames\r\n        updateBoard(nextBoardIndex < 0 \r\n            ? 0 \r\n            : nextBoardIndex\r\n        )\r\n    }\r\n\r\n    const rewindForward = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current + frames\r\n        updateBoard(nextBoardIndex >= history.length \r\n                        ? (history.length - 1) \r\n                        : nextBoardIndex\r\n        )\r\n    }\r\n\r\n\r\n    const autoFrma = (init) => {\r\n        if((init || isAutoPlayRef.current) && incrementBoard()) setTimeout(() => {\r\n            autoFrma()\r\n        }, 1000 / speedRef.current)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles['speed-slider']}>\r\n                <Slider\r\n                    max={100}\r\n                    min={1}\r\n                    step={1}\r\n                    value={speed}\r\n                    onChange={setSpeed}\r\n                />\r\n                <div>\r\n                    Speed x {speed}\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        icon={<DoubleLeftOutlined />}\r\n                        onClick={() => rewindBack(40)}\r\n                    />\r\n                    <Button\r\n                        icon={<BackwardOutlined/>}\r\n                        onClick={() => rewindBack(20)}\r\n                    />\r\n                    <Button\r\n                        icon={<CaretLeftOutlined />}\r\n                        onClick={() => rewindBack(10)}\r\n                    />\r\n                    {\r\n                        !isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => {\r\n                                setIsAutoPlay(true)\r\n                                autoFrma(true)\r\n                            }}\r\n                        >\r\n                            Auto Play\r\n                        </Button>\r\n                    }\r\n                    {\r\n                        isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => setIsAutoPlay(false)}\r\n                        >\r\n                            Pause\r\n                        </Button>\r\n                    }\r\n                    <Button\r\n                        icon={<CaretRightOutlined />}\r\n                        onClick={() => rewindForward(10)}\r\n                    />\r\n                    <Button\r\n                        icon={<FastForwardOutlined />}\r\n                        onClick={() => rewindForward(20)}\r\n                    />                \r\n                    <Button\r\n                        icon={<DoubleRightOutlined />}\r\n                        onClick={() => rewindForward(40)}\r\n                    />                \r\n                </div>\r\n            </div>\r\n            {\r\n                board &&\r\n                <Board\r\n                    overridedBoard={board}\r\n                    overridedUserColors={historyUserColors}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction calculateUserStatsLocal(board, userIds) {\r\n    debugger\r\n    const userStats = userIds.reduce((acc, v) => ({\r\n        ...acc, \r\n        [v]: {\r\n            units: 0,\r\n            lands: 0,\r\n            castle: 0,\r\n            archeryTower: 0,\r\n            observerTower: 0,\r\n            abandonedFortress: 0,\r\n            ownedSpecialFields: []\r\n        }\r\n    }), {})\r\n\r\n    flatten(board)\r\n        .forEach((field) => {\r\n            const {owner, units, type} = field\r\n            if (owner == 'n' || !userStats[owner]) return\r\n            const stats = userStats[owner]\r\n            stats.units += units\r\n            stats.lands++\r\n            if (type === 'plain') return\r\n            if (type === 'castle') stats.castle++ \r\n            if(type === 'archeryTower') stats.archeryTower++\r\n            if(type === 'observerTower') stats.observerTower++\r\n            if(type === 'abandonedFortress') stats.abandonedFortress++\r\n            stats.ownedSpecialFields.push(field)\r\n        })\r\n    return userStats\r\n}","import React from 'react'\r\nimport { Popover, Divider } from 'antd'\r\nimport styles from './Abilities.module.scss'\r\nimport classnames from 'classnames'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\n\r\nexport default ({\r\n    ability,\r\n    handleClick,\r\n    disabled=false,\r\n    selectedAbility,\r\n    cooldown,\r\n    isPassive,\r\n    isOwned\r\n}) => {\r\n    const dispatch = useDispatch()\r\n    const { name, description, icon, id, maxCooldown, cost, from} = ability\r\n\r\n    const handleAbiliyBlockClick = () => {\r\n        if(selectedAbility === id) dispatch(setAbilitySelection(null))\r\n        else !disabled && handleClick()\r\n    }\r\n\r\n    const isDisabled = (cooldown || disabled)\r\n\r\n    return (\r\n        <Popover \r\n            title={name}\r\n            placement=\"rightTop\"\r\n            content={(\r\n                <div className={styles['ability-description-box']}>\r\n                    <div className={styles['popover-stats']}>\r\n                        <div>{`Cost: ${cost} units from ${from}`}</div>\r\n                        {\r\n                            !isPassive &&\r\n                            <div>Cooldown: {cooldown || '0'}/{maxCooldown}</div>\r\n                        }\r\n                        {\r\n                            isPassive &&\r\n                            <div>Passive Ability</div>\r\n                        }\r\n                    </div>\r\n                    {description}\r\n                    \r\n                </div>\r\n            )}\r\n        >\r\n            <div className={styles['ability-block-container']}>\r\n                <div\r\n                    onClick={handleAbiliyBlockClick}\r\n                    style={{backgroundImage: icon}}\r\n                    className={classnames(styles['ability-block'], {\r\n                        [styles['selected-block']]: selectedAbility === id,\r\n                        [styles['clickable']]: !isOwned && !isDisabled\r\n                    })}\r\n                >\r\n                    <div\r\n                        style={{boxShadow: !isOwned ? `inset 0 0px 3px ${Math.ceil(40*cooldown/maxCooldown)}px rgba(0, 0, 0, 0.8)` : 'inset 0 0px 3px 40px rgba(255, 223, 0, 0.35'}}\r\n                        className={classnames(styles['filler-block'], {\r\n                            [styles['filler-block__disabled']]: !isOwned && isDisabled\r\n                        })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Popover>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './Abilities.module.scss'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { usersStatsSelector, abilitySelectionSelector, cooldownsSelector, passiveAbilitiesSelector } from '../storage/game/game.selector'\r\nimport Ability from './Ability'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\nimport { executeInstantCommand } from '../socket/socketManager'\r\nimport { playArcheriesReady, playPlowingFieldConfirmation, playMoveCapitolConfirmation, playCrownFinder, playAutumnSelect } from '../audioPlayer/audioPlayer'\r\n\r\nconst getImageLink = (imgPath) => `url(${process.env.PUBLIC_URL + imgPath})`\r\nconst abilityReborn = {\r\n    name: 'Reborn From Ashes',\r\n    id: 'reborn',\r\n    type: 'select',\r\n    icon: getImageLink('/ability_reborn.jpg'),\r\n    description: 'Reborn in on of ally\\'s castle. Click on ability and select (by right click) a castle with minimum 100 units to reborn there.',\r\n    cost: 100,\r\n    from: 'ally castle',\r\n    maxCooldown: 500,\r\n}\r\n\r\nconst capitolAbilities = [\r\n    {\r\n        name: 'Unite Army',\r\n        id: 'unite',\r\n        icon: getImageLink('/ability_uniteArmy.png'),\r\n        type: 'instant',\r\n        description: 'Gather all units from whole kingdom in your capitol immediately.',\r\n        cost: 0,\r\n        from: 'capitol',\r\n        maxCooldown: 500,\r\n    },\r\n    {\r\n        name: 'Move Capitol',\r\n        id: 'moveCapitol',\r\n        icon: getImageLink('/ability_moveCapitol.jpg'),\r\n        type: 'select',\r\n        description: 'Select owned castle to your new capitol. Select ability and right click on selected castle.',\r\n        cost: 100,\r\n        from: 'capitol',\r\n        maxCooldown: 500,\r\n    },\r\n    {\r\n        name: 'Ultra Defender',\r\n        id: 'defender',\r\n        icon: getImageLink('/logo.png'),\r\n        type: 'instant',\r\n        description: 'Units inside you capitol fight with double power for short period',\r\n        cost: 50,\r\n        from: 'capitol',\r\n        maxCooldown: 10000,\r\n    },\r\n    {\r\n        name: 'Plowing The Field',\r\n        id: 'plowingField',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_plowingField.png'),\r\n        description: 'Clear one of controlled fields from your units to hide from enemies.',\r\n        cost: 25,\r\n        from: 'capitol',\r\n        maxCooldown: 100,\r\n    },\r\n]\r\n\r\nconst builidingAbilities = [\r\n    {\r\n        name: 'Scan Area',\r\n        id: 'scan',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_observer.png'),\r\n        description: 'Scan area you can not reach. Selected fields (by right click) will be visible even if you have no units in this area.',\r\n        cost: 25,\r\n        from: 'observation tower',\r\n        fromFieldName: 'observerTower',\r\n        maxCooldown: 50,\r\n    },\r\n    {\r\n        name: 'Longrange Archery Fire',\r\n        id: 'archeryFire',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_archery.png'),\r\n        description: 'Select (by right click) one of visible fields and order archeries longrange fire. Damage 75% of units on empty areas and 25% in buildings',\r\n        cost: 300,\r\n        from: 'archery tower',\r\n        fromFieldName: 'archeryTower',\r\n        maxCooldown: 400,\r\n    },\r\n    {\r\n        name: 'Autumn Of The Middle Ages',\r\n        id: 'autumn',\r\n        type: 'instant',\r\n        icon: getImageLink('/ability_autumn.png'),\r\n        description: 'Cause a tragedy across all kingdoms. After tragedy only one unit on every standard field will remain.',\r\n        cost: 1000,\r\n        from: 'abondoned fortress',\r\n        fromFieldName: 'abandonedFortress',\r\n        maxCooldown: 2500,\r\n    },\r\n]\r\n\r\nconst passiveAbilities = [\r\n    {\r\n        name: 'Reveal Capitols',\r\n        id: 'revealCapitols',\r\n        type: 'instant',\r\n        icon: getImageLink('/ability_show_crown.PNG'),\r\n        description: 'Make all capitols visible on map (only you can see it).',\r\n        cost: 3000,\r\n        from: 'capitol',\r\n        maxCooldown: 1,\r\n    }\r\n]\r\n\r\n\r\nexport default () => {\r\n    const user = useSelector(userSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const selectedAbility = useSelector(abilitySelectionSelector)\r\n    const cooldowns = useSelector(cooldownsSelector)\r\n    const gatheredPassiveAbilities = useSelector(passiveAbilitiesSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const playerStats = userStats[user.socketId]\r\n    if (!playerStats) return null\r\n    const isPlayerDead = !playerStats.units\r\n    const handleSetAbilitySelectionMode = (ability) => dispatch(setAbilitySelection(ability)) \r\n    const handleClickAbility = (ability) => {\r\n        const {type, id} = ability\r\n        if(type === 'select') handleSetAbilitySelectionMode(id)\r\n        if(type === 'instant') executeInstantCommand(id)\r\n\r\n        if(id === 'archeryFire') playArcheriesReady()\r\n        if(id === 'autumn') playAutumnSelect()\r\n        if(id === 'revealCapitols' || id === 'scan') playCrownFinder()\r\n        if(id === 'moveCapitol') playMoveCapitolConfirmation()\r\n        if(id === 'plowingField') playPlowingFieldConfirmation()\r\n        \r\n    }\r\n    const capitol = playerStats.ownedSpecialFields.find(v => v.type === 'capitol' || v.type === 'defendedCapitol')\r\n\r\n\r\n    return (\r\n        <div className={styles['ability-panel']}>\r\n            {\r\n                isPlayerDead &&\r\n                <Ability\r\n                    handleClick={() => handleClickAbility(abilityReborn)}\r\n                    disabled={false}\r\n                    ability={abilityReborn}\r\n                    selectedAbility={selectedAbility}\r\n                    cooldown={cooldowns[abilityReborn.id]}\r\n                />\r\n            }\r\n            {\r\n                !isPlayerDead &&\r\n                capitolAbilities.map(v => (\r\n                    <Ability\r\n                        key={v.id}\r\n                        handleClick={() => handleClickAbility(v)}\r\n                        disabled={capitol.units <= v.cost}\r\n                        ability={v}\r\n                        selectedAbility={selectedAbility}\r\n                        cooldown={cooldowns[v.id]}\r\n                    />\r\n                ))\r\n            }\r\n            {\r\n                !isPlayerDead &&\r\n                passiveAbilities.map(v => (\r\n                    <Ability\r\n                        key={v.id}\r\n                        handleClick={() => handleClickAbility(v)}\r\n                        disabled={capitol.units <= v.cost}\r\n                        isPassive={true}\r\n                        isOwned={gatheredPassiveAbilities.includes(v.id)}\r\n                        ability={v}\r\n                        selectedAbility={selectedAbility}\r\n                        cooldown={cooldowns[v.id]}\r\n                    />\r\n                ))\r\n            }\r\n            {\r\n                builidingAbilities\r\n                    .filter(v => playerStats[v.fromFieldName])\r\n                    .map(v => (\r\n                        <Ability\r\n                            key={v.id}\r\n                            handleClick={() => handleClickAbility(v)}\r\n                            disabled={!playerStats.ownedSpecialFields.some(field => field.type === v.fromFieldName && field.units > v.cost)}\r\n                            ability={v}\r\n                            selectedAbility={selectedAbility}\r\n                            cooldown={cooldowns[v.id]}\r\n                        />\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Modal } from 'antd'\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\nimport styles from './UserStats.module.scss'\r\n\r\nexport default () => {\r\n    const [isModalOpened, setIsModalOpened] = useState(false)\r\n    const players = useSelector(playersSelector)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', ({key}) => key === 'Tab' && setIsModalOpened(false))\r\n        window.addEventListener('keydown', ({key}) => key === 'Tab' && setIsModalOpened(true))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            closable={false}\r\n            title=\"Stats\"\r\n            visible={isModalOpened}\r\n            footer={[]}\r\n        >\r\n           {\r\n               !players.length && 'No players in room'\r\n           }\r\n           {\r\n                !!players.length &&\r\n                <div>\r\n                    <div className={styles['row']}>\r\n                        <div>Name</div>\r\n                        <div>Wins</div>\r\n                        <div>Failures</div>\r\n                    </div>\r\n                    {\r\n                        players\r\n                            .sort(v => v.wins)\r\n                            .map(v => (\r\n                                <div key={v.socketId} className={styles['row']}>\r\n                                    <div>{v.userName}</div>\r\n                                    <div>{v.wins}</div>\r\n                                    <div>{v.failures}</div>\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </div>\r\n           }\r\n        </Modal>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport Lobby from './Lobby/Lobby.jsx';\nimport LiveChat from './LiveChat/LiveChat';\nimport Board from './Game/Board';\nimport Settings from './Settings/Settings';\nimport { useSelector } from 'react-redux';\nimport GameInfo from './GameInfo/GameInfo';\nimport { playerRoleSelector } from './storage/game/game.selector';\nimport { playOpeningMusic } from './audioPlayer/audioPlayer';\nimport AudioControl from './AudioControl/AudioControl';\nimport './App.css'\nimport BattleHistory from './BattleHistory/BattleHistory';\nimport Abilities from './Abilities/Abilities';\nimport UserStats from './UserStats/UserStats.jsx';\n\nfunction App() {\n  const playerRole = useSelector(playerRoleSelector)\n  useEffect(() => {\n    playOpeningMusic()\n  }, [])\n\n  return (\n    <div>\n      <AudioControl/>\n      {\n        playerRole === 'fighter' &&\n        <Abilities/>\n      }\n      <GameInfo/>\n      <LiveChat/>\n      {\n        playerRole ==='lobby' &&\n        <>\n          <Lobby/>\n          <Settings/>\n        </>\n      }\n      {\n        (playerRole === 'fighter' || playerRole === 'spectator') &&\n        <Board/>\n      }\n      {\n        playerRole === 'historySpectator' &&\n        <BattleHistory/>\n      }\n      <UserStats/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './storage/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-wrapper\":\"LiveChat_chat-wrapper__3yyAJ\",\"chat-history\":\"LiveChat_chat-history__2VHgG\",\"chat-header\":\"LiveChat_chat-header__1SPj-\",\"chat-header-attention\":\"LiveChat_chat-header-attention__20zKz\",\"new-message\":\"LiveChat_new-message__1I6jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audio-panel\":\"AudioControl_audio-panel__1D5FQ\",\"controller\":\"AudioControl_controller__2uprX\",\"slider-wrapper\":\"AudioControl_slider-wrapper__3K4Ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms-wrapper\":\"RoomTeams_rooms-wrapper__3evw5\",\"room-header\":\"RoomTeams_room-header__1i6AB\",\"room-name\":\"RoomTeams_room-name__2odmr\",\"players-block\":\"RoomTeams_players-block__24cKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-panel\":\"GameInfo_info-panel__3NB7p\",\"grid-container\":\"GameInfo_grid-container__1DJ7y\",\"color-box\":\"GameInfo_color-box__kQ-B1\"};"],"sourceRoot":""}