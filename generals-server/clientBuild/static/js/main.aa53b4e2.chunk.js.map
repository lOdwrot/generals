{"version":3,"sources":["BattleHistory/BattleHistory.module.scss","Abilities/Abilities.module.scss","Lobby/Lobby.module.scss","config.js","storage/game/game.action.js","storage/user/user.reducer.js","storage/messages/message.reducer.js","storage/game/game.reducer.js","storage/settings/settings.reducer.js","storage/history/history.action.js","storage/history/history.reducer.js","storage/reducer.js","storage/user/user.action.js","storage/messages/message.action.js","storage/settings/settings.action.js","storage/store.js","audioPlayer/audioPlayer.js","storage/game/game.selector.js","storage/settings/settings.selector.js","socket/socketManager.js","storage/user/user.selector.js","RoomTeams/RoomTeams.jsx","Lobby/Lobby.jsx","storage/messages/messages.selector.js","LiveChat/LiveChat.jsx","Game/Moves.js","Game/Reactions.js","Game/Field.jsx","Game/Board.jsx","Settings/Settings.jsx","GameInfo/GameInfo.jsx","AudioControl/AudioControl.jsx","storage/history/history.selector.js","hooks/useRefState.js","BattleHistory/BattleHistory.jsx","Abilities/Ability.jsx","Abilities/Abilities.jsx","App.js","serviceWorker.js","index.js","AudioControl/AudioControl.module.scss","RoomTeams/RoomTeams.module.scss","LiveChat/LiveChat.module.scss","GameInfo/GameInfo.module.scss","Settings/Settings.module.scss"],"names":["module","exports","config","address","SET_BOARD","setActiveField","coordinates","type","payload","setCommands","commands","removeCommands","commandIds","setPlayerRole","role","setAbilitySelection","ability","INITIAL_STATE","userName","socketId","roomId","INIT_COOLDOWNS","reborn","unite","moveCapitol","defender","plowingField","scan","autumn","archery","players","playerIdToTeamId","board","activeField","x","y","userColors","usersStats","tourCounter","playerRole","moveType","abilitySelection","cooldowns","abilityVisibleFields","passiveAbilities","privateSettings","gameSettings","mapWidth","mapHeight","gameMode","nonAggression","castlesDensity","mountainDensity","archeryTowersDensity","observerTowersDensity","abandonedFortressesDensity","castleProduction","fieldProduction","turnDuration","setUserColorsInHistory","history","reducers","user","state","action","find","v","messages","game","reduce","acc","teamId","color","actions","filter","includes","id","nextCooldowns","Object","keys","forEach","key","nextFields","settings","settingName","value","rootReducer","combineReducers","middlwares","thunk","audio","dialogsAudio","dialogsAudio2","createStoreWithMiddleware","applyMiddleware","createStore","reducer","playersSelector","boardSelector","activeFieldSelector","commandsSelector","userColorsSelector","playerRoleSelector","usersStatsSelector","tourCounterSelector","moveTypeSelector","abilitySelectionSelector","playerIdToTeamIdSelector","cooldownsSelector","abilityVisibleFieldsSelector","passiveAbilitiesSelector","gameSettingsSelector","BATTLE_START_MUSIC","process","OPENING_MUSIC","WELCOME_DIALOG","PEACFULL_BACKGROUNDS","BATTLE_MUSIC","LOST_MUSIC","WON_MUSIC","playStartMusic","playMusic","playStartDialog","playDialog","playBattleStartMusic","playPeacfullBackgoundMusic","sample","BATTLE_MUSIC2","REBORN_DIALOG","PLOWING_FIELD1","ATTACK_WARNINGS","LOST_CASTLE","RANDOM_CAPITOL","MOVE_CAPITOL","UNITE_ARMY","DEFENDER","CONQUER_CAPITOL","LOST_CAPITOL","CONQUER_CASTLE","ARCHERY_SELECT","AUTUMN_SELECT","AUTUMN_EFFECT","playAutumnEffect","CROWN_FINDER","ARCHERY_SHOOTED","volume","volume2","audioPath","Audio","onended","gState","store","getState","pause","src","load","play","console","log","playDialog2","io","socketIO","eraseCommands","emit","executeInstantCommand","commandType","details","on","dispatch","stats","updateStats","flat","owner","vX","vY","isVisible","setBoard","cooldownName","name","setCooldown","fields","iX","iY","push","message","createRoom","joinAsSpectactor","replaceGameSetting","setUser","setPlayers","window","alert","approved","userSelector","TEAM_NAMES","useSelector","className","styles","onClick","map","index","nextTeamId","disabled","FormItem","Form","Item","useDispatch","useState","setRoomId","isNameConfirmed","setIsNameConfirmed","isAllDisabled","alt","help","style","display","onChange","e","target","placeholder","width","joinToRoom","RoomTeams","messagesSelector","newMessage","setNewMessage","setIsVisible","move","prevX","prevY","translateDirectionKeyToMove","direction","isPositionValid","tileTo","command","nextCommand","from","uniqid","length","clickOnActiveField","MOVE_KEYS","keyboardListener","eraseLastCommand","eraseAllCommands","commandToErase","React","memo","field","visibleFromAbility","notifyMouseOver","clearAbilityHover","isHoveredByAbility","isActiveField","units","isOwner","isClickableByAbility","Math","random","onContextMenu","event","preventDefault","onMouseEnter","backgroundColor","backgroundImage","getImageLink","classnames","getClassForArrow","getSignForArrow","prevProps","nextProps","isEqual","imagePath","debug","overridedBoard","overridedUserColors","visibleFields","abilityHoveredFields","setAbilityHoveredFields","isAllVisible","allCrownsVisible","handleHoverField","useEffect","setTimeout","capitol","ownedSpecialFields","error","document","getElementById","top","innerHeight","left","innerWidth","addEventListener","mouseMoveListener","mouseWheelListener","removeEventListener","commandsForFields","transform","row","Field","movementX","movementY","buttons","Number","slice","deltaY","nextScale","String","padEnd","notifySettingsChange","Select","Option","debounce","setRoomSettings","isHost","handleChangeSetting","modifyGameSetting","handleStartBattle","gameParams","marginTop","min","max","step","userStats","tour","Fragment","background","lands","vloumeLevel","setVloumeLevel","vloumeLevel2","setVloumeLevel2","handleSetVolumeLevel","level","setVolume","handleSetVolumeLevel2","ap","icon","CommentOutlined","SoundOutlined","historySelector","historyUserColorsSelector","useRefState","initialValue","setState","stateRef","useRef","current","historyUserColors","tourIndexRef","setTourIndex","speed","speedRef","setSpeed","isAutoPlay","isAutoPlayRef","setIsAutoPlay","updateBoard","tourIndex","rewindBack","frames","nextBoardIndex","rewindForward","autoFrma","init","DoubleLeftOutlined","BackwardOutlined","CaretLeftOutlined","CaretRightOutlined","FastForwardOutlined","DoubleRightOutlined","handleClick","selectedAbility","cooldown","isPassive","isOwned","description","maxCooldown","cost","isDisabled","title","placement","content","boxShadow","ceil","imgPath","abilityReborn","capitolAbilities","builidingAbilities","fromFieldName","gatheredPassiveAbilities","playerStats","isPlayerDead","handleClickAbility","handleSetAbilitySelectionMode","Ability","some","App","AudioControl","Abilities","GameInfo","LiveChat","Lobby","Settings","BattleHistory","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.aa53b4e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speed-slider\":\"BattleHistory_speed-slider__1IaQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ability-panel\":\"Abilities_ability-panel__3qPLH\",\"ability-block-container\":\"Abilities_ability-block-container__3GhIM\",\"ability-block\":\"Abilities_ability-block__1IWen\",\"filler-block\":\"Abilities_filler-block__3xwKI\",\"filler-block__disabled\":\"Abilities_filler-block__disabled__1QYAQ\",\"ability-description-box\":\"Abilities_ability-description-box__2pgdv\",\"selected-block\":\"Abilities_selected-block__cdLMW\",\"clickable\":\"Abilities_clickable__y9Paf\",\"popover-stats\":\"Abilities_popover-stats__3nSM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobby-wrapper\":\"Lobby_lobby-wrapper__lDjyO\",\"lobby-content-box\":\"Lobby_lobby-content-box__QuG4U\",\"header\":\"Lobby_header__2r9_D\",\"subtytle\":\"Lobby_subtytle__2WrLL\",\"logo\":\"Lobby_logo__tbCPE\",\"logo-left\":\"Lobby_logo-left__1BVEf\",\"logo-right\":\"Lobby_logo-right__3mpPN\"};","const devConfig = {\r\n    address: '/'\r\n}\r\n\r\nconst config = devConfig\r\n\r\nexport default config","export const SET_PLAYERS = 'game.setPlayers'\r\nexport const setPlayers = (players) => ({\r\n    type: SET_PLAYERS,\r\n    payload: players\r\n})\r\n\r\nexport const SET_BOARD = 'game.setBoard'\r\nexport const setBoard = (board) => ({\r\n    type: SET_BOARD,\r\n    payload: board\r\n})\r\n\r\nexport const SET_ACTIVE_FIELD = 'game.setActiveField'\r\nexport const setActiveField = (coordinates) => ({\r\n    type: SET_ACTIVE_FIELD,\r\n    payload: coordinates\r\n})\r\n\r\nexport const SET_COMMANDS = 'game.setCommands'\r\nexport const setCommands = (commands) => ({\r\n    type: SET_COMMANDS,\r\n    payload: commands\r\n})\r\n\r\nexport const REMOVE_COMMANDS = 'game.removeCommands'\r\nexport const removeCommands = (commandIds) => ({\r\n    type: REMOVE_COMMANDS,\r\n    payload: commandIds\r\n})\r\n\r\nexport const SET_PLAYER_ROLE = 'game.setPlayerRole'\r\nexport const setPlayerRole = (role) => ({\r\n    type: SET_PLAYER_ROLE,\r\n    payload: role\r\n})\r\n\r\nexport const UPDATE_STATS = 'game.updateStats'\r\nexport const updateStats = (stats) => ({\r\n    type: UPDATE_STATS,\r\n    payload: stats\r\n})\r\n\r\nexport const SET_MOVE_TYPE = 'game.setMoveType'\r\nexport const setMoveType = (type) => ({\r\n    type: SET_MOVE_TYPE,\r\n    payload: type\r\n})\r\n\r\nexport const SET_ABILITY_SELECTION = 'game.abilitySelection'\r\nexport const setAbilitySelection = (ability) => ({\r\n    type: SET_ABILITY_SELECTION,\r\n    payload: ability\r\n})\r\n\r\nexport const SET_COOLDOWN = 'game.setCooldown'\r\nexport const setCooldown = (name, value) => ({\r\n    type: SET_COOLDOWN,\r\n    payload: {[name]: value}\r\n})\r\n\r\nexport const COOLDOWN_TIC = 'game.cooldownTic'\r\nexport const cooldownTic = () => ({\r\n    type: COOLDOWN_TIC,\r\n})\r\n\r\nexport const ADD_AILITY_VISIBLE_FIELDS = 'game.addAbilityVisibleFields'\r\nexport const addAbilityVisibleFields = (fieldsList) => ({\r\n    type: ADD_AILITY_VISIBLE_FIELDS,\r\n    payload: fieldsList\r\n})\r\n\r\nexport const ADD_PASSIVE_ABILITY = 'game.addPassiveAbility'\r\nexport const addPassiveAbility = (ability) => ({\r\n    type: ADD_PASSIVE_ABILITY,\r\n    payload: ability\r\n})","import * as actions from './user.action'\r\nimport { SET_PLAYERS } from '../game/game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    userName: 'King',\r\n    socketId: '',\r\n    roomId: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_USER_NAME:\r\n            return {...state, userName: action.payload}\r\n        case actions.SET_USER:\r\n            return {...state, ...action.payload}\r\n        case SET_PLAYERS:\r\n            return {...state, ...action.payload.find(v => v.socketId === state.socketId)}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './message.action'\r\n\r\nconst INITIAL_STATE = []\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ADD_MESSAGE:\r\n            return [...state, action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './game.action'\r\n\r\nconst INIT_COOLDOWNS = {\r\n    reborn: 0,\r\n    unite: 0,\r\n    moveCapitol: 0,\r\n    defender: 0,\r\n    plowingField: 0,\r\n    scan: 0,\r\n    autumn: 0,\r\n    archery: 0\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    players: [],\r\n    playerIdToTeamId: {},\r\n    board: [[]],\r\n    activeField: {x: -1, y: -1},\r\n    commands: [],\r\n    userColors: {},\r\n    usersStats: {},\r\n    tourCounter: 0,\r\n    playerRole: 'lobby',\r\n    moveType: 'all',\r\n    abilitySelection: null,\r\n    cooldowns: INIT_COOLDOWNS,\r\n    abilityVisibleFields: {},\r\n    passiveAbilities: [],\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_PLAYERS:\r\n            return {\r\n                ...state, \r\n                players: action.payload,\r\n                playerIdToTeamId: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.teamId}), {}),\r\n                userColors: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n            }\r\n        case actions.SET_BOARD:\r\n            return {...state, board: action.payload}\r\n        case actions.SET_ACTIVE_FIELD:\r\n            return {...state, activeField: action.payload, moveType: 'all'}\r\n        case actions.SET_COMMANDS:\r\n            return {...state, commands: action.payload}\r\n        case actions.REMOVE_COMMANDS:\r\n            return {...state, commands: state.commands.filter(v => !action.payload.includes(v.id))}\r\n        case actions.SET_PLAYER_ROLE:\r\n            return {...state, playerRole: action.payload, cooldowns: INIT_COOLDOWNS, abilityVisibleFields: {}, passiveAbilities: []}\r\n        case actions.UPDATE_STATS:\r\n            return {...state, ...action.payload}\r\n        case actions.SET_MOVE_TYPE:\r\n            return {...state, moveType: action.payload}\r\n        case actions.SET_ABILITY_SELECTION:\r\n            return {...state, abilitySelection: action.payload}\r\n        case actions.SET_COOLDOWN:\r\n            return {...state, cooldowns: {...state.cooldowns, ...action.payload}}\r\n        case actions.COOLDOWN_TIC:{\r\n            const nextCooldowns = {...state.cooldowns}\r\n            Object.keys(nextCooldowns).forEach(key => nextCooldowns[key] && nextCooldowns[key]--)\r\n            return {...state, cooldowns: nextCooldowns}\r\n        }\r\n        case actions.ADD_AILITY_VISIBLE_FIELDS:{\r\n            const nextFields = {...state.abilityVisibleFields}\r\n            action.payload.forEach(({x, y}) => {\r\n                if(!nextFields[x]) nextFields[x] = {}\r\n                nextFields[x][y] = true\r\n            })\r\n            return {...state, abilityVisibleFields: nextFields}\r\n        }\r\n        case actions.ADD_PASSIVE_ABILITY:{\r\n            return {...state, passiveAbilities: [...state.passiveAbilities, action.payload]}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './settings.action'\r\n\r\n\r\nconst INITIAL_STATE = ({\r\n    privateSettings: {},\r\n    gameSettings: {\r\n        mapWidth: 20,\r\n        mapHeight: 20,\r\n        gameMode: 'Conquest',\r\n        nonAggression: 50,\r\n        castlesDensity: 0.5,\r\n        mountainDensity: 0.5,\r\n        archeryTowersDensity: 0.3,\r\n        observerTowersDensity: 0.3,\r\n        abandonedFortressesDensity: 0.3,\r\n        castleProduction: 1,\r\n        fieldProduction: 25,\r\n        turnDuration: 1000,\r\n    }\r\n})\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.REPLACE_GAME_SETTING:\r\n            return {...state, gameSettings: action.payload}\r\n        case actions.MODIFY_GAME_SETTING:{\r\n            const {settingName, value} = action.payload\r\n            return {...state, gameSettings: {...state.gameSettings, [settingName]: value}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","export const ERASE_HISTORY = 'history.erase'\r\nexport const eraseHistory = () => ({\r\n    type: ERASE_HISTORY\r\n})\r\n\r\nexport const SET_USER_COLORS = 'history.setUserColors'\r\nexport const setUserColorsInHistory = (userColors) => ({\r\n    type: SET_USER_COLORS,\r\n    payload: userColors\r\n})","import * as actions from './history.action'\r\nimport { SET_BOARD } from '../game/game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    history: [],\r\n    userColors: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ERASE_HISTORY:\r\n            return INITIAL_STATE\r\n        case actions.SET_USER_COLORS:\r\n            return {...state, userColors: action.payload}\r\n        case SET_BOARD:\r\n            return {...state, history: [...state.history, action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport user from './user/user.reducer'\r\nimport messages from './messages/message.reducer'\r\nimport game from './game/game.reducer'\r\nimport settings from './settings/settings.reducer'\r\nimport history from './history/history.reducer'\r\n\r\nconst reducers = {\r\n    user,\r\n    messages,\r\n    game,\r\n    settings,\r\n    history\r\n}\r\n\r\nconst rootReducer = (state ={}, action) => combineReducers(reducers)(state, action)\r\n\r\nexport default rootReducer\r\n","export const SET_USER_NAME = 'user.setName'\r\nexport const setUserName = (name) => ({\r\n    type: SET_USER_NAME,\r\n    payload: name\r\n})\r\n\r\nexport const SET_USER = 'user.setUser'\r\nexport const setUser = (user) => ({\r\n    type: SET_USER,\r\n    payload: user\r\n})","export const ADD_MESSAGE = 'messages.addMessage'\r\nexport const addMessage = (msg) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: msg\r\n})","export const MODIFY_GAME_SETTING = 'MODIFY_GAME_SETTING'\r\nexport const modifyGameSetting = (settingName, value) => ({\r\n    type: MODIFY_GAME_SETTING,\r\n    payload: {settingName, value}\r\n})\r\n\r\nexport const REPLACE_GAME_SETTING = 'REPLACE_GAME_SETTING'\r\nexport const replaceGameSetting = (settings) => ({\r\n    type: REPLACE_GAME_SETTING,\r\n    payload: settings\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nlet middlwares = [thunk]\r\nif(process.env.NODE_ENV === 'development') middlwares.push(logger)\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    ...middlwares\r\n)(createStore)\r\n\r\nexport default createStoreWithMiddleware(reducer)","import {sample} from 'lodash'\r\nimport store from '../storage/store'\r\nimport { playerRoleSelector, tourCounterSelector } from '../storage/game/game.selector'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\n\r\nconst BATTLE_START_MUSIC =  `${process.env.PUBLIC_URL}/battleStart1.mp3`\r\nconst OPENING_MUSIC =  `${process.env.PUBLIC_URL}/open.mp3`\r\nconst WELCOME_DIALOG =  `${process.env.PUBLIC_URL}/dialogs/Welcome.wav`\r\nconst CAPTURE_CAPITOL_SOUND = `${process.env.PUBLIC_URL}/cnquest.mp3`\r\n\r\nconst PEACFULL_MUSIC = `${process.env.PUBLIC_URL}/peacefullMusic.mp3`\r\nconst PEACFULL_MUSIC2 = `${process.env.PUBLIC_URL}/peacefullMusic2.mp3`\r\nconst PEACFULL_MUSIC3 = `${process.env.PUBLIC_URL}/peacefullMusic3.mp3`\r\nconst PEACFULL_MUSIC4 = `${process.env.PUBLIC_URL}/peacefullMusic4.mp3`\r\nconst PEACFULL_BACKGROUNDS = [PEACFULL_MUSIC, PEACFULL_MUSIC2, PEACFULL_MUSIC3, PEACFULL_MUSIC4]\r\n\r\nconst BATTLE_MUSIC = `${process.env.PUBLIC_URL}/battleMusic.mp3`\r\n\r\nconst LOST_MUSIC = `${process.env.PUBLIC_URL}/lost.mp3`\r\nconst WON_MUSIC = `${process.env.PUBLIC_URL}/won.mp3`\r\n\r\nexport const playStartMusic = () => playMusic(OPENING_MUSIC)\r\nexport const playStartDialog = () => playDialog(WELCOME_DIALOG)\r\nexport const playOpeningMusic = () => {\r\n    setTimeout(playStartDialog, 1000)\r\n    setTimeout(playStartMusic, 5000)\r\n}\r\nexport const playBattleStartMusic = () => playMusic(BATTLE_START_MUSIC)\r\nexport const playCaptureCapitolSound = () => playDialog(CAPTURE_CAPITOL_SOUND)\r\n\r\nexport const playPeacfullBackgoundMusic = () => playMusic(sample(PEACFULL_BACKGROUNDS))\r\nexport const playBattleMusic = () => playMusic(BATTLE_MUSIC)\r\n\r\nconst BATTLE_MUSIC2 = `${process.env.PUBLIC_URL}/battleMusic2.mp3`\r\nexport const playBattleMusic2 = () => playMusic(BATTLE_MUSIC2)\r\n\r\nexport const playLostMusic = () => playMusic(LOST_MUSIC)\r\nexport const playWinMusic = () => playMusic(WON_MUSIC)\r\n\r\n// commands\r\nconst REBORN_DIALOG = `${process.env.PUBLIC_URL}/dialogs/RiseFromAshes.wav`\r\nexport const playRebornDialog = () => playDialog(REBORN_DIALOG)\r\n\r\nconst PLOWING_FIELD1 = `${process.env.PUBLIC_URL}/dialogs/PlowingField1.wav`\r\nexport const playPlowingFieldConfirmation = () => playDialog(PLOWING_FIELD1)\r\n\r\nconst ATTACK_WARNINGS = [\r\n    `${process.env.PUBLIC_URL}/dialogs/WarningAttack.wav`,\r\n]\r\nexport const playAttackWarning = () => playDialog(sample(ATTACK_WARNINGS))\r\n\r\nconst LOST_CASTLE = `${process.env.PUBLIC_URL}/dialogs/WarningAttack2.wav`\r\nexport const playLostCastle = () => playDialog(LOST_CASTLE)\r\n\r\nconst RANDOM_CAPITOL = [\r\n    `${process.env.PUBLIC_URL}/dialogs/RandomCapitol.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/RandomCapitol2.wav`,\r\n]\r\nexport const playRandomCapitol = () => playDialog(sample(RANDOM_CAPITOL))\r\n\r\n\r\nconst MOVE_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/MoveCapitol.wav`\r\nexport const playMoveCapitolConfirmation = () => playDialog(MOVE_CAPITOL)\r\n\r\nconst UNITE_ARMY = [\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy3.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/UniteArmy4.wav`\r\n]\r\nexport const playUniteArmyConfirmation = () => playDialog(sample(UNITE_ARMY))\r\n\r\nconst DEFENDER = [\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender3.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/Defender4.wav`,\r\n]\r\nexport const playDefenderConfirmation = () => playDialog(sample(DEFENDER))\r\n\r\nconst CONQUER_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/ConquerCapitol.wav`\r\nexport const playConquerCapitol = () => playDialog(CONQUER_CAPITOL)\r\n\r\nconst LOST_CAPITOL = `${process.env.PUBLIC_URL}/dialogs/LostCapitol.wav`\r\nexport const playLostCapitol = () => playDialog(LOST_CAPITOL)\r\n\r\nconst CONQUER_CASTLE = [\r\n    `${process.env.PUBLIC_URL}/dialogs/ConquerCastle.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ConquerCastle2.wav`\r\n]\r\nexport const playConquerCastle = () => playDialog(sample(CONQUER_CASTLE))\r\n\r\nconst ARCHERY_SELECT = [\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchPrepare1.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchPrepare2.wav`,\r\n]\r\nexport const playArcheriesReady = () => playDialog2(sample(ARCHERY_SELECT))\r\n\r\nconst AUTUMN_SELECT = [\r\n    `${process.env.PUBLIC_URL}/dialogs/5gSelect.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/5gSelect2.wav`\r\n]\r\nexport const playAutumnSelect = () => playDialog2(sample(AUTUMN_SELECT))\r\n\r\nconst AUTUMN_EFFECT = `${process.env.PUBLIC_URL}/dialogs/5gEffect.mp3`\r\nexport const playAutumnEffect = () => playDialog(AUTUMN_EFFECT)\r\n\r\nconst CROWN_FINDER = `${process.env.PUBLIC_URL}/dialogs/FindCapitol.wav`\r\nexport const playCrownFinder = () => playDialog(CROWN_FINDER)\r\n\r\nconst ARCHERY_SHOOTED = [\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted1.wav`,\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted2.wav`,\r\n    `${process.env.PUBLIC_URL}/dialogs/ArchShooted3.wav`,\r\n    // `${process.env.PUBLIC_URL}/dialogs/ArchShooted4.wav`,\r\n]\r\nexport const playArcheryShooted = () => playDialog(sample(ARCHERY_SHOOTED))\r\n\r\nvar audio\r\nvar dialogsAudio\r\nvar dialogsAudio2\r\nvar volume = 0.5\r\nvar volume2 = 1\r\n\r\nconst playMusic = (audioPath) => {\r\n    if(!audio) {\r\n        audio = new Audio()\r\n        audio.onended = () => {\r\n            const gState = store.getState()\r\n            const playerRole = playerRoleSelector(gState)\r\n            if (playerRole !== 'fighter' && playerRole !== 'spectator') return \r\n            const {nonAggression} = gameSettingsSelector(gState)\r\n            const tour = tourCounterSelector(gState)\r\n            if (tour < nonAggression) playPeacfullBackgoundMusic()\r\n            else playBattleMusic2()\r\n        }\r\n    }\r\n    audio.pause()\r\n    audio.src = audioPath\r\n    audio.load()\r\n    audio.volume = volume\r\n    audio.play()\r\n}\r\n\r\nconst playDialog = (audioPath) => {\r\n    console.log('Playing: ', audioPath)\r\n    if(!dialogsAudio) dialogsAudio = new Audio()\r\n    dialogsAudio.pause()\r\n    dialogsAudio.src = audioPath\r\n    dialogsAudio.load()\r\n    dialogsAudio.volume = volume2\r\n    dialogsAudio.play()\r\n}\r\n\r\nconst playDialog2 = (audioPath) => {\r\n    console.log('Playing2: ', audioPath)\r\n    if(!dialogsAudio2) dialogsAudio2 = new Audio()\r\n    dialogsAudio2.pause()\r\n    dialogsAudio2.src = audioPath\r\n    dialogsAudio2.load()\r\n    dialogsAudio2.volume = volume2\r\n    dialogsAudio2.play()\r\n}\r\n\r\nexport const stopSounds = () => {\r\n    if(audio) audio.pause()\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n    if(dialogsAudio2) dialogsAudio2.pause()\r\n}\r\n\r\nexport const setVolume = (level) => {\r\n    volume = level\r\n    if(audio) audio.volume = volume\r\n}\r\n\r\nexport const setVolume2 = (level) => {\r\n    volume2 = level\r\n    if(dialogsAudio) dialogsAudio.volume = volume2\r\n    if(dialogsAudio2) dialogsAudio2.volume = volume2\r\n}","export const playersSelector = state => state.game.players\r\nexport const boardSelector = state => state.game.board\r\nexport const activeFieldSelector = state => state.game.activeField\r\nexport const commandsSelector = state => state.game.commands\r\nexport const userColorsSelector = state => state.game.userColors\r\nexport const playerRoleSelector = state => state.game.playerRole\r\nexport const usersStatsSelector = state => state.game.usersStats\r\nexport const tourCounterSelector = state => state.game.tourCounter\r\nexport const moveTypeSelector = state => state.game.moveType\r\nexport const abilitySelectionSelector = state => state.game.abilitySelection\r\nexport const playerIdToTeamIdSelector = state => state.game.playerIdToTeamId\r\nexport const cooldownsSelector = state => state.game.cooldowns\r\nexport const abilityVisibleFieldsSelector = state => state.game.abilityVisibleFields\r\nexport const passiveAbilitiesSelector = state => state.game.passiveAbilities","export const gameSettingsSelector = state => state.settings.gameSettings","import socketIO from 'socket.io-client'\r\nimport config from '../config'\r\nimport store from '../storage/store'\r\nimport { setUser } from '../storage/user/user.action'\r\nimport { setPlayers, setBoard, removeCommands, updateStats, setPlayerRole, setActiveField, setCommands, setAbilitySelection, setCooldown, cooldownTic, addAbilityVisibleFields, addPassiveAbility } from '../storage/game/game.action'\r\nimport { addMessage } from '../storage/messages/message.action'\r\nimport { replaceGameSetting } from '../storage/settings/settings.action'\r\nimport { playBattleStartMusic, playLostMusic, playWinMusic, playBattleMusic, playRebornDialog, playPlowingFieldConfirmation, playMoveCapitolConfirmation, playUniteArmyConfirmation, playDefenderConfirmation, playConquerCastle, playConquerCapitol, playLostCapitol, playArcheryShooted, playAutumn, playAutumnEffect, playAttackWarning, playLostCastle } from '../audioPlayer/audioPlayer'\r\nimport { eraseHistory, setUserColorsInHistory } from '../storage/history/history.action'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst io = socketIO(config.address)\r\n\r\n// MAIN ACTIONS\r\nexport const startGame = (gameParams) => io.emit('start', gameParams)\r\nexport const addCommand = (command) => io.emit('addCommand', command)\r\nexport const eraseCommands = (commandIds) => io.emit('eraseCommands', commandIds)\r\nexport const executeInstantCommand = (commandType, details) => io.emit('executeInstantCommand', commandType, details)\r\nio.on('startBattle', () => {\r\n    store.dispatch(setActiveField({x: -1, y: -1}))\r\n    store.dispatch(setCommands([]))\r\n    store.dispatch(setPlayerRole('fighter'))\r\n    store.dispatch(setAbilitySelection(null))\r\n    playBattleStartMusic()\r\n    \r\n    // HISTORY\r\n    const userColors = playersSelector(store.getState())\r\n                        .reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n    store.dispatch(eraseHistory())\r\n    store.dispatch(setUserColorsInHistory(userColors))\r\n})\r\nio.on('updateStats', (stats) => store.dispatch(updateStats(stats)))\r\nio.on('loser', () => {\r\n    playLostMusic()\r\n})\r\nio.on('winner', () => {\r\n    playWinMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\n\r\nio.on('endOfPeace', () => playBattleMusic())\r\n\r\nio.on('updateBoard', board => {\r\n    const teamId = store.getState().user.teamId\r\n    const playerIdToTeamId = store.getState().game.playerIdToTeamId\r\n\r\n    board\r\n        .flat()\r\n        .filter(v => playerIdToTeamId[v.owner] === teamId)\r\n        .forEach((({x, y}) => {\r\n            for(let vX = x -1; vX <= x + 1; vX++)\r\n                for(let vY = y -1; vY <= y + 1; vY++) \r\n                    if(board[vY] && board[vY][vX])\r\n                        board[vY][vX].isVisible = true\r\n        }))\r\n\r\n    store.dispatch(setBoard(board))\r\n})\r\nio.on('removeCommands', commandIds => store.dispatch(removeCommands(commandIds)))\r\nio.on('setCooldown', (cooldownName, value) => {\r\n    store.dispatch(setCooldown(cooldownName, value))\r\n    if (cooldownName === 'reborn') playRebornDialog()\r\n    if (cooldownName === 'unite') playUniteArmyConfirmation()\r\n    if (cooldownName === 'defender') playDefenderConfirmation()\r\n    if (cooldownName === 'autumn') playAutumnEffect()\r\n    if (cooldownName === 'revealCapitols') {\r\n        store.dispatch(addPassiveAbility('revealCapitols'))\r\n    }\r\n})\r\nio.on('cooldownTic', () => store.dispatch(cooldownTic()))\r\nio.on('confirmScan', ({x, y}) => {\r\n    const fields = []\r\n    for (let iX = x - 1; iX <= x + 1; iX++) {\r\n        for (let iY = y - 1; iY <= y + 1; iY++) {\r\n            fields.push({x: iX, y: iY})\r\n        }\r\n    }\r\n    store.dispatch(addAbilityVisibleFields(fields))\r\n})\r\n\r\n// SOUND_NOTYFICATIONS\r\nio.on('sound_ConquerCastle', playConquerCastle)\r\nio.on('sound_ConquerCapitol', playConquerCapitol)\r\nio.on('sound_LostCapitol', playLostCapitol)\r\nio.on('sound_archeryShooted', playArcheryShooted)\r\nio.on('sound_autumn', playAutumnEffect)\r\nio.on('sound_capitolAttack', playAttackWarning)\r\nio.on('sound_lostCastle', playLostCastle)\r\n\r\n// CHAT\r\nexport const sendMessage = (message) => io.emit('sendMessage', message)\r\nio.on('chat', message => store.dispatch(addMessage(message)))\r\n\r\n// ROOM\r\nexport const createRoom = () => io.emit('createRoom', store.getState().user.userName)\r\nexport const joinToRoom = (roomId) => io.emit('join', {\r\n    roomId,\r\n    userName: store.getState().user.userName\r\n})\r\nexport const setRoomSettings = (settings) => io.emit('setRoomSettings', settings)\r\nexport const changeTeam = (nextTeamId) => io.emit('changeTeam', nextTeamId)\r\nexport const joinAsSpectactor = () => io.emit('joinAsSpectactor')\r\n\r\nio.on('setRoomSettings', settings => store.dispatch(replaceGameSetting(settings)))\r\nio.on('joined', user => store.dispatch(setUser(user)))\r\nio.on('refreshPlayersInRoom', players => store.dispatch(setPlayers(players)))\r\nio.on('noRoom', () => window.alert('No room with given id'))\r\nio.on('spectactorResponse', (approved) => {\r\n    if(approved) {\r\n        store.dispatch(setPlayerRole('spectator'))\r\n        store.dispatch(setUserColorsInHistory(store.getState().game.userColors))\r\n        playBattleStartMusic()\r\n    } else window.alert('Game not started yet')\r\n})\r\n\r\n\r\nexport default io","export const userSelector = state => state.user","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\nimport styles from './RoomTeams.module.scss'\r\nimport { Button } from 'antd'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { changeTeam, joinAsSpectactor } from '../socket/socketManager'\r\n\r\nconst TEAM_NAMES = [\r\n    'Kings',\r\n    'Knights',\r\n    'Rulers',\r\n    'Hussars',\r\n    'Monarchs',\r\n    'Warriors',\r\n    'Heroes',\r\n    'Spartans',\r\n    'Franks',\r\n    'Kings4',\r\n    'Kings5',\r\n    'Kings6',\r\n    'Kings7',\r\n    'Kings8',\r\n    'Kings9',\r\n    'Kings10',\r\n    'Kings11',\r\n    'Kings12',\r\n    'Kings13',\r\n    'Kings13',\r\n]\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const user = useSelector(userSelector)\r\n\r\n    return (\r\n        <>  \r\n            <div className={styles['room-header']}>Room: {user.roomId}</div>\r\n            <Button onClick={joinAsSpectactor}>Watch Current Game</Button>\r\n            <div className={styles['rooms-wrapper']}>\r\n                {\r\n                    players.map((v, index) => (\r\n                        <div key={index}>\r\n                            <div className={styles['room-name']}>Team {TEAM_NAMES[index]}</div>\r\n                            <div>\r\n                                <div className={styles['players-block']}>\r\n                                    {\r\n                                        players\r\n                                            .filter(v => v.teamId === index)\r\n                                            .map(v => <div key={v.socketId}>{v.userName}</div>)\r\n                                    }\r\n                                </div>\r\n                                <Button\r\n                                    onClick={() => changeTeam(index)}\r\n                                    disabled={user.teamId === index}\r\n                                >\r\n                                    Join\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { createRoom, joinToRoom } from '../socket/socketManager';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUserName } from '../storage/user/user.action';\r\nimport styles from './Lobby.module.scss'\r\nimport { userSelector } from '../storage/user/user.selector';\r\nimport RoomTeams from '../RoomTeams/RoomTeams';\r\n\r\nconst FormItem = Form.Item\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch()\r\n    const [roomId, setRoomId] = useState('')\r\n    const [isNameConfirmed, setIsNameConfirmed] = useState(false)\r\n    const user = useSelector(userSelector)\r\n    const isAllDisabled = !!user.roomId\r\n    \r\n    return (\r\n        <div className={styles['lobby-wrapper']}>\r\n            <div className={styles['lobby-content-box']}>\r\n                <img alt='logo' src='/logo.png' className={`${styles['logo']}  ${styles['logo-left']}`}/>\r\n                <img alt='logo' src='/logo.png' className={`${styles['logo']}  ${styles['logo-right']}`}/>\r\n                <h3 className={styles['header']}>\r\n                    Overlight Generals <br/>\r\n                    <span className={styles['subtytle']}>Kings Alliance</span>\r\n                </h3>\r\n                <FormItem help='User Name'>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Input\r\n                            onChange={e => dispatch(setUserName(e.target.value))}\r\n                            value={user.userName}\r\n                            placeholder='User Name'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                        />\r\n\r\n                        {\r\n                            !user.roomId &&\r\n                            <Button \r\n                                type='primary'\r\n                                disabled={isNameConfirmed || isAllDisabled}\r\n                                onClick={() => setIsNameConfirmed(true)}\r\n                            >\r\n                                Confirm\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </FormItem>\r\n                {\r\n                    !user.roomId &&\r\n                    <div>\r\n                        <Button\r\n                            disabled={user.roomId}\r\n                            onClick={createRoom}\r\n                            style={{width: '255px'}}\r\n                        >\r\n                            Create Room\r\n                        </Button>\r\n                    </div>\r\n                }\r\n                {\r\n                    !user.roomId &&\r\n                    <div>\r\n                        <FormItem help={'Room ID to join'}>\r\n                            <div style={{display: 'flex'}}>\r\n                                <Input \r\n                                    placeholder='Room ID' \r\n                                    onChange={(e) => setRoomId(e.target.value)}\r\n                                />\r\n                                <Button onClick={() => joinToRoom(roomId)}>\r\n                                    Join\r\n                                </Button>\r\n                            </div>\r\n                        </FormItem>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    user.roomId && <RoomTeams/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messagesSelector = state => state.messages","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { messagesSelector } from '../storage/messages/messages.selector'\r\nimport { sendMessage } from '../socket/socketManager'\r\nimport styles from './LiveChat.module.scss'\r\nimport { Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const messages = useSelector(messagesSelector)\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage)\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles['chat-wrapper']}>\r\n            <div \r\n                onClick={() => setIsVisible(!isVisible)}\r\n                className={styles['chat-header']}>\r\n                Room Chat\r\n            </div>\r\n            {\r\n                isVisible &&\r\n                <div>\r\n                    <div className={styles['chat-history']}>\r\n                        {\r\n                            messages.map((v, index) => <div key={index}>{v}</div>)\r\n                        }\r\n                    </div>\r\n                    <div className={styles['new-message']}>\r\n                        <Input \r\n                            placeholder='Message....'\r\n                            value={newMessage}\r\n                            onChange={e => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button onClick={handleSendMessage}>\r\n                            Send Message\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import store from '../storage/store'\r\nimport { setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { activeFieldSelector, commandsSelector, boardSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport uniqid from 'uniqid'\r\nimport { addCommand } from '../socket/socketManager'\r\n\r\nconst CMD_MOVE_ALL = 'MOVE_ALL'\r\nconst CMD_MOVE_HALF = 'MOVE_HALF'\r\n\r\nexport const move = (key) => {\r\n    const commands = commandsSelector(store.getState())\r\n    const board = boardSelector(store.getState())\r\n    const activeField = activeFieldSelector(store.getState())\r\n    const moveType = moveTypeSelector(store.getState())\r\n    const prevX = activeField.x, prevY = activeField.y\r\n    \r\n    const {x, y, direction} = translateDirectionKeyToMove(prevX, prevY, key)\r\n\r\n    if(\r\n        !isPositionValid(x, y, board) || \r\n        !isPositionValid(prevX, prevY, board)\r\n    ) return\r\n\r\n    const tileTo = board[y][x]\r\n    if(tileTo.isVisible && tileTo.type === 'mountain') {\r\n        return\r\n    }\r\n\r\n    const nextCommand = {\r\n        from: {x: prevX, y: prevY},\r\n        direction,\r\n        id: uniqid(),\r\n        type: moveType === 'all' \r\n            ? CMD_MOVE_ALL\r\n            : CMD_MOVE_HALF\r\n    }\r\n\r\n    addCommand(nextCommand)\r\n    store.dispatch(setActiveField({x, y}))\r\n    store.dispatch(setCommands([...commands, nextCommand]))\r\n}\r\n\r\nconst isPositionValid = (x, y, board) => {\r\n    return (\r\n        x >= 0 && x < board[0].length &&\r\n        y >= 0 && y < board.length\r\n    )\r\n}\r\n\r\nconst translateDirectionKeyToMove = (x, y, key) => {\r\n    let direction\r\n    if(key === 'w') {\r\n        direction = 'u'\r\n        y--\r\n    }\r\n    if(key === 's') {\r\n        y++\r\n        direction = 'd'\r\n    }\r\n    if(key === 'a') {\r\n        x--\r\n        direction = 'l'\r\n    }\r\n    if(key === 'd') {\r\n        x++\r\n        direction = 'r'\r\n    }\r\n\r\n    return {x, y, direction}\r\n}","import store from '../storage/store'\r\nimport { setActiveField, removeCommands, setMoveType } from '../storage/game/game.action'\r\nimport { move } from './Moves'\r\nimport { commandsSelector } from '../storage/game/game.selector'\r\nimport { eraseCommands } from '../socket/socketManager'\r\n\r\nexport const clickOnActiveField = (x, y) => store.dispatch(setActiveField({x, y}))\r\nexport const setHalfUnitsMove = () => store.dispatch(setMoveType('half'))\r\n\r\nconst MOVE_KEYS = ['w', 's', 'a', 'd']\r\nexport const keyboardListener = ({key}) => {\r\n    if(MOVE_KEYS.includes(key)) return move(key)\r\n    if(key === 'e') eraseLastCommand()\r\n    if(key === 'q') eraseAllCommands()\r\n}\r\n\r\nconst eraseLastCommand = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n    const commandToErase = commands[commands.length - 1]\r\n    const commandIds = [commandToErase.id]\r\n\r\n    if(commandToErase.from) {\r\n        const {x, y} = commandToErase.from\r\n        clickOnActiveField(x, y)\r\n    }\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\nconst eraseAllCommands = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n\r\n    const commandIds = commands.map(v => v.id)\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { activeFieldSelector, moveTypeSelector, playerIdToTeamIdSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport { clickOnActiveField, setHalfUnitsMove } from './Reactions'\r\nimport {executeInstantCommand} from '../socket/socketManager'\r\nimport {isEqual} from 'lodash'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\nimport { playRandomCapitol } from '../audioPlayer/audioPlayer'\r\n\r\nexport default React.memo(({\r\n    field,\r\n    commands,\r\n    visibleFromAbility,\r\n    userColors,\r\n    abilitySelection,\r\n    notifyMouseOver,\r\n    clearAbilityHover,\r\n    isHoveredByAbility,\r\n    isActiveField,\r\n    moveType\r\n}) => {\r\n    const user = useSelector(userSelector)\r\n    const playerIdToTeamId = useSelector(playerIdToTeamIdSelector)\r\n    const dispatch = useDispatch()\r\n    const { type, owner, units, x, y, isVisible } = field\r\n    const isOwner = user.socketId === owner\r\n\r\n    const handleClickField = () => {\r\n        if (!isOwner || visibleFromAbility) return\r\n        if (type === 'capitol' && Math.random() < 0.08) playRandomCapitol()\r\n        if (isActiveField && moveType === 'all') return setHalfUnitsMove()\r\n        clickOnActiveField(x, y)\r\n    }\r\n\r\n    const handleRightClickField = (event) => {\r\n        event.preventDefault()\r\n        if  (isClickableByAbility()) executeInstantCommand(abilitySelection, {x, y}) \r\n        if (abilitySelection) dispatch(setAbilitySelection(null))\r\n    }\r\n\r\n    const getBackgroundColor = () => {\r\n        if (!visibleFromAbility && !isVisible === true) return '#202020'\r\n        if(owner === 'n') return 'grey'\r\n        return userColors[owner] || 'grey'\r\n    }\r\n\r\n    const getFieldUnits = () => (visibleFromAbility || !!isVisible) && (units != null) && units\r\n    const isClickableByAbility = () => {\r\n        if(!abilitySelection) return false\r\n        if(abilitySelection === 'reborn' && type === 'castle' && playerIdToTeamId[owner] === playerIdToTeamId[user.socketId]) return true\r\n        if(abilitySelection === 'moveCapitol' && type === 'castle' && owner === user.socketId) return true\r\n        if(abilitySelection === 'plowingField' && type === 'plain' && owner === user.socketId) return true\r\n        if(abilitySelection === 'archeryFire' && (visibleFromAbility || isVisible)) return true\r\n        if(abilitySelection === 'scan') return true\r\n    }\r\n    // not-visible\r\n    return (\r\n        <div \r\n            onClick={handleClickField}\r\n            onContextMenu={handleRightClickField}\r\n            onMouseEnter={() => abilitySelection && (isClickableByAbility() ? notifyMouseOver(x, y) : clearAbilityHover())}\r\n            style={{\r\n                backgroundColor: getBackgroundColor(),\r\n                backgroundImage: getImageLink(type, isVisible || visibleFromAbility)\r\n            }}\r\n            className={classnames('board-tile', {\r\n                'clickable': isOwner || isClickableByAbility(),\r\n                'selected-field': isActiveField,\r\n                'hovered-by-ability' : isHoveredByAbility\r\n            })}\r\n        >\r\n            {\r\n                (isActiveField && moveType === 'half')\r\n                    ? '50%'\r\n                    :  getFieldUnits()\r\n            }\r\n            {\r\n                commands.map((v, index) => (\r\n                    <div key={index} className={getClassForArrow(v)}>\r\n                        {getSignForArrow(v)}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    if(\r\n        prevProps.commands.length === nextProps.commands.length &&\r\n        prevProps.isActiveField === nextProps.isActiveField &&\r\n        prevProps.moveType === nextProps.moveType &&\r\n        isEqual(prevProps.field, nextProps.field) &&\r\n        isEqual(prevProps.visibleFromAbility, nextProps.visibleFromAbility) &&\r\n        isEqual(prevProps.isHoveredByAbility, nextProps.isHoveredByAbility)\r\n    ) return true\r\n    return false\r\n})\r\n\r\nfunction getImageLink(type, isVisible) {\r\n    let imagePath = '';\r\n    isVisible = isVisible || window.debug\r\n    if (type === 'plain' || (!isVisible && type === 'capitol')) return 'unset'\r\n    else if(!isVisible && type !== 'capitol') imagePath = '/obstacle.png'\r\n    else if(type === 'castle') imagePath = '/city.png'\r\n    else if(type === 'mountain') imagePath = '/mountain.png'\r\n    else if(type === 'capitol') imagePath = '/crown.png'\r\n    else if(type === 'defendedCapitol') imagePath = '/defendedCrown.png'\r\n    else if(type === 'archeryTower') imagePath = '/archery_tower.png'\r\n    else if(type === 'observerTower') imagePath = '/observer_tower.png'\r\n    else if(type === 'abandonedFortress') imagePath = '/tower5G.png'\r\n\r\n    return `url(${process.env.PUBLIC_URL + imagePath})`\r\n}\r\n  \r\nfunction getSignForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return '↑'\r\n        case 'd':return '↓'\r\n        case 'l':return '←'\r\n        case 'r':return '→'\r\n        default: return 'x'\r\n    }\r\n}\r\n\r\nfunction getClassForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return 'arrow-container arrow-up'\r\n        case 'd':return 'arrow-container arrow-down'\r\n        case 'l':return 'arrow-container arrow-left'\r\n        case 'r':return 'arrow-container arrow-right'\r\n        default: return alert('command without direction')\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { boardSelector, commandsSelector, playerRoleSelector, userColorsSelector, abilityVisibleFieldsSelector, passiveAbilitiesSelector, usersStatsSelector, playersSelector, abilitySelectionSelector, activeFieldSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport './Board.css'\r\nimport Field from './Field'\r\nimport { keyboardListener } from './Reactions'\r\nimport store from '../storage/store'\r\n\r\nexport default ({\r\n    overridedBoard,\r\n    overridedUserColors\r\n}) => {\r\n    const board = overridedBoard || useSelector(boardSelector)\r\n    const userColors = overridedUserColors || useSelector(userColorsSelector)\r\n    const commands = useSelector(commandsSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const visibleFields = useSelector(abilityVisibleFieldsSelector)\r\n    const passiveAbilities = useSelector(passiveAbilitiesSelector)\r\n    const abilitySelection = useSelector(abilitySelectionSelector)\r\n    const activeField = useSelector(activeFieldSelector)\r\n    const moveType = useSelector(moveTypeSelector)\r\n    const [abilityHoveredFields, setAbilityHoveredFields] = useState({})\r\n\r\n    const isAllVisible = playerRole === 'spectator' || playerRole === 'historySpectator' || window.debug === true\r\n    const allCrownsVisible= passiveAbilities.includes('revealCapitols')\r\n\r\n    const handleHoverField = (x, y) => {\r\n        if (!abilitySelection) return\r\n        const fields = {}\r\n        for (let iX = x - 1; iX <= x + 1; iX++) {\r\n            for (let iY = y - 1; iY <= y + 1; iY++) {\r\n                if(!fields[iX]) fields[iX] = {}\r\n                fields[iX][iY] = true\r\n            }\r\n        }\r\n        setAbilityHoveredFields(fields)\r\n    }\r\n\r\n    const clearAbilityHover = () => setAbilityHoveredFields({})\r\n\r\n    useEffect(() => {\r\n        centerOnCapitol()\r\n        if(playerRole !== 'historySpectator') {\r\n            window.addEventListener('keypress', keyboardListener)\r\n        }\r\n        window.addEventListener('mousemove', mouseMoveListener)\r\n        window.addEventListener('mousewheel', mouseWheelListener)\r\n        return () => {\r\n            if(playerRole !== 'historySpectator') {\r\n                window.removeEventListener('keypress', keyboardListener)\r\n            }\r\n            window.removeEventListener('mousemove', mouseMoveListener)\r\n            window.removeEventListener('mousewheel', mouseWheelListener)\r\n        }\r\n    }, [])\r\n\r\n    const commandsForFields = commands.reduce((acc, v) => {\r\n        const key = `${v.from.x}-${v.from.y}`\r\n        if(!acc[key]) acc[key] = []\r\n        acc[key].push(v)\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id='board'\r\n                className='board-container'\r\n                style={{left: '10px', top: \"10px\", transform: \"scale(1)\"}}\r\n            >\r\n                {\r\n                    board.map((row, index) => (\r\n                        <div key={index} className='board-row '>\r\n                            {\r\n                                row.map((v, index) => (\r\n                                    <Field\r\n                                        key={index}\r\n                                        abilitySelection={abilitySelection}\r\n                                        userColors={userColors}\r\n                                        visibleFromAbility={isAllVisible || visibleFields[v.x]?.[v.y] || (allCrownsVisible && (v.type === 'capitol' || v.type === 'defendedCapitol'))}\r\n                                        commands={commandsForFields[`${v.x}-${v.y}`] || []}\r\n                                        field={v}\r\n                                        notifyMouseOver={handleHoverField}\r\n                                        clearAbilityHover={clearAbilityHover}\r\n                                        isHoveredByAbility={abilitySelection && abilityHoveredFields[v.x]?.[v.y]}\r\n                                        isActiveField={v.x === activeField.x && v.y === activeField.y}\r\n                                        moveType={moveType}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mouseMoveListener({movementX, movementY, buttons}) {\r\n    if(buttons !== 1) return\r\n    const board = document.getElementById('board')\r\n    const {left, top} = board.style\r\n    board.style.left = (Number(left.slice(0, -2)) + movementX) + 'px'\r\n    board.style.top = (Number(top.slice(0, -2)) + movementY) + 'px'\r\n}\r\n\r\nfunction mouseWheelListener({deltaY}) {\r\n    const board = document.getElementById('board')\r\n    const currnetScale = Number(board.style.transform.slice(6, -1))\r\n    const nextScale = currnetScale + (deltaY > 0\r\n            ? -0.1\r\n            : 0.1\r\n        )\r\n    if (nextScale > 2 || nextScale < 0.3) return\r\n\r\n    board.style.transform = `scale(${String(nextScale).padEnd(3, '.0')})`\r\n}\r\n\r\n// TO DO: rewrite to reactive way\r\nfunction centerOnCapitol() {\r\n    setTimeout(() => {\r\n        try {\r\n            const gState = store.getState()\r\n            const userStats = gState.game.usersStats\r\n            const socketId = gState.user.socketId\r\n            const capitol = userStats[socketId].ownedSpecialFields[0]\r\n            if(!capitol) console.error('# no capitol for player found')\r\n            const {x, y} = capitol\r\n            const board = document.getElementById('board')\r\n            board.style.top = `${(window.innerHeight / 2) - 45 * y}px`\r\n            board.style.left = `${(window.innerWidth / 2) - 45 * x}px`\r\n        } catch(e) {\r\n            console.error('Data to center map not available yet')\r\n            console.error(e)\r\n        }\r\n    }, 1750)\r\n}","import React from 'react'\r\nimport styles from './Settings.module.scss'\r\nimport { Slider, Form, Divider, Select, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { modifyGameSetting } from '../storage/settings/settings.action'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport {debounce} from 'lodash'\r\nimport { setRoomSettings, startGame } from '../socket/socketManager'\r\nimport store from '../storage/store'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nconst AVAILABLE_GAME_MODES = [\r\n    {name: 'Conquest', description: 'Capture all opponent capitols'}\r\n]\r\nconst DISABLED_GAME_MODES = [\r\n    {name: 'Units Collector', descroption: 'Gather the biggest army in whole state'}, \r\n    {name: 'King of Castles', descroption: 'Capture the castles around the whole world'}, \r\n    {name: 'Territory Wars', descroption: 'Rule the whole world'}, \r\n]\r\n\r\nconst notifySettingsChange = debounce(\r\n    (settings) =>  setRoomSettings(settings),\r\n    500\r\n)\r\n\r\nexport default () => {\r\n    const settings = useSelector(gameSettingsSelector)\r\n    const user = useSelector(userSelector)\r\n    const players = useSelector(playersSelector)\r\n    const dispatch = useDispatch()\r\n    const isHost = user.socketId === players[0]?.socketId\r\n\r\n    const {\r\n        mapWidth,\r\n        mapHeight,\r\n        gameMode,\r\n        nonAggression,\r\n        castlesDensity,\r\n        mountainDensity,\r\n        castleProduction,\r\n        fieldProduction,\r\n        turnDuration,\r\n        archeryTowersDensity,\r\n        observerTowersDensity,\r\n        abandonedFortressesDensity\r\n    } = settings\r\n\r\n    const handleChangeSetting = (settingName, value) => {\r\n        dispatch(modifyGameSetting(settingName, value))\r\n        notifySettingsChange(gameSettingsSelector(store.getState()))\r\n    }\r\n\r\n    const handleStartBattle = () => startGame(settings)\r\n\r\n    if(!user.roomId) return null\r\n\r\n    return (\r\n        <div className={styles['settings-wrapper']}>\r\n            <div className={styles['settings-content-box']}>\r\n                <Button\r\n                    onClick={() => handleStartBattle()}\r\n                    type={\"primary\"}\r\n                    style={{width: '300px', marginTop: '10px'}}\r\n                    disabled={!isHost}\r\n                >\r\n                    Battle!\r\n                </Button>\r\n                <div className={styles['settings-list']}>\r\n                    <Divider>Only Host Can Modify This Settings</Divider>\r\n                    <Divider>Map Dimmensions</Divider>\r\n                    <div>\r\n                        <FormItem help={`Map Width: ${mapWidth}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapWidth}\r\n                                onChange={(v) => handleChangeSetting('mapWidth', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Map Height: ${mapHeight}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapHeight}\r\n                                onChange={(v) => handleChangeSetting('mapHeight', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Game Rules</Divider>\r\n                        <FormItem help={`Duration Of Non-Aggression Pact: ${nonAggression}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={10}\r\n                                max={300}\r\n                                step={10}\r\n                                value={nonAggression}\r\n                                onChange={(v) => handleChangeSetting('nonAggression', v)}\r\n                            />\r\n                        </FormItem>\r\n                    <Divider>Map Objects</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Density: ${castlesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={castlesDensity}\r\n                                onChange={(v) => handleChangeSetting('castlesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Mountains Density: ${mountainDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={mountainDensity}\r\n                                onChange={(v) => handleChangeSetting('mountainDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Abandoned Fortesses Density: ${abandonedFortressesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={abandonedFortressesDensity}\r\n                                onChange={(v) => handleChangeSetting('abandonedFortressesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Observer Towers Density: ${observerTowersDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={observerTowersDensity}\r\n                                onChange={(v) => handleChangeSetting('observerTowersDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Archery Towers Density: ${archeryTowersDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={archeryTowersDensity}\r\n                                onChange={(v) => handleChangeSetting('archeryTowersDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Other</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Units Production Time: ${castleProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={castleProduction}\r\n                                onChange={(v) => handleChangeSetting('castleProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Field Units Production Time: ${fieldProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={fieldProduction}\r\n                                onChange={(v) => handleChangeSetting('fieldProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Turn Duration: ${turnDuration} ms`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={250}\r\n                                max={3000}\r\n                                step={250}\r\n                                value={turnDuration}\r\n                                onChange={(v) => handleChangeSetting('turnDuration', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { playersSelector, userColorsSelector, usersStatsSelector, tourCounterSelector, playerRoleSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport styles from './GameInfo.module.scss'\r\nimport { Button } from 'antd'\r\nimport { setPlayerRole } from '../storage/game/game.action'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { playPeacfullBackgoundMusic } from '../audioPlayer/audioPlayer'\r\nimport { userSelector } from '../storage/user/user.selector'\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const userColors = useSelector(userColorsSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const user = useSelector(userSelector)\r\n    const tour = useSelector(tourCounterSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const {nonAggression} = useSelector(gameSettingsSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickLobby = () => dispatch(setPlayerRole('lobby'))\r\n    const handleClickAcceptFailure = () => dispatch(setPlayerRole('spectator'))\r\n    const handleClickHistory = () => {\r\n        playPeacfullBackgoundMusic()\r\n        dispatch(setPlayerRole('historySpectator'))\r\n    }\r\n\r\n    return (\r\n        <div className={styles['info-panel']}>\r\n            <div className={classnames(styles['grid-container'])}>\r\n                <div/>\r\n                <div>\r\n                    Team\r\n                </div>\r\n                <div className={styles['room-header']}>\r\n                    Player\r\n                </div>\r\n                <div>Army</div>\r\n                <div>Lands</div>\r\n                {\r\n                    players.map(v => (\r\n                        <React.Fragment key={v.socketId}>\r\n                            <div>\r\n                                <div\r\n                                    className={styles['color-box']}\r\n                                    style={{background: userColors[v.socketId]}}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {v.teamId}\r\n                            </div>\r\n                            <div>\r\n                                {`${v.userName}`}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.units || 0}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.lands || 0}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div>\r\n                Tour: {tour} / {nonAggression}\r\n            </div>\r\n            <div>\r\n                {\r\n                    playerRole === 'spectator'  &&\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleClickHistory}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Battle History\r\n                    </Button>\r\n                }\r\n                {\r\n                    (playerRole === 'spectator' || playerRole === 'historySpectator') &&\r\n                    <Button\r\n                        onClick={handleClickLobby}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Back To Lobby!\r\n                    </Button>\r\n                }\r\n                {\r\n                    playerRole === 'fighter' && userStats[user.socketId]?.lands === 0 &&\r\n                    <Button\r\n                        onClick={handleClickAcceptFailure}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Accept Failure\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styles from './AudioControl.module.scss'\r\nimport { Button, Slider } from 'antd'\r\nimport { SoundOutlined, CommentOutlined } from '@ant-design/icons'\r\nimport { setVolume } from '../audioPlayer/audioPlayer'\r\nimport * as ap from '../audioPlayer/audioPlayer'\r\n\r\nexport default () => {\r\n    const [vloumeLevel, setVloumeLevel] = useState(50)\r\n    const [vloumeLevel2, setVloumeLevel2] = useState(100)\r\n\r\n    const handleSetVolumeLevel = (level) => {\r\n        setVloumeLevel(level)\r\n        setVolume(level / 100)\r\n    } \r\n\r\n    const handleSetVolumeLevel2 = (level) => {\r\n        setVloumeLevel2(level)\r\n        ap.setVolume2(level / 100)\r\n    } \r\n\r\n    return (\r\n        <div className={styles['audio-panel']}>\r\n            <div className={styles['controller']}>\r\n                <Button\r\n                    onClick={() => handleSetVolumeLevel2(vloumeLevel2 ? 0 : 100)}\r\n                    icon={<CommentOutlined />}\r\n                />\r\n                <div className={styles['slider-wrapper']}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={handleSetVolumeLevel2}\r\n                        value={vloumeLevel2}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={styles['controller']}>\r\n                <Button\r\n                    onClick={() => handleSetVolumeLevel(vloumeLevel ? 0 : 100)}\r\n                    icon={<SoundOutlined />}\r\n                />\r\n                <div className={styles['slider-wrapper']}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={handleSetVolumeLevel}\r\n                        value={vloumeLevel}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* <div>\r\n                <Button onClick={() => ap.playAttackWarning()}>playAttackWarning</Button>\r\n                <Button onClick={() => ap.playLostCastle()}>playLostCastle</Button>\r\n                <Button onClick={() => ap.playCrownFinder()}>playCrownFinder</Button>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}","export const historySelector = state => state.history.history\r\nexport const historyUserColorsSelector = state => state.history.userColors\r\n","import { useState, useRef, useEffect } from \"react\"\r\n\r\nconst useRefState = initialValue => {\r\n    const [state, setState] = useState(initialValue)\r\n    const stateRef = useRef(state)\r\n    useEffect(\r\n      () => { stateRef.current = state },\r\n      [state]\r\n    )\r\n    return [state, stateRef, setState]\r\n}\r\n\r\nexport default useRefState","import React, { useState } from 'react'\r\nimport { historySelector, historyUserColorsSelector } from '../storage/history/history.selector'\r\nimport { useSelector } from 'react-redux'\r\nimport styles from './BattleHistory.module.scss'\r\nimport Board from '../Game/Board'\r\nimport { Slider, Button } from 'antd'\r\nimport { DoubleLeftOutlined, BackwardOutlined, CaretLeftOutlined, CaretRightOutlined, FastForwardOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport useRefState from '../hooks/useRefState'\r\n\r\n\r\nexport default () => {\r\n    const history = useSelector(historySelector)\r\n    const historyUserColors = useSelector(historyUserColorsSelector)\r\n    const [tourIndex, tourIndexRef, setTourIndex] = useRefState(0)\r\n    const [board, setBoard] = useState(history[0])\r\n    const [speed, speedRef, setSpeed] = useRefState(25)\r\n    const [isAutoPlay, isAutoPlayRef, setIsAutoPlay] = useRefState(false)\r\n\r\n    const updateBoard = (tourIndex) => {\r\n        setTourIndex(tourIndex)\r\n        setBoard(history[tourIndex])\r\n    }\r\n\r\n    const incrementBoard = () => {\r\n        if(!history[tourIndexRef.current + 1]) {\r\n            return false\r\n        }\r\n        updateBoard(tourIndexRef.current + 1)\r\n        return true\r\n    }\r\n\r\n    const rewindBack = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current - frames\r\n        updateBoard(nextBoardIndex < 0 \r\n            ? 0 \r\n            : nextBoardIndex\r\n        )\r\n    }\r\n\r\n    const rewindForward = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current + frames\r\n        updateBoard(nextBoardIndex >= history.length \r\n                        ? (history.length - 1) \r\n                        : nextBoardIndex\r\n        )\r\n    }\r\n\r\n\r\n    const autoFrma = (init) => {\r\n        if((init || isAutoPlayRef.current) && incrementBoard()) setTimeout(() => {\r\n            autoFrma()\r\n        }, 1000 / speedRef.current)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles['speed-slider']}>\r\n                <Slider\r\n                    max={100}\r\n                    min={1}\r\n                    step={1}\r\n                    value={speed}\r\n                    onChange={setSpeed}\r\n                />\r\n                <div>\r\n                    Speed x {speed}\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        icon={<DoubleLeftOutlined />}\r\n                        onClick={() => rewindBack(40)}\r\n                    />\r\n                    <Button\r\n                        icon={<BackwardOutlined/>}\r\n                        onClick={() => rewindBack(20)}\r\n                    />\r\n                    <Button\r\n                        icon={<CaretLeftOutlined />}\r\n                        onClick={() => rewindBack(10)}\r\n                    />\r\n                    {\r\n                        !isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => {\r\n                                setIsAutoPlay(true)\r\n                                autoFrma(true)\r\n                            }}\r\n                        >\r\n                            Auto Play\r\n                        </Button>\r\n                    }\r\n                    {\r\n                        isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => setIsAutoPlay(false)}\r\n                        >\r\n                            Pause\r\n                        </Button>\r\n                    }\r\n                    <Button\r\n                        icon={<CaretRightOutlined />}\r\n                        onClick={() => rewindForward(10)}\r\n                    />\r\n                    <Button\r\n                        icon={<FastForwardOutlined />}\r\n                        onClick={() => rewindForward(20)}\r\n                    />                \r\n                    <Button\r\n                        icon={<DoubleRightOutlined />}\r\n                        onClick={() => rewindForward(40)}\r\n                    />                \r\n                </div>\r\n            </div>\r\n            {\r\n                board &&\r\n                <Board\r\n                    overridedBoard={board}\r\n                    overridedUserColors={historyUserColors}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Popover, Divider } from 'antd'\r\nimport styles from './Abilities.module.scss'\r\nimport classnames from 'classnames'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\n\r\nexport default ({\r\n    ability,\r\n    handleClick,\r\n    disabled=false,\r\n    selectedAbility,\r\n    cooldown,\r\n    isPassive,\r\n    isOwned\r\n}) => {\r\n    const dispatch = useDispatch()\r\n    const { name, description, icon, id, maxCooldown, cost, from} = ability\r\n\r\n    const handleAbiliyBlockClick = () => {\r\n        if(selectedAbility === id) dispatch(setAbilitySelection(null))\r\n        else !disabled && handleClick()\r\n    }\r\n\r\n    const isDisabled = (cooldown || disabled)\r\n\r\n    return (\r\n        <Popover \r\n            title={name}\r\n            placement=\"rightTop\"\r\n            content={(\r\n                <div className={styles['ability-description-box']}>\r\n                    <div className={styles['popover-stats']}>\r\n                        <div>{`Cost: ${cost} units from ${from}`}</div>\r\n                        {\r\n                            !isPassive &&\r\n                            <div>Cooldown: {cooldown || '0'}/{maxCooldown}</div>\r\n                        }\r\n                        {\r\n                            isPassive &&\r\n                            <div>Passive Ability</div>\r\n                        }\r\n                    </div>\r\n                    {description}\r\n                    \r\n                </div>\r\n            )}\r\n        >\r\n            <div className={styles['ability-block-container']}>\r\n                <div\r\n                    onClick={handleAbiliyBlockClick}\r\n                    style={{backgroundImage: icon}}\r\n                    className={classnames(styles['ability-block'], {\r\n                        [styles['selected-block']]: selectedAbility === id,\r\n                        [styles['clickable']]: !isOwned && !isDisabled\r\n                    })}\r\n                >\r\n                    <div\r\n                        style={{boxShadow: !isOwned ? `inset 0 0px 3px ${Math.ceil(40*cooldown/maxCooldown)}px rgba(0, 0, 0, 0.8)` : 'inset 0 0px 3px 40px rgba(255, 223, 0, 0.35'}}\r\n                        className={classnames(styles['filler-block'], {\r\n                            [styles['filler-block__disabled']]: !isOwned && isDisabled\r\n                        })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Popover>\r\n    )\r\n}","import React from 'react'\r\nimport styles from './Abilities.module.scss'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { usersStatsSelector, abilitySelectionSelector, cooldownsSelector, passiveAbilitiesSelector } from '../storage/game/game.selector'\r\nimport Ability from './Ability'\r\nimport { setAbilitySelection } from '../storage/game/game.action'\r\nimport { executeInstantCommand } from '../socket/socketManager'\r\nimport { playArcheriesReady, playPlowingFieldConfirmation, playMoveCapitolConfirmation, playCrownFinder, playAutumnSelect } from '../audioPlayer/audioPlayer'\r\n\r\nconst getImageLink = (imgPath) => `url(${process.env.PUBLIC_URL + imgPath})`\r\nconst abilityReborn = {\r\n    name: 'Reborn From Ashes',\r\n    id: 'reborn',\r\n    type: 'select',\r\n    icon: getImageLink('/ability_reborn.jpg'),\r\n    description: 'Reborn in on of ally\\'s castle. Click on ability and select (by right click) a castle with minimum 100 units to reborn there.',\r\n    cost: 100,\r\n    from: 'ally castle',\r\n    maxCooldown: 500,\r\n}\r\n\r\nconst capitolAbilities = [\r\n    {\r\n        name: 'Unite Army',\r\n        id: 'unite',\r\n        icon: getImageLink('/ability_uniteArmy.png'),\r\n        type: 'instant',\r\n        description: 'Gather all units from whole kingdom in your capitol immediately.',\r\n        cost: 0,\r\n        from: 'capitol',\r\n        maxCooldown: 500,\r\n    },\r\n    {\r\n        name: 'Move Capitol',\r\n        id: 'moveCapitol',\r\n        icon: getImageLink('/ability_moveCapitol.jpg'),\r\n        type: 'select',\r\n        description: 'Select owned castle to your new capitol. Select ability and right click on selected castle.',\r\n        cost: 100,\r\n        from: 'capitol',\r\n        maxCooldown: 500,\r\n    },\r\n    {\r\n        name: 'Ultra Defender',\r\n        id: 'defender',\r\n        icon: getImageLink('/logo.png'),\r\n        type: 'instant',\r\n        description: 'Units inside you capitol fight with double power for short period',\r\n        cost: 50,\r\n        from: 'capitol',\r\n        maxCooldown: 10000,\r\n    },\r\n    {\r\n        name: 'Plowing The Field',\r\n        id: 'plowingField',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_plowingField.png'),\r\n        description: 'Clear one of controlled fields from your units to hide from enemies.',\r\n        cost: 25,\r\n        from: 'capitol',\r\n        maxCooldown: 100,\r\n    },\r\n]\r\n\r\nconst builidingAbilities = [\r\n    {\r\n        name: 'Scan Area',\r\n        id: 'scan',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_observer.png'),\r\n        description: 'Scan area you can not reach. Selected fields (by right click) will be visible even if you have no units in this area.',\r\n        cost: 25,\r\n        from: 'observation tower',\r\n        fromFieldName: 'observerTower',\r\n        maxCooldown: 50,\r\n    },\r\n    {\r\n        name: 'Longrange Archery Fire',\r\n        id: 'archeryFire',\r\n        type: 'select',\r\n        icon: getImageLink('/ability_archery.png'),\r\n        description: 'Select (by right click) one of visible fields and order archeries longrange fire. Damage 75% of units on empty areas and 25% in buildings',\r\n        cost: 300,\r\n        from: 'archery tower',\r\n        fromFieldName: 'archeryTower',\r\n        maxCooldown: 400,\r\n    },\r\n    {\r\n        name: 'Autumn Of The Middle Ages',\r\n        id: 'autumn',\r\n        type: 'instant',\r\n        icon: getImageLink('/ability_autumn.png'),\r\n        description: 'Cause a tragedy across all kingdoms. After tragedy only one unit on every standard field will remain.',\r\n        cost: 1000,\r\n        from: 'abondoned fortress',\r\n        fromFieldName: 'abandonedFortress',\r\n        maxCooldown: 2500,\r\n    },\r\n]\r\n\r\nconst passiveAbilities = [\r\n    {\r\n        name: 'Reveal Capitols',\r\n        id: 'revealCapitols',\r\n        type: 'instant',\r\n        icon: getImageLink('/ability_show_crown.PNG'),\r\n        description: 'Make all capitols visible on map (only you can see it).',\r\n        cost: 3000,\r\n        from: 'capitol',\r\n        maxCooldown: 1,\r\n    }\r\n]\r\n\r\n\r\nexport default () => {\r\n    const user = useSelector(userSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const selectedAbility = useSelector(abilitySelectionSelector)\r\n    const cooldowns = useSelector(cooldownsSelector)\r\n    const gatheredPassiveAbilities = useSelector(passiveAbilitiesSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const playerStats = userStats[user.socketId]\r\n    if (!playerStats) return null\r\n    const isPlayerDead = !playerStats.units\r\n    const handleSetAbilitySelectionMode = (ability) => dispatch(setAbilitySelection(ability)) \r\n    const handleClickAbility = (ability) => {\r\n        const {type, id} = ability\r\n        if(type === 'select') handleSetAbilitySelectionMode(id)\r\n        if(type === 'instant') executeInstantCommand(id)\r\n\r\n        if(id === 'archeryFire') playArcheriesReady()\r\n        if(id === 'autumn') playAutumnSelect()\r\n        if(id === 'revealCapitols' || id === 'scan') playCrownFinder()\r\n        if(id === 'moveCapitol') playMoveCapitolConfirmation()\r\n        if(id === 'plowingField') playPlowingFieldConfirmation()\r\n        \r\n    }\r\n    const capitol = playerStats.ownedSpecialFields.find(v => v.type === 'capitol' || v.type === 'defendedCapitol')\r\n\r\n\r\n    return (\r\n        <div className={styles['ability-panel']}>\r\n            {\r\n                isPlayerDead &&\r\n                <Ability\r\n                    handleClick={() => handleClickAbility(abilityReborn)}\r\n                    disabled={false}\r\n                    ability={abilityReborn}\r\n                    selectedAbility={selectedAbility}\r\n                    cooldown={cooldowns[abilityReborn.id]}\r\n                />\r\n            }\r\n            {\r\n                !isPlayerDead &&\r\n                capitolAbilities.map(v => (\r\n                    <Ability\r\n                        key={v.id}\r\n                        handleClick={() => handleClickAbility(v)}\r\n                        disabled={capitol.units <= v.cost}\r\n                        ability={v}\r\n                        selectedAbility={selectedAbility}\r\n                        cooldown={cooldowns[v.id]}\r\n                    />\r\n                ))\r\n            }\r\n            {\r\n                !isPlayerDead &&\r\n                passiveAbilities.map(v => (\r\n                    <Ability\r\n                        key={v.id}\r\n                        handleClick={() => handleClickAbility(v)}\r\n                        disabled={capitol.units <= v.cost}\r\n                        isPassive={true}\r\n                        isOwned={gatheredPassiveAbilities.includes(v.id)}\r\n                        ability={v}\r\n                        selectedAbility={selectedAbility}\r\n                        cooldown={cooldowns[v.id]}\r\n                    />\r\n                ))\r\n            }\r\n            {\r\n                builidingAbilities\r\n                    .filter(v => playerStats[v.fromFieldName])\r\n                    .map(v => (\r\n                        <Ability\r\n                            key={v.id}\r\n                            handleClick={() => handleClickAbility(v)}\r\n                            disabled={!playerStats.ownedSpecialFields.some(field => field.type === v.fromFieldName && field.units > v.cost)}\r\n                            ability={v}\r\n                            selectedAbility={selectedAbility}\r\n                            cooldown={cooldowns[v.id]}\r\n                        />\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport Lobby from './Lobby/Lobby.jsx';\nimport LiveChat from './LiveChat/LiveChat';\nimport Board from './Game/Board';\nimport Settings from './Settings/Settings';\nimport { useSelector } from 'react-redux';\nimport GameInfo from './GameInfo/GameInfo';\nimport { playerRoleSelector } from './storage/game/game.selector';\nimport { playOpeningMusic } from './audioPlayer/audioPlayer';\nimport AudioControl from './AudioControl/AudioControl';\nimport './App.css'\nimport BattleHistory from './BattleHistory/BattleHistory';\nimport Abilities from './Abilities/Abilities';\n\nfunction App() {\n  const playerRole = useSelector(playerRoleSelector)\n  useEffect(() => {\n    playOpeningMusic()\n  }, [])\n\n  return (\n    <div>\n      <AudioControl/>\n      {\n        playerRole === 'fighter' &&\n        <Abilities/>\n      }\n      <GameInfo/>\n      <LiveChat/>\n      {\n        playerRole ==='lobby' &&\n        <>\n          <Lobby/>\n          <Settings/>\n        </>\n      }\n      {\n        (playerRole === 'fighter' || playerRole === 'spectator') &&\n        <Board/>\n      }\n      {\n        playerRole === 'historySpectator' &&\n        <BattleHistory/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './storage/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audio-panel\":\"AudioControl_audio-panel__1D5FQ\",\"controller\":\"AudioControl_controller__2uprX\",\"slider-wrapper\":\"AudioControl_slider-wrapper__3K4Ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms-wrapper\":\"RoomTeams_rooms-wrapper__3evw5\",\"room-header\":\"RoomTeams_room-header__1i6AB\",\"room-name\":\"RoomTeams_room-name__2odmr\",\"players-block\":\"RoomTeams_players-block__24cKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-wrapper\":\"LiveChat_chat-wrapper__3yyAJ\",\"chat-history\":\"LiveChat_chat-history__2VHgG\",\"chat-header\":\"LiveChat_chat-header__1SPj-\",\"new-message\":\"LiveChat_new-message__1I6jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-panel\":\"GameInfo_info-panel__3NB7p\",\"grid-container\":\"GameInfo_grid-container__1DJ7y\",\"color-box\":\"GameInfo_color-box__kQ-B1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-wrapper\":\"Settings_settings-wrapper__1-tcm\",\"settings-content-box\":\"Settings_settings-content-box__38rES\",\"settings-list\":\"Settings_settings-list__3xNVK\"};"],"sourceRoot":""}