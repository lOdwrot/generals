{"version":3,"sources":["AudioControl/AudioControl.module.scss","audioPlayer/audioPlayer.js","config.js","storage/user/user.reducer.js","storage/messages/message.reducer.js","storage/game/game.action.js","storage/game/game.reducer.js","storage/settings/settings.reducer.js","storage/reducer.js","storage/user/user.action.js","storage/messages/message.action.js","storage/settings/settings.action.js","storage/store.js","socket/socketManager.js","storage/user/user.selector.js","Lobby/Lobby.jsx","storage/messages/messages.selector.js","LiveChat/LiveChat.jsx","storage/game/game.selector.js","Game/Moves.js","Game/Reactions.js","Game/Field.jsx","Game/Board.jsx","storage/settings/settings.selector.js","Settings/Settings.jsx","GameInfo/GameInfo.jsx","AudioControl/AudioControl.jsx","App.js","serviceWorker.js","index.js","LiveChat/LiveChat.module.scss","GameInfo/GameInfo.module.scss","Lobby/Lobby.module.scss","Settings/Settings.module.scss"],"names":["module","exports","audio","dialogsAudio","config","address","INITIAL_STATE","userName","socketId","roomId","setActiveField","coordinates","type","payload","setCommands","commands","removeCommands","commandIds","setPlayerRole","role","players","board","activeField","x","y","userColors","usersStats","tourCounter","playerRole","moveType","privateSettings","gameSettings","mapWidth","mapHeight","gameMode","nonAggression","castlesDensity","mountainDensity","castleProduction","fieldProduction","turnDuration","reducers","user","state","action","messages","game","reduce","acc","v","color","filter","includes","id","settings","settingName","value","rootReducer","combineReducers","createStoreWithMiddleware","applyMiddleware","thunk","createStore","reducer","BATTLE_START_MUSIC","process","OPENING_MUSIC","PEACFULL_BACKGROUNDS","BATTLE_MUSIC","LOST_MUSIC","WON_MUSIC","volume","playMusic","audioPath","pause","Audio","play","playDialog","io","socketIO","eraseCommands","emit","on","store","dispatch","setTimeout","sample","stats","updateStats","winner","getState","flat","owner","forEach","vX","vY","isVisible","setBoard","message","createRoom","replaceGameSetting","setUser","setPlayers","window","alert","userSelector","FormItem","Form","Item","useDispatch","useState","setRoomId","isNameConfirmed","setIsNameConfirmed","useSelector","isAllDisabled","className","styles","help","style","display","onChange","e","target","placeholder","disabled","onClick","width","joinToRoom","messagesSelector","newMessage","setNewMessage","setIsVisible","map","index","key","playersSelector","boardSelector","activeFieldSelector","commandsSelector","userColorsSelector","playerRoleSelector","usersStatsSelector","tourCounterSelector","moveTypeSelector","move","prevX","prevY","translateDirectionKeyToMove","direction","isPositionValid","tileTo","command","nextCommand","from","uniqid","length","clickOnActiveField","MOVE_KEYS","keyboardListener","eraseLastCommand","eraseAllCommands","commandToErase","React","memo","field","seeAll","units","isOwner","isActiveField","console","log","backgroundColor","backgroundImage","getImageLink","classnames","getClassForArrow","getSignForArrow","prevProps","nextProps","isEqual","imagePath","debug","mouseMoveListener","movementX","movementY","buttons","document","getElementById","left","top","Number","slice","mouseWheelListener","deltaY","nextScale","transform","String","padEnd","useEffect","addEventListener","removeEventListener","commandsForFields","push","row","Field","gameSettingsSelector","Option","Select","AVAILABLE_GAME_MODES","name","description","DISABLED_GAME_MODES","descroption","notifySettingsChange","debounce","setRoomSettings","isHost","handleChangeSetting","modifyGameSetting","handleStartBattle","gameParams","marginTop","min","max","step","userStats","tour","Fragment","background","lands","vloumeLevel","setVloumeLevel","handleSetVolumeLevel","level","setVolume","icon","SoundOutlined","App","AudioControl","GameInfo","LiveChat","Lobby","Settings","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,cAAc,kCAAkC,iBAAiB,uC,wKC4B/EC,EACAC,E,kECxBWC,EANG,CACdC,QAAS,yB,gBCCPC,EAAgB,CAClBC,SAAU,KACVC,SAAU,GACVC,OAAQ,I,QCHNH,EAAgB,G,QCWTI,EAAiB,SAACC,GAAD,MAAkB,CAC5CC,KAF4B,sBAG5BC,QAASF,IAIAG,EAAc,SAACC,GAAD,MAAe,CACtCH,KAFwB,mBAGxBC,QAASE,IAIAC,EAAiB,SAACC,GAAD,MAAiB,CAC3CL,KAF2B,sBAG3BC,QAASI,IAIAC,EAAgB,SAACC,GAAD,MAAW,CACpCP,KAF2B,qBAG3BC,QAASM,IC/BPb,EAAgB,CAClBc,QAAS,GACTC,MAAO,CAAC,IACRC,YAAa,CAACC,GAAI,EAAGC,GAAI,GACzBT,SAAU,GACVU,WAAY,GACZC,WAAY,GACZC,YAAa,EACbC,WAAY,QACZC,SAAU,OCRRvB,EAAiB,CACnBwB,gBAAiB,GACjBC,aAAc,CACVC,SAAU,GACVC,UAAW,GACXC,SAAU,WACVC,cAAe,GACfC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,EAClBC,gBAAiB,GACjBC,aAAc,MCRhBC,EAAW,CACbC,KLCW,WAAoC,IAAnCC,EAAkC,uDAA1BrC,EAAesC,EAAW,uCAC9C,OAAOA,EAAOhC,MACV,IMVqB,eNWjB,OAAO,eAAI+B,EAAX,CAAkBpC,SAAUqC,EAAO/B,UACvC,IMNgB,eNOZ,OAAO,eAAI8B,EAAX,GAAqBC,EAAO/B,SAChC,QACI,OAAO8B,IKPfE,SJJW,WAAoC,IAAnCF,EAAkC,uDAA1BrC,EAAesC,EAAW,uCAC9C,OAAOA,EAAOhC,MACV,IMNmB,sBNOf,MAAM,GAAN,mBAAW+B,GAAX,CAAkBC,EAAO/B,UAC7B,QACI,OAAO8B,IIAfG,KFKW,WAAoC,IAAnCH,EAAkC,uDAA1BrC,EAAesC,EAAW,uCAC9C,OAAOA,EAAOhC,MACV,IDhBmB,kBCiBf,OAAO,eACA+B,EADP,CAEIvB,QAASwB,EAAO/B,QAChBY,WAAYmB,EAAO/B,QAAQkC,QAAO,SAACC,EAAKC,GAAN,sBAAiBD,EAAjB,eAAuBC,EAAEzC,SAAWyC,EAAEC,UAAS,MAEzF,IDhBiB,gBCiBb,OAAO,eAAIP,EAAX,CAAkBtB,MAAOuB,EAAO/B,UACpC,IDZwB,sBCapB,OAAO,eAAI8B,EAAX,CAAkBrB,YAAasB,EAAO/B,QAASgB,SAAU,QAC7D,IDRoB,mBCShB,OAAO,eAAIc,EAAX,CAAkB5B,SAAU6B,EAAO/B,UACvC,IDJuB,sBCKnB,OAAO,eAAI8B,EAAX,CAAkB5B,SAAU4B,EAAM5B,SAASoC,QAAO,SAAAF,GAAC,OAAKL,EAAO/B,QAAQuC,SAASH,EAAEI,SACtF,IDAuB,qBCCnB,OAAO,eAAIV,EAAX,CAAkBf,WAAYgB,EAAO/B,UACzC,IDIoB,mBCHhB,OAAO,eAAI8B,EAAX,GAAqBC,EAAO/B,SAChC,IDQqB,mBCPjB,OAAO,eAAI8B,EAAX,CAAkBd,SAAUe,EAAO/B,UACvC,QACI,OAAO8B,IE3BfW,SDQW,WAAoC,IAAnCX,EAAkC,uDAA1BrC,EAAesC,EAAW,uCAC9C,OAAOA,EAAOhC,MACV,IId4B,uBJexB,OAAO,eAAI+B,EAAX,CAAkBZ,aAAca,EAAO/B,UAC3C,IItB2B,sBJsBO,IAAD,EACA+B,EAAO/B,QAA7B0C,EADsB,EACtBA,YAAaC,EADS,EACTA,MACpB,OAAO,eAAIb,EAAX,CAAkBZ,aAAa,eAAKY,EAAMZ,aAAZ,eAA2BwB,EAAcC,MAE3E,QACI,OAAOb,KCZJc,EAFK,eAACd,EAAD,uDAAQ,GAAIC,EAAZ,8CAAuBc,YAAgBjB,EAAhBiB,CAA0Bf,EAAOC,I,SIH7De,G,OALmBC,YAC9BC,IAD8BD,CAGhCE,IAEaH,CAA0BI,I,QXRnCC,EAAkB,UAAOC,IAAP,qBAClBC,EAAa,UAAOD,IAAP,aAObE,GANqB,UAAMF,IAAN,gBAME,CAJT,UAAMA,IAAN,uBACC,UAAMA,IAAN,wBACA,UAAMA,IAAN,wBACA,UAAMA,IAAN,0BAGfG,EAAY,UAAMH,IAAN,oBAEZI,EAAU,UAAMJ,IAAN,aACVK,EAAS,UAAML,IAAN,YAgBXM,EAAS,EAEPC,EAAY,SAACC,GACZvE,GAAOA,EAAMwE,SAChBxE,EAAQ,IAAIyE,MAAMF,IACZF,OAASA,EACfrE,EAAM0E,QAGJC,EAAa,SAACJ,GACbtE,GAAcA,EAAauE,SAC9BvE,EAAe,IAAIwE,MAAMF,IACZF,OAASA,EACtBpE,EAAayE,QYnCXE,EAAKC,IAAS3E,EAAOC,SAKd2E,EAAgB,SAAC/D,GAAD,OAAgB6D,EAAGG,KAAK,gBAAiBhE,IACtE6D,EAAGI,GAAG,eAAe,WACjBC,EAAMC,SAAS1E,EAAe,CAACa,GAAI,EAAGC,GAAI,KAC1C2D,EAAMC,SAAStE,EAAY,KZEW0D,EAAUR,GYAhDqB,YAAW,kBZGiCb,EAAUc,iBAAOnB,MYHd,KAC/CgB,EAAMC,SAASlE,EAAc,eAEjC4D,EAAGI,GAAG,eAAe,SAACK,GAAD,OAAWJ,EAAMC,SReX,SAACG,GAAD,MAAY,CACnC3E,KAFwB,mBAGxBC,QAAS0E,GQjBkCC,CAAYD,OAC3DT,EAAGI,GAAG,SAAS,WZEoBL,EAAWR,GYA1Cc,EAAMC,SAASlE,EAAc,iBAEjC4D,EAAGI,GAAG,UAAU,SAAAO,GZDkBjB,EAAUF,GYGxCa,EAAMC,SAASlE,EAAc,iBAGjC4D,EAAGI,GAAG,cAAc,WZTiBV,EAAUJ,MYa/CU,EAAGI,GAAG,eAAe,SAAA7D,GACjB,IAAMb,EAAW2E,EAAMO,WAAWhD,KAAKlC,SACvCa,EACKsE,OACAxC,QAAO,SAAAF,GAAC,OAAIA,EAAE2C,QAAUpF,KACxBqF,SAAS,YACN,IADmB,IAAXtE,EAAU,EAAVA,EAAGC,EAAO,EAAPA,EACHsE,EAAKvE,EAAG,EAAGuE,GAAMvE,EAAI,EAAGuE,IAC5B,IAAI,IAAIC,EAAKvE,EAAG,EAAGuE,GAAMvE,EAAI,EAAGuE,IACzB1E,EAAM0E,IAAO1E,EAAM0E,GAAID,KACtBzE,EAAM0E,GAAID,GAAIE,WAAY,MAG9Cb,EAAMC,SRzCc,SAAC/D,GAAD,MAAY,CAChCT,KAFqB,gBAGrBC,QAASQ,GQuCM4E,CAAS5E,OAE5ByD,EAAGI,GAAG,kBAAkB,SAAAjE,GAAU,OAAIkE,EAAMC,SAASpE,EAAeC,OAIpE6D,EAAGI,GAAG,QAAQ,SAAAgB,GAAO,OAAIf,EAAMC,SHrDK,CAChCxE,KAFuB,sBAGvBC,QGmD+CqF,OAG5C,IAAMC,EAAa,kBAAMrB,EAAGG,KAAK,aAAcE,EAAMO,WAAWhD,KAAKnC,WAM5EuE,EAAGI,GAAG,mBAAmB,SAAA5B,GAAQ,OAAI6B,EAAMC,SFxDT,SAAC9B,GAAD,MAAe,CAC7C1C,KAFgC,uBAGhCC,QAASyC,GEsDuC8C,CAAmB9C,OACvEwB,EAAGI,GAAG,UAAU,SAAAxC,GAAI,OAAIyC,EAAMC,SJzDP,SAAC1C,GAAD,MAAW,CAC9B9B,KAFoB,eAGpBC,QAAS6B,GIuD0B2D,CAAQ3D,OAC/CoC,EAAGI,GAAG,wBAAwB,SAAA9D,GAAO,OAAI+D,EAAMC,SRhErB,SAAChE,GAAD,MAAc,CACpCR,KAFuB,kBAGvBC,QAASO,GQ8D2CkF,CAAWlF,OACnE0D,EAAGI,GAAG,UAAU,kBAAMqB,OAAOC,MAAM,4BAEpB1B,I,2DCpEF2B,EAAe,SAAA9D,GAAK,OAAIA,EAAMD,MCQrCgE,EAAWC,IAAKC,KAEP,aACX,IAAMxB,EAAWyB,cADA,EAEWC,mBAAS,IAFpB,mBAEVrG,EAFU,KAEFsG,EAFE,OAG6BD,oBAAS,GAHtC,mBAGVE,EAHU,KAGOC,EAHP,KAIXvE,EAAOwE,YAAYT,GACnBU,IAAkBzE,EAAKjC,OAE7B,OACI,yBAAK2G,UAAWC,IAAO,kBACnB,yBAAKD,UAAWC,IAAO,sBACnB,wBAAID,UAAWC,IAAM,QAArB,sBACA,kBAACX,EAAD,CAAUY,KAAK,aACX,yBAAKC,MAAO,CAACC,QAAS,SAClB,kBAAC,IAAD,CACIC,SAAU,SAAAC,GAAC,OAAItC,ENvBL,CAClCxE,KAFyB,eAGzBC,QMqB4D6G,EAAEC,OAAOnE,SAC7CA,MAAOd,EAAKnC,SACZqH,YAAY,YACZC,SAAUb,GAAmBG,IAEjC,kBAAC,IAAD,CACIvG,KAAK,UACLiH,SAAUb,GAAmBG,EAC7BW,QAAS,kBAAMb,GAAmB,KAHtC,aASR,kBAAC,IAAD,CACIY,SAAUnF,EAAKjC,OACfqH,QAAS3B,EACToB,MAAO,CAACQ,MAAO,UAHnB,gBAQKrF,EAAKjC,QACN,kBAACiG,EAAD,CAAUY,KAAM,mBACZ,yBAAKC,MAAO,CAACC,QAAS,SAClB,kBAAC,IAAD,CACII,YAAY,UACZH,SAAU,SAACC,GAAD,OAAOX,EAAUW,EAAEC,OAAOnE,UAExC,kBAAC,IAAD,CAAQsE,QAAS,kBFKnB,SAACrH,GAAD,OAAYqE,EAAGG,KAAK,OAAQ,CAClDxE,SACAF,SAAU4E,EAAMO,WAAWhD,KAAKnC,WEPeyH,CAAWvH,KAAlC,UAQRiC,EAAKjC,QACL,kBAACiG,EAAD,CAAUY,KAAM,WACZ,kBAAC,IAAD,CAAO9D,MAAOd,EAAKjC,aC/D9BwH,EAAmB,SAAAtF,GAAK,OAAIA,EAAME,U,iBCOhC,cAAO,IAAD,EACmBiE,mBAAS,IAD5B,mBACVoB,EADU,KACEC,EADF,OAEiBrB,oBAAS,GAF1B,mBAEVd,EAFU,KAECoC,EAFD,KAGXvF,EAAWqE,YAAYe,GAO7B,OACI,yBAAKb,UAAWC,IAAO,iBACnB,yBACIS,QAAS,kBAAMM,GAAcpC,IAC7BoB,UAAWC,IAAO,gBAFtB,aAMIrB,GACA,6BACI,yBAAKoB,UAAWC,IAAO,iBAEfxE,EAASwF,KAAI,SAACpF,EAAGqF,GAAJ,OAAc,yBAAKC,IAAKD,GAAQrF,OAGrD,yBAAKmE,UAAWC,IAAO,gBACnB,kBAAC,IAAD,CACIO,YAAY,cACZpE,MAAO0E,EACPT,SAAU,SAAAC,GAAC,OAAIS,EAAcT,EAAEC,OAAOnE,UAE1C,kBAAC,IAAD,CAAQsE,QA1BF,WJyCH,IAAC5B,IIxCRgC,EJwCoBpD,EAAGG,KAAK,cAAeiB,GIvCvDiC,EAAc,MAwBE,oBCtCXK,GAAkB,SAAA7F,GAAK,OAAIA,EAAMG,KAAK1B,SACtCqH,GAAgB,SAAA9F,GAAK,OAAIA,EAAMG,KAAKzB,OACpCqH,GAAsB,SAAA/F,GAAK,OAAIA,EAAMG,KAAKxB,aAC1CqH,GAAmB,SAAAhG,GAAK,OAAIA,EAAMG,KAAK/B,UACvC6H,GAAqB,SAAAjG,GAAK,OAAIA,EAAMG,KAAKrB,YACzCoH,GAAqB,SAAAlG,GAAK,OAAIA,EAAMG,KAAKlB,YACzCkH,GAAqB,SAAAnG,GAAK,OAAIA,EAAMG,KAAKpB,YACzCqH,GAAsB,SAAApG,GAAK,OAAIA,EAAMG,KAAKnB,aAC1CqH,GAAmB,SAAArG,GAAK,OAAIA,EAAMG,KAAKjB,U,iDCCvCoH,GAAO,SAACV,GACjB,IAAMxH,EAAW4H,GAAiBxD,EAAMO,YAClCrE,EAAQoH,GAActD,EAAMO,YAC5BpE,EAAcoH,GAAoBvD,EAAMO,YACxC7D,EAAWmH,GAAiB7D,EAAMO,YAClCwD,EAAQ5H,EAAYC,EAAG4H,EAAQ7H,EAAYE,EALxB,EAOC4H,GAA4BF,EAAOC,EAAOZ,GAA7DhH,EAPkB,EAOlBA,EAAGC,EAPe,EAOfA,EAAG6H,EAPY,EAOZA,UAEb,GACKC,GAAgB/H,EAAGC,EAAGH,IACtBiI,GAAgBJ,EAAOC,EAAO9H,GAFnC,CAKA,IAAMkI,EAASlI,EAAMG,GAAGD,GACxB,IAAGgI,EAAOvD,WAA6B,aAAhBuD,EAAO3I,KAA9B,CAIA,INfuB4I,EMejBC,EAAc,CAChBC,KAAM,CAACnI,EAAG2H,EAAO1H,EAAG2H,GACpBE,YACAhG,GAAIsG,OACJ/I,KAAmB,QAAbiB,EA1BO,WACC,aNMK2H,EMwBZC,ENxBwB3E,EAAGG,KAAK,aAAcuE,GMyBzDrE,EAAMC,SAAS1E,EAAe,CAACa,IAAGC,OAClC2D,EAAMC,SAAStE,EAAY,GAAD,mBAAKC,GAAL,CAAe0I,SAGvCH,GAAkB,SAAC/H,EAAGC,EAAGH,GAC3B,OACIE,GAAK,GAAKA,EAAIF,EAAM,GAAGuI,QACvBpI,GAAK,GAAKA,EAAIH,EAAMuI,QAItBR,GAA8B,SAAC7H,EAAGC,EAAG+G,GACvC,IAAIc,EAkBJ,MAjBW,MAARd,IACCc,EAAY,IACZ7H,KAEO,MAAR+G,IACC/G,IACA6H,EAAY,KAEL,MAARd,IACChH,IACA8H,EAAY,KAEL,MAARd,IACChH,IACA8H,EAAY,KAGT,CAAC9H,IAAGC,IAAG6H,cC9DLQ,GAAqB,SAACtI,EAAGC,GAAJ,OAAU2D,EAAMC,SAAS1E,EAAe,CAACa,IAAGC,QAGxEsI,GAAY,CAAC,IAAK,IAAK,IAAK,KACrBC,GAAmB,SAAC,GAAW,IAAVxB,EAAS,EAATA,IAC9B,GAAGuB,GAAU1G,SAASmF,GAAM,OAAOU,GAAKV,GAC7B,MAARA,GAAayB,KACL,MAARzB,GAAa0B,MAGdD,GAAmB,WACrB,IAAMjJ,EAAW4H,GAAiBxD,EAAMO,YACxC,GAAuB,IAApB3E,EAAS6I,OAAZ,CACA,IAAMM,EAAiBnJ,EAASA,EAAS6I,OAAS,GAC5C3I,EAAa,CAACiJ,EAAe7G,IAEnC,GAAG6G,EAAeR,KAAM,CAAC,IAAD,EACLQ,EAAeR,KAAvBnI,EADa,EACbA,EAAGC,EADU,EACVA,EACVqI,GAAmBtI,EAAGC,GAG1BwD,EAAc/D,GACdkE,EAAMC,SAASpE,EAAeC,MAG5BgJ,GAAmB,WACrB,IAAMlJ,EAAW4H,GAAiBxD,EAAMO,YACxC,GAAuB,IAApB3E,EAAS6I,OAAZ,CAEA,IAAM3I,EAAaF,EAASsH,KAAI,SAAApF,GAAC,OAAIA,EAAEI,MAEvC2B,EAAc/D,GACdkE,EAAMC,SAASpE,EAAeC,MC9BnBkJ,OAAMC,MAAK,YAInB,IAHHC,EAGE,EAHFA,MACAtJ,EAEE,EAFFA,SACAuJ,EACE,EADFA,OAEM5H,EAAOwE,YAAYT,GACnBhF,EAAayF,YAAY0B,IACzBtH,EAAc4F,YAAYwB,IAC1B7G,EAAWqF,YAAY8B,IACrBpI,EAAwCyJ,EAAxCzJ,KAAMgF,EAAkCyE,EAAlCzE,MAAO2E,EAA2BF,EAA3BE,MAAOhJ,EAAoB8I,EAApB9I,EAAGC,EAAiB6I,EAAjB7I,EAAGwE,EAAcqE,EAAdrE,UAC5BwE,EAAU9H,EAAKlC,WAAaoF,EAC5B6E,EAAgBnJ,EAAYC,IAAMA,GAAKD,EAAYE,IAAMA,EAkB/D,OACI,yBACIsG,QAlBiB,WACrB,GAAK0C,EAAL,CAEA,GADAE,QAAQC,IAAI9I,GACR4I,GAA8B,QAAb5I,EAAoB,ODjBXsD,EAAMC,SfoCN,CAClCxE,KAFyB,mBAGzBC,QetC6D,SCkBzDgJ,GAAmBtI,EAAGC,KAelB+F,MAAO,CACHqD,gBAZHN,IAAyB,KAAdtE,EACH,MAAVJ,EAAsB,OAClBnE,EAAWmE,GAFyB,UAanCiF,gBAAiBC,GAAalK,EAAMoF,GAAasE,IAErDlD,UAAW2D,KAAW,aAAc,CAChC,SAAYP,EACZ,iBAAkBC,KAIjBA,GAA8B,SAAb5I,EACZ,OAjBWyI,KAAYtE,IAAwB,MAATuE,GAAkBA,EAqB9DxJ,EAASsH,KAAI,SAAApF,GAAC,OACV,yBAAKmE,UAAW4D,GAAiB/H,IA2BrD,YACI,OADkC,EAAZoG,WAElB,IAAK,IAAI,MAAO,SAChB,IAAK,IAAI,MAAO,SAChB,IAAK,IAAI,MAAO,SAChB,IAAK,IAAI,MAAO,SAChB,QAAS,MAAO,KAhCC4B,CAAgBhI,WAMtC,SAACiI,EAAWC,GACX,SACIC,kBAAQF,EAAUnK,SAAUoK,EAAUpK,WACtCqK,kBAAQF,EAAUb,MAAOc,EAAUd,QACnCe,kBAAQF,EAAUZ,OAAQa,EAAUb,YAK5C,SAASQ,GAAalK,EAAMoF,GACxB,IAAIqF,EAAY,GAOhB,OANArF,EAAYA,GAAaO,OAAO+E,QACL,WAAT1K,GAA8B,aAATA,EACtB,WAATA,EAAmByK,EAAY,YACtB,aAATzK,EAAqByK,EAAY,gBACjCrF,GAAsB,YAATpF,IAAoByK,EAAY,cAHQA,EAAY,gBAKnE,OAAN,OAAcpH,IAAyBoH,EAAvC,KAaJ,SAASL,GAAT,GACI,OADmC,EAAZ3B,WAEnB,IAAK,IAAI,MAAO,2BAChB,IAAK,IAAI,MAAO,6BAChB,IAAK,IAAI,MAAO,6BAChB,IAAK,IAAI,MAAO,8BAChB,QAAS,OAAO7C,MAAM,8BC5Ff,kBACX,IAAMnF,EAAQ6F,YAAYuB,IACpB1H,EAAWmG,YAAYyB,IACvB/G,EAAasF,YAAY2B,IAEzB0C,EAAoB,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,UACnC,GAAe,IAD4C,EAAbC,QAC9C,CACA,IAAMrK,EAAQsK,SAASC,eAAe,SAFqB,EAGvCvK,EAAMkG,MAAnBsE,EAHoD,EAGpDA,KAAMC,EAH8C,EAG9CA,IACbzK,EAAMkG,MAAMsE,KAAQE,OAAOF,EAAKG,MAAM,GAAI,IAAMR,EAAa,KAC7DnK,EAAMkG,MAAMuE,IAAOC,OAAOD,EAAIE,MAAM,GAAI,IAAMP,EAAa,OAIzDQ,EAAqB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB7K,EAAQsK,SAASC,eAAe,SAEhCO,EADeJ,OAAO1K,EAAMkG,MAAM6E,UAAUJ,MAAM,GAAI,KAC1BE,EAAS,GAChC,GACD,IAENC,EAAY,GAAKA,EAAY,KAEjC9K,EAAMkG,MAAM6E,UAAZ,gBAAiCC,OAAOF,GAAWG,OAAO,EAAG,MAA7D,OAGJC,qBAAU,WAIN,OAHAhG,OAAOiG,iBAAiB,WAAYzC,IACpCxD,OAAOiG,iBAAiB,YAAajB,GACrChF,OAAOiG,iBAAiB,aAAcP,GAC/B,WACH1F,OAAOkG,oBAAoB,WAAY1C,IACvCxD,OAAOkG,oBAAoB,YAAalB,GACxChF,OAAOkG,oBAAoB,aAAcR,MAE9C,IAEH,IAAMS,EAAoB3L,EAASgC,QAAO,SAACC,EAAKC,GAC5C,IAAMsF,EAAG,UAAMtF,EAAEyG,KAAKnI,EAAb,YAAkB0B,EAAEyG,KAAKlI,GAGlC,OAFIwB,EAAIuF,KAAMvF,EAAIuF,GAAO,IACzBvF,EAAIuF,GAAKoE,KAAK1J,GACPD,IACR,IAEH,OACI,6BACI,yBACIK,GAAG,QACH+D,UAAU,kBACVG,MAAO,CAACsE,KAAM,OAAQC,IAAK,OAAQM,UAAW,aAG1C/K,EAAMgH,KAAI,SAACuE,EAAKtE,GAAN,OACN,yBAAKC,IAAKD,EAAOlB,UAAU,cAEnBwF,EAAIvE,KAAI,SAACpF,EAAGqF,GAAJ,OACJ,kBAACuE,GAAD,CACItE,IAAKD,EACLgC,OAAuB,cAAf1I,IAA+C,IAAjB2E,OAAO+E,MAC7CvK,SAAU2L,EAAkB,GAAD,OAAIzJ,EAAE1B,EAAN,YAAW0B,EAAEzB,KAAQ,GAChD6I,MAAOpH,c,kDCnElC6J,GAAuB,SAAAnK,GAAK,OAAIA,EAAMW,SAASvB,cCYtD2E,GAAWC,IAAKC,KAChBmG,GAASC,KAAOD,OAEhBE,GAAuB,CACzB,CAACC,KAAM,WAAYC,YAAa,kCAE9BC,GAAsB,CACxB,CAACF,KAAM,kBAAmBG,YAAa,0CACvC,CAACH,KAAM,kBAAmBG,YAAa,8CACvC,CAACH,KAAM,iBAAkBG,YAAa,yBAGpCC,GAAuBC,oBACzB,SAACjK,GAAD,OXqC2B,SAACA,GAAD,OAAcwB,EAAGG,KAAK,kBAAmB3B,GWrCrDkK,CAAgBlK,KAC/B,KAGW,cAAO,IAAD,EACXA,EAAW4D,YAAY4F,IACvBpK,EAAOwE,YAAYT,GACnBrF,EAAU8F,YAAYsB,IACtBpD,EAAWyB,cACX4G,EAAS/K,EAAKlC,YAAL,UAAkBY,EAAQ,UAA1B,aAAkB,EAAYZ,UAGzCwB,EASAsB,EATAtB,SACAC,EAQAqB,EARArB,UACAC,EAOAoB,EAPApB,SACAC,EAMAmB,EANAnB,cACAC,EAKAkB,EALAlB,eACAC,EAIAiB,EAJAjB,gBACAC,EAGAgB,EAHAhB,iBACAC,EAEAe,EAFAf,gBACAC,EACAc,EADAd,aAGEkL,EAAsB,SAACnK,EAAaC,GACtC4B,EbhDyB,SAAC7B,EAAaC,GAAd,MAAyB,CACtD5C,KAF+B,sBAG/BC,QAAS,CAAC0C,cAAaC,Ua8CVmK,CAAkBpK,EAAaC,IACxC8J,GAAqBR,GAAqB3H,EAAMO,cAG9CkI,EAAoB,kBXzCJC,EWyCoBvK,EXzCLwB,EAAGG,KAAK,QAAS4I,GAAjC,IAACA,GW2CtB,OAAInL,EAAKjC,OAGL,yBAAK2G,UAAWC,KAAO,qBACnB,yBAAKD,UAAWC,KAAO,yBACnB,kBAAC,IAAD,CACIS,QAAS,kBAAM8F,KACfhN,KAAM,UACN2G,MAAO,CAACQ,MAAO,QAAS+F,UAAW,QACnCjG,UAAW4F,GAJf,WAQA,yBAAKrG,UAAWC,KAAO,kBACnB,kBAAC,KAAD,2CACA,kBAAC,KAAD,wBACA,6BACI,kBAAC,GAAD,CAAUC,KAAI,qBAAgBtF,IAC1B,kBAAC,KAAD,CACI6F,UAAW4F,EACXM,IAAK,GACLC,IAAK,GACLxK,MAAOxB,EACPyF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,WAAYzK,OAGzD,kBAAC,GAAD,CAAUqE,KAAI,sBAAiBrF,IAC3B,kBAAC,KAAD,CACI4F,UAAW4F,EACXM,IAAK,GACLC,IAAK,GACLxK,MAAOvB,EACPwF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,YAAazK,QAI9D,kBAAC,KAAD,mBACI,kBAAC,GAAD,CAAUqE,KAAK,aACX,kBAAC,KAAD,CACIO,UAAW4F,EACXjK,MAAOtB,EACPuF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,WAAYzK,KAG7CgK,GAAqB5E,KAAI,SAAApF,GAAC,OAAI,kBAAC8J,GAAD,CAAQvJ,MAAOP,EAAEiK,KAAM3E,IAAKtF,EAAEiK,MAAOjK,EAAEiK,SAGrEE,GAAoB/E,KAAI,SAAApF,GAAC,OAAI,kBAAC8J,GAAD,CAAQvJ,MAAOP,EAAEiK,KAAM3E,IAAKtF,EAAEiK,KAAMrF,UAAU,GAAO5E,EAAEiK,WAIhG,kBAAC,GAAD,CAAU5F,KAAI,2CAAsCnF,IAChD,kBAAC,KAAD,CACI0F,UAAW4F,EACXM,IAAK,EACLC,IAAK,IACLC,KAAM,GACNzK,MAAOrB,EACPsF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,gBAAiBzK,OAGlE,kBAAC,KAAD,oBACA,6BACI,kBAAC,GAAD,CAAUqE,KAAI,2BAAsBlF,IAChC,kBAAC,KAAD,CACIyF,UAAW4F,EACXM,IAAK,EACLC,IAAK,EACLC,KAAM,GACNzK,MAAOpB,EACPqF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,iBAAkBzK,OAG/D,kBAAC,GAAD,CAAUqE,KAAI,6BAAwBjF,IAClC,kBAAC,KAAD,CACIwF,UAAW4F,EACXM,IAAK,EACLC,IAAK,EACLC,KAAM,GACNzK,MAAOnB,EACPoF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,kBAAmBzK,QAIpE,kBAAC,KAAD,cACA,6BACI,kBAAC,GAAD,CAAUqE,KAAI,yCAAoChF,IAC9C,kBAAC,KAAD,CACIuF,UAAW4F,EACXM,IAAK,EACLC,IAAK,GACLC,KAAM,EACNzK,MAAOlB,EACPmF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,mBAAoBzK,OAGjE,kBAAC,GAAD,CAAUqE,KAAI,uCAAkC/E,IAC5C,kBAAC,KAAD,CACIsF,UAAW4F,EACXM,IAAK,EACLC,IAAK,GACLC,KAAM,EACNzK,MAAOjB,EACPkF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,kBAAmBzK,OAGhE,kBAAC,GAAD,CAAUqE,KAAI,8BAAyB9E,EAAzB,QACV,kBAAC,KAAD,CACIqF,UAAW4F,EACXM,IAAK,IACLC,IAAK,IACLC,KAAM,IACNzK,MAAOhB,EACPiF,SAAU,SAACxE,GAAD,OAAOyK,EAAoB,eAAgBzK,WAjHzD,M,oBC9Cb,cACX,IAAM7B,EAAU8F,YAAYsB,IACtB/G,EAAayF,YAAY0B,IACzBsF,EAAYhH,YAAY4B,IACxBqF,EAAOjH,YAAY6B,IACnBnH,EAAasF,YAAY2B,IACxB1G,EAAiB+E,YAAY4F,IAA7B3K,cACDiD,EAAWyB,cAIjB,OACI,yBAAKO,UAAWC,KAAO,eACnB,yBAAKD,UAAW2D,KAAW1D,KAAO,oBAC9B,8BACA,yBAAKD,UAAWC,KAAO,gBAAvB,UAGA,qCACA,sCAEIjG,EAAQiH,KAAI,SAAApF,GAAC,eACT,kBAAC,IAAMmL,SAAP,CAAgB7F,IAAKtF,EAAEzC,UACnB,6BACI,yBACI4G,UAAWC,KAAO,aAClBE,MAAO,CAAC8G,WAAY5M,EAAWwB,EAAEzC,cAGzC,uCACQyC,EAAE1C,WAEV,8BACK,UAAA2N,EAAUjL,EAAEzC,iBAAZ,eAAuB+J,QAAS,GAErC,8BACK,UAAA2D,EAAUjL,EAAEzC,iBAAZ,eAAuB8N,QAAS,QAMrD,sCACWH,EADX,MACoBhM,GAEpB,6BAEuB,cAAfP,GACA,kBAAC,IAAD,CACIkG,QAxCK,kBAAM1C,EAASlE,EAAc,WAyClCN,KAAM,SACN2G,MAAO,CAACQ,MAAO,SAHnB,qB,+BCnDL,cAAO,IAAD,EACqBjB,mBAAS,KAD9B,mBACVyH,EADU,KACGC,EADH,KAGXC,EAAuB,SAACC,GAC1BF,EAAeE,GzB0CE,SAACA,GACtBnK,EAASmK,EAENxO,IAAOA,EAAMqE,OAASA,GACtBpE,IAAcA,EAAaoE,OAASA,GyB7CnCoK,CAAUD,EAAQ,MAGtB,OACI,yBAAKtH,UAAWC,KAAO,gBACnB,kBAAC,IAAD,CACIS,QAAS,kBAAM2G,EAAqBF,EAAc,EAAI,MACtDK,KAAM,kBAACC,GAAA,EAAD,QAEV,yBAAKzH,UAAWC,KAAO,mBACnB,kBAAC,KAAD,CACI0G,IAAK,EACLC,IAAK,IACLvG,SAAUgH,EACVjL,MAAO+K,O,OCeZO,OA1Bf,WACE,IAAMlN,EAAasF,YAAY2B,IAK/B,OAJA0D,qBAAU,W1BE0B/H,EAAUN,K0BA3C,IAGD,6BACE,kBAAC6K,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MAEgB,UAAdrN,GACA,oCACE,kBAACsN,EAAD,MACA,kBAACC,GAAD,QAIc,YAAfvN,GAA2C,cAAfA,IAC7B,kBAAC,GAAD,QCtBYwN,QACW,cAA7B7I,OAAO8I,SAASC,UAEe,UAA7B/I,OAAO8I,SAASC,UAEhB/I,OAAO8I,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAAC,IAAD,CAAUtK,MAAOA,GACb,kBAAC,GAAD,OAEJwG,SAASC,eAAe,SDuHtB,kBAAmB8D,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvF,QAAQuF,MAAMA,EAAM/J,a,mBExI5BlG,EAAOC,QAAU,CAAC,eAAe,+BAA+B,eAAe,+BAA+B,cAAc,8BAA8B,cAAc,gC,mBCAxKD,EAAOC,QAAU,CAAC,aAAa,6BAA6B,iBAAiB,iCAAiC,YAAY,8B,mBCA1HD,EAAOC,QAAU,CAAC,gBAAgB,6BAA6B,oBAAoB,iCAAiC,OAAS,wB,mBCA7HD,EAAOC,QAAU,CAAC,mBAAmB,mCAAmC,uBAAuB,uCAAuC,gBAAgB,mC","file":"static/js/main.8157da85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"audio-panel\":\"AudioControl_audio-panel__1D5FQ\",\"slider-wrapper\":\"AudioControl_slider-wrapper__3K4Ro\"};","import {sample} from 'lodash'\r\n\r\nconst BATTLE_START_MUSIC =  `${process.env.PUBLIC_URL}/battleStart1.mp3`\r\nconst OPENING_MUSIC =  `${process.env.PUBLIC_URL}/open.mp3`\r\nconst CAPTURE_CAPITOL_SOUND = `${process.env.PUBLIC_URL}/cnquest.mp3`\r\n\r\nconst PEACFULL_MUSIC = `${process.env.PUBLIC_URL}/peacefullMusic.mp3`\r\nconst PEACFULL_MUSIC2 = `${process.env.PUBLIC_URL}/peacefullMusic2.mp3`\r\nconst PEACFULL_MUSIC3 = `${process.env.PUBLIC_URL}/peacefullMusic3.mp3`\r\nconst PEACFULL_MUSIC4 = `${process.env.PUBLIC_URL}/peacefullMusic4.mp3`\r\nconst PEACFULL_BACKGROUNDS = [PEACFULL_MUSIC, PEACFULL_MUSIC2, PEACFULL_MUSIC3, PEACFULL_MUSIC4]\r\n\r\nconst BATTLE_MUSIC = `${process.env.PUBLIC_URL}/battleMusic.mp3`\r\n\r\nconst LOST_MUSIC = `${process.env.PUBLIC_URL}/lost.mp3`\r\nconst WON_MUSIC = `${process.env.PUBLIC_URL}/won.mp3`\r\n\r\n\r\nexport const playOpeningMusic = () => playMusic(OPENING_MUSIC)\r\nexport const playBattleStartMusic = () => playMusic(BATTLE_START_MUSIC)\r\nexport const playCaptureCapitolSound = () => playDialog(CAPTURE_CAPITOL_SOUND)\r\n\r\nexport const playPeacfullBackgoundMusic = () => playMusic(sample(PEACFULL_BACKGROUNDS))\r\nexport const playBattleMusic = () => playMusic(BATTLE_MUSIC)\r\n\r\nexport const playLostMusic = () => playDialog(LOST_MUSIC)\r\nexport const playWinMusic = () => playMusic(WON_MUSIC)\r\n\r\n\r\nvar audio\r\nvar dialogsAudio\r\nvar volume = 1\r\n\r\nconst playMusic = (audioPath) => {\r\n    if(audio) audio.pause()\r\n    audio = new Audio(audioPath)\r\n    audio.volume = volume\r\n    audio.play()\r\n}\r\n\r\nconst playDialog = (audioPath) => {\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n    dialogsAudio = new Audio(audioPath)\r\n    dialogsAudio.volume = volume\r\n    dialogsAudio.play()\r\n}\r\n\r\nexport const stopSounds = () => {\r\n    if(audio) audio.pause()\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n}\r\n\r\nexport const setVolume = (level) => {\r\n    volume = level\r\n\r\n    if(audio) audio.volume = volume\r\n    if(dialogsAudio) dialogsAudio.volume = volume\r\n}","const devConfig = {\r\n    address: 'http://localhost:5500'\r\n}\r\n\r\nconst config = devConfig\r\n\r\nexport default config","import * as actions from './user.action'\r\n\r\nconst INITIAL_STATE = {\r\n    userName: 'p1',\r\n    socketId: '',\r\n    roomId: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_USER_NAME:\r\n            return {...state, userName: action.payload}\r\n        case actions.SET_USER:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './message.action'\r\n\r\nconst INITIAL_STATE = []\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ADD_MESSAGE:\r\n            return [...state, action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","export const SET_PLAYERS = 'game.setPlayers'\r\nexport const setPlayers = (players) => ({\r\n    type: SET_PLAYERS,\r\n    payload: players\r\n})\r\n\r\nexport const SET_BOARD = 'game.setBoard'\r\nexport const setBoard = (board) => ({\r\n    type: SET_BOARD,\r\n    payload: board\r\n})\r\n\r\nexport const SET_ACTIVE_FIELD = 'game.setActiveField'\r\nexport const setActiveField = (coordinates) => ({\r\n    type: SET_ACTIVE_FIELD,\r\n    payload: coordinates\r\n})\r\n\r\nexport const SET_COMMANDS = 'game.setCommands'\r\nexport const setCommands = (commands) => ({\r\n    type: SET_COMMANDS,\r\n    payload: commands\r\n})\r\n\r\nexport const REMOVE_COMMANDS = 'game.removeCommands'\r\nexport const removeCommands = (commandIds) => ({\r\n    type: REMOVE_COMMANDS,\r\n    payload: commandIds\r\n})\r\n\r\nexport const SET_PLAYER_ROLE = 'game.setPlayerRole'\r\nexport const setPlayerRole = (role) => ({\r\n    type: SET_PLAYER_ROLE,\r\n    payload: role\r\n})\r\n\r\nexport const UPDATE_STATS = 'game.updateStats'\r\nexport const updateStats = (stats) => ({\r\n    type: UPDATE_STATS,\r\n    payload: stats\r\n})\r\n\r\nexport const SET_MOVE_TYPE = 'game.setMoveType'\r\nexport const setMoveType = (type) => ({\r\n    type: SET_MOVE_TYPE,\r\n    payload: type\r\n})","import * as actions from './game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    players: [],\r\n    board: [[]],\r\n    activeField: {x: -1, y: -1},\r\n    commands: [],\r\n    userColors: {},\r\n    usersStats: {},\r\n    tourCounter: 0,\r\n    playerRole: 'lobby',\r\n    moveType: 'all',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_PLAYERS:\r\n            return {\r\n                ...state, \r\n                players: action.payload, \r\n                userColors: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n            }\r\n        case actions.SET_BOARD:\r\n            return {...state, board: action.payload}\r\n        case actions.SET_ACTIVE_FIELD:\r\n            return {...state, activeField: action.payload, moveType: 'all'}\r\n        case actions.SET_COMMANDS:\r\n            return {...state, commands: action.payload}\r\n        case actions.REMOVE_COMMANDS:\r\n            return {...state, commands: state.commands.filter(v => !action.payload.includes(v.id))}\r\n        case actions.SET_PLAYER_ROLE:\r\n            return {...state, playerRole: action.payload}\r\n        case actions.UPDATE_STATS:\r\n            return {...state, ...action.payload}\r\n        case actions.SET_MOVE_TYPE:\r\n            return {...state, moveType: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './settings.action'\r\n\r\n\r\nconst INITIAL_STATE = ({\r\n    privateSettings: {},\r\n    gameSettings: {\r\n        mapWidth: 20,\r\n        mapHeight: 20,\r\n        gameMode: 'Conquest',\r\n        nonAggression: 20,\r\n        castlesDensity: 0.5,\r\n        mountainDensity: 0.5,\r\n        castleProduction: 1,\r\n        fieldProduction: 25,\r\n        turnDuration: 1000\r\n    }\r\n})\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.REPLACE_GAME_SETTING:\r\n            return {...state, gameSettings: action.payload}\r\n        case actions.MODIFY_GAME_SETTING:{\r\n            const {settingName, value} = action.payload\r\n            return {...state, gameSettings: {...state.gameSettings, [settingName]: value}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport user from './user/user.reducer'\r\nimport messages from './messages/message.reducer'\r\nimport game from './game/game.reducer'\r\nimport settings from './settings/settings.reducer'\r\n\r\nconst reducers = {\r\n    user,\r\n    messages,\r\n    game,\r\n    settings\r\n}\r\n\r\nconst rootReducer = (state ={}, action) => combineReducers(reducers)(state, action)\r\n\r\nexport default rootReducer\r\n","export const SET_USER_NAME = 'user.setName'\r\nexport const setUserName = (name) => ({\r\n    type: SET_USER_NAME,\r\n    payload: name\r\n})\r\n\r\nexport const SET_USER = 'user.setUser'\r\nexport const setUser = (user) => ({\r\n    type: SET_USER,\r\n    payload: user\r\n})","export const ADD_MESSAGE = 'messages.addMessage'\r\nexport const addMessage = (msg) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: msg\r\n})","export const MODIFY_GAME_SETTING = 'MODIFY_GAME_SETTING'\r\nexport const modifyGameSetting = (settingName, value) => ({\r\n    type: MODIFY_GAME_SETTING,\r\n    payload: {settingName, value}\r\n})\r\n\r\nexport const REPLACE_GAME_SETTING = 'REPLACE_GAME_SETTING'\r\nexport const replaceGameSetting = (settings) => ({\r\n    type: REPLACE_GAME_SETTING,\r\n    payload: settings\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    thunk,\r\n    // logger\r\n)(createStore)\r\n\r\nexport default createStoreWithMiddleware(reducer)","import socketIO from 'socket.io-client'\r\nimport config from '../config'\r\nimport store from '../storage/store'\r\nimport { setUser } from '../storage/user/user.action'\r\nimport { setPlayers, setBoard, removeCommands, updateStats, setPlayerRole, setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { addMessage } from '../storage/messages/message.action'\r\nimport { replaceGameSetting } from '../storage/settings/settings.action'\r\nimport { playBattleStartMusic, playPeacfullBackgoundMusic, playLostMusic, playWinMusic, playBattleMusic } from '../audioPlayer/audioPlayer'\r\n\r\nconst io = socketIO(config.address)\r\n\r\n// GAME\r\nexport const startGame = (gameParams) => io.emit('start', gameParams)\r\nexport const addCommand = (command) => io.emit('addCommand', command)\r\nexport const eraseCommands = (commandIds) => io.emit('eraseCommands', commandIds)\r\nio.on('startBattle', () => {\r\n    store.dispatch(setActiveField({x: -1, y: -1}))\r\n    store.dispatch(setCommands([]))\r\n    playBattleStartMusic()\r\n    setTimeout(() => playPeacfullBackgoundMusic(), 6000)\r\n    store.dispatch(setPlayerRole('fighter'))\r\n})\r\nio.on('updateStats', (stats) => store.dispatch(updateStats(stats)))\r\nio.on('loser', () => {\r\n    playLostMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\nio.on('winner', winner => {\r\n    playWinMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\n\r\nio.on('endOfPeace', () => {\r\n    playBattleMusic()\r\n})\r\n\r\nio.on('updateBoard', board => {\r\n    const socketId = store.getState().user.socketId\r\n    board\r\n        .flat()\r\n        .filter(v => v.owner === socketId)\r\n        .forEach((({x, y}) => {\r\n            for(let vX = x -1; vX <= x + 1; vX++)\r\n                for(let vY = y -1; vY <= y + 1; vY++) \r\n                    if(board[vY] && board[vY][vX])\r\n                        board[vY][vX].isVisible = true\r\n        }))\r\n\r\n    store.dispatch(setBoard(board))\r\n})\r\nio.on('removeCommands', commandIds => store.dispatch(removeCommands(commandIds)))\r\n\r\n// CHAT\r\nexport const sendMessage = (message) => io.emit('sendMessage', message)\r\nio.on('chat', message => store.dispatch(addMessage(message)))\r\n\r\n// ROOM\r\nexport const createRoom = () => io.emit('createRoom', store.getState().user.userName)\r\nexport const joinToRoom = (roomId) => io.emit('join', {\r\n    roomId,\r\n    userName: store.getState().user.userName\r\n})\r\nexport const setRoomSettings = (settings) => io.emit('setRoomSettings', settings)\r\nio.on('setRoomSettings', settings => store.dispatch(replaceGameSetting(settings)))\r\nio.on('joined', user => store.dispatch(setUser(user)))\r\nio.on('refreshPlayersInRoom', players => store.dispatch(setPlayers(players)))\r\nio.on('noRoom', () => window.alert('No room with given id'))\r\n\r\nexport default io","export const userSelector = state => state.user","import React, { useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { createRoom, joinToRoom } from '../socket/socketManager';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUserName } from '../storage/user/user.action';\r\nimport styles from './Lobby.module.scss'\r\nimport { userSelector } from '../storage/user/user.selector';\r\n\r\nconst FormItem = Form.Item\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch()\r\n    const [roomId, setRoomId] = useState('')\r\n    const [isNameConfirmed, setIsNameConfirmed] = useState(false)\r\n    const user = useSelector(userSelector)\r\n    const isAllDisabled = !!user.roomId\r\n    \r\n    return (\r\n        <div className={styles['lobby-wrapper']}>\r\n            <div className={styles['lobby-content-box']}>\r\n                <h3 className={styles['header']}>Overlight Generals</h3>\r\n                <FormItem help='User Name'>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Input\r\n                            onChange={e => dispatch(setUserName(e.target.value))}\r\n                            value={user.userName}\r\n                            placeholder='User Name'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                        />\r\n                        <Button \r\n                            type='primary'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                            onClick={() => setIsNameConfirmed(true)}\r\n                        >\r\n                            Confirm\r\n                        </Button>\r\n                    </div>\r\n                </FormItem>\r\n                <Button\r\n                    disabled={user.roomId}\r\n                    onClick={createRoom}\r\n                    style={{width: '255px'}}\r\n                >\r\n                    Create Room\r\n                </Button>\r\n                {\r\n                    !user.roomId &&\r\n                    <FormItem help={'Room ID to join'}>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Input \r\n                                placeholder='Room ID' \r\n                                onChange={(e) => setRoomId(e.target.value)}\r\n                            />\r\n                            <Button onClick={() => joinToRoom(roomId)}>\r\n                                Join\r\n                            </Button>\r\n                        </div>\r\n                    </FormItem>\r\n                }\r\n\r\n                {\r\n                    user.roomId &&\r\n                    <FormItem help={'Room ID'}>\r\n                        <Input value={user.roomId}/>\r\n                    </FormItem>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messagesSelector = state => state.messages","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { messagesSelector } from '../storage/messages/messages.selector'\r\nimport { sendMessage } from '../socket/socketManager'\r\nimport styles from './LiveChat.module.scss'\r\nimport { Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const messages = useSelector(messagesSelector)\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage)\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles['chat-wrapper']}>\r\n            <div \r\n                onClick={() => setIsVisible(!isVisible)}\r\n                className={styles['chat-header']}>\r\n                Room Chat\r\n            </div>\r\n            {\r\n                isVisible &&\r\n                <div>\r\n                    <div className={styles['chat-history']}>\r\n                        {\r\n                            messages.map((v, index) => <div key={index}>{v}</div>)\r\n                        }\r\n                    </div>\r\n                    <div className={styles['new-message']}>\r\n                        <Input \r\n                            placeholder='Message....'\r\n                            value={newMessage}\r\n                            onChange={e => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button onClick={handleSendMessage}>\r\n                            Send Message\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export const playersSelector = state => state.game.players\r\nexport const boardSelector = state => state.game.board\r\nexport const activeFieldSelector = state => state.game.activeField\r\nexport const commandsSelector = state => state.game.commands\r\nexport const userColorsSelector = state => state.game.userColors\r\nexport const playerRoleSelector = state => state.game.playerRole\r\nexport const usersStatsSelector = state => state.game.usersStats\r\nexport const tourCounterSelector = state => state.game.tourCounter\r\nexport const moveTypeSelector = state => state.game.moveType","import store from '../storage/store'\r\nimport { setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { activeFieldSelector, commandsSelector, boardSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport uniqid from 'uniqid'\r\nimport { addCommand } from '../socket/socketManager'\r\n\r\nconst CMD_MOVE_ALL = 'MOVE_ALL'\r\nconst CMD_MOVE_HALF = 'MOVE_HALF'\r\n\r\nexport const move = (key) => {\r\n    const commands = commandsSelector(store.getState())\r\n    const board = boardSelector(store.getState())\r\n    const activeField = activeFieldSelector(store.getState())\r\n    const moveType = moveTypeSelector(store.getState())\r\n    const prevX = activeField.x, prevY = activeField.y\r\n    \r\n    const {x, y, direction} = translateDirectionKeyToMove(prevX, prevY, key)\r\n\r\n    if(\r\n        !isPositionValid(x, y, board) || \r\n        !isPositionValid(prevX, prevY, board)\r\n    ) return\r\n\r\n    const tileTo = board[y][x]\r\n    if(tileTo.isVisible && tileTo.type === 'mountain') {\r\n        return\r\n    }\r\n\r\n    const nextCommand = {\r\n        from: {x: prevX, y: prevY},\r\n        direction,\r\n        id: uniqid(),\r\n        type: moveType === 'all' \r\n            ? CMD_MOVE_ALL\r\n            : CMD_MOVE_HALF\r\n    }\r\n\r\n    addCommand(nextCommand)\r\n    store.dispatch(setActiveField({x, y}))\r\n    store.dispatch(setCommands([...commands, nextCommand]))\r\n}\r\n\r\nconst isPositionValid = (x, y, board) => {\r\n    return (\r\n        x >= 0 && x < board[0].length &&\r\n        y >= 0 && y < board.length\r\n    )\r\n}\r\n\r\nconst translateDirectionKeyToMove = (x, y, key) => {\r\n    let direction\r\n    if(key === 'w') {\r\n        direction = 'u'\r\n        y--\r\n    }\r\n    if(key === 's') {\r\n        y++\r\n        direction = 'd'\r\n    }\r\n    if(key === 'a') {\r\n        x--\r\n        direction = 'l'\r\n    }\r\n    if(key === 'd') {\r\n        x++\r\n        direction = 'r'\r\n    }\r\n\r\n    return {x, y, direction}\r\n}","import store from '../storage/store'\r\nimport { setActiveField, removeCommands, setMoveType } from '../storage/game/game.action'\r\nimport { move } from './Moves'\r\nimport { commandsSelector } from '../storage/game/game.selector'\r\nimport { eraseCommands } from '../socket/socketManager'\r\n\r\nexport const clickOnActiveField = (x, y) => store.dispatch(setActiveField({x, y}))\r\nexport const setHalfUnitsMove = () => store.dispatch(setMoveType('half'))\r\n\r\nconst MOVE_KEYS = ['w', 's', 'a', 'd']\r\nexport const keyboardListener = ({key}) => {\r\n    if(MOVE_KEYS.includes(key)) return move(key)\r\n    if(key === 'e') eraseLastCommand()\r\n    if(key === 'q') eraseAllCommands()\r\n}\r\n\r\nconst eraseLastCommand = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n    const commandToErase = commands[commands.length - 1]\r\n    const commandIds = [commandToErase.id]\r\n\r\n    if(commandToErase.from) {\r\n        const {x, y} = commandToErase.from\r\n        clickOnActiveField(x, y)\r\n    }\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\nconst eraseAllCommands = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n\r\n    const commandIds = commands.map(v => v.id)\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { activeFieldSelector, userColorsSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport { clickOnActiveField, setHalfUnitsMove } from './Reactions'\r\nimport {isEqual} from 'lodash'\r\n\r\nexport default React.memo(({\r\n    field,\r\n    commands,\r\n    seeAll\r\n}) => {\r\n    const user = useSelector(userSelector)\r\n    const userColors = useSelector(userColorsSelector)\r\n    const activeField = useSelector(activeFieldSelector)\r\n    const moveType = useSelector(moveTypeSelector)\r\n    const { type, owner, units, x, y, isVisible } = field\r\n    const isOwner = user.socketId === owner\r\n    const isActiveField = activeField.x === x && activeField.y === y\r\n\r\n    const handleClickField = () => {\r\n        if (!isOwner) return\r\n        console.log(moveType)\r\n        if (isActiveField && moveType === 'all') return setHalfUnitsMove()\r\n        clickOnActiveField(x, y)\r\n    }\r\n\r\n    const getBackgroundColor = () => {\r\n        if (!seeAll && !isVisible === true) return '#202020'\r\n        if(owner === 'n') return 'grey'\r\n        return userColors[owner]\r\n    }\r\n\r\n    const getFieldUnits = () => (seeAll || !!isVisible) && (units != null) && units\r\n    \r\n    // not-visible\r\n    return (\r\n        <div \r\n            onClick={handleClickField}\r\n            style={{\r\n                backgroundColor: getBackgroundColor(),\r\n                backgroundImage: getImageLink(type, isVisible || seeAll)\r\n            }}\r\n            className={classnames('board-tile', {\r\n                'clicable': isOwner,\r\n                'selected-field': isActiveField,\r\n            })}\r\n        >\r\n            {\r\n                (isActiveField && moveType === 'half')\r\n                    ? '50%'\r\n                    :  getFieldUnits()\r\n            }\r\n            {\r\n                commands.map(v => (\r\n                    <div className={getClassForArrow(v)}>\r\n                        {getSignForArrow(v)}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    if(\r\n        isEqual(prevProps.commands, nextProps.commands) &&\r\n        isEqual(prevProps.field, nextProps.field) &&\r\n        isEqual(prevProps.seeAll, nextProps.seeAll)\r\n    ) return true\r\n    return false\r\n})\r\n\r\nfunction getImageLink(type, isVisible) {\r\n    let imagePath = '';\r\n    isVisible = isVisible || window.debug\r\n    if(!isVisible && (type === 'castle' || type === 'mountain')) imagePath = '/obstacle.png'\r\n    else if(type === 'castle') imagePath = '/city.png'\r\n    else if(type === 'mountain') imagePath = '/mountain.png'\r\n    else if(isVisible && type === 'capitol') imagePath = '/crown.png'\r\n\r\n    return `url(${process.env.PUBLIC_URL + imagePath})`\r\n}\r\n  \r\nfunction getSignForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return '↑'\r\n        case 'd':return '↓'\r\n        case 'l':return '←'\r\n        case 'r':return '→'\r\n        default: return 'x'\r\n    }\r\n}\r\n\r\nfunction getClassForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return 'arrow-container arrow-up'\r\n        case 'd':return 'arrow-container arrow-down'\r\n        case 'l':return 'arrow-container arrow-left'\r\n        case 'r':return 'arrow-container arrow-right'\r\n        default: return alert('command without direction')\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { boardSelector, commandsSelector, playerRoleSelector } from '../storage/game/game.selector'\r\nimport './Board.css'\r\nimport Field from './Field'\r\nimport { keyboardListener } from './Reactions'\r\n\r\nexport default () => {\r\n    const board = useSelector(boardSelector)\r\n    const commands = useSelector(commandsSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    \r\n    const mouseMoveListener = ({movementX, movementY, buttons}) => {\r\n        if(buttons !== 1) return\r\n        const board = document.getElementById('board')\r\n        const {left, top} = board.style\r\n        board.style.left = (Number(left.slice(0, -2)) + movementX) + 'px'\r\n        board.style.top = (Number(top.slice(0, -2)) + movementY) + 'px'\r\n\r\n    }\r\n\r\n    const mouseWheelListener = ({deltaY}) => {\r\n        const board = document.getElementById('board')\r\n        const currnetScale = Number(board.style.transform.slice(6, -1))\r\n        const nextScale = currnetScale + (deltaY > 0\r\n                ? -0.1\r\n                : 0.1\r\n            )\r\n        if (nextScale > 2 || nextScale < 0.5) return\r\n\r\n        board.style.transform = `scale(${String(nextScale).padEnd(3, '.0')})`\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keypress', keyboardListener)\r\n        window.addEventListener('mousemove', mouseMoveListener)\r\n        window.addEventListener('mousewheel', mouseWheelListener)\r\n        return () => {\r\n            window.removeEventListener('keypress', keyboardListener)\r\n            window.removeEventListener('mousemove', mouseMoveListener)\r\n            window.removeEventListener('mousewheel', mouseWheelListener)\r\n        }\r\n    }, [])\r\n\r\n    const commandsForFields = commands.reduce((acc, v) => {\r\n        const key = `${v.from.x}-${v.from.y}`\r\n        if(!acc[key]) acc[key] = []\r\n        acc[key].push(v)\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id='board'\r\n                className='board-container'\r\n                style={{left: '10px', top: \"10px\", transform: \"scale(1)\"}}\r\n            >\r\n                {\r\n                    board.map((row, index) => (\r\n                        <div key={index} className='board-row '>\r\n                            {\r\n                                row.map((v, index) => (\r\n                                    <Field\r\n                                        key={index}\r\n                                        seeAll={playerRole === 'spectator' || window.debug === true}\r\n                                        commands={commandsForFields[`${v.x}-${v.y}`] || []}\r\n                                        field={v}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const gameSettingsSelector = state => state.settings.gameSettings","import React from 'react'\r\nimport styles from './Settings.module.scss'\r\nimport { Slider, Form, Divider, Select, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { modifyGameSetting } from '../storage/settings/settings.action'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport {debounce} from 'lodash'\r\nimport { setRoomSettings, startGame } from '../socket/socketManager'\r\nimport store from '../storage/store'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nconst AVAILABLE_GAME_MODES = [\r\n    {name: 'Conquest', description: 'Capture all opponent capitols'}\r\n]\r\nconst DISABLED_GAME_MODES = [\r\n    {name: 'Units Collector', descroption: 'Gather the biggest army in whole state'}, \r\n    {name: 'King of Castles', descroption: 'Capture the castles around the whole world'}, \r\n    {name: 'Territory Wars', descroption: 'Rule the whole world'}, \r\n]\r\n\r\nconst notifySettingsChange = debounce(\r\n    (settings) =>  setRoomSettings(settings),\r\n    500\r\n)\r\n\r\nexport default () => {\r\n    const settings = useSelector(gameSettingsSelector)\r\n    const user = useSelector(userSelector)\r\n    const players = useSelector(playersSelector)\r\n    const dispatch = useDispatch()\r\n    const isHost = user.socketId === players[0]?.socketId\r\n\r\n    const {\r\n        mapWidth,\r\n        mapHeight,\r\n        gameMode,\r\n        nonAggression,\r\n        castlesDensity,\r\n        mountainDensity,\r\n        castleProduction,\r\n        fieldProduction,\r\n        turnDuration,\r\n    } = settings\r\n\r\n    const handleChangeSetting = (settingName, value) => {\r\n        dispatch(modifyGameSetting(settingName, value))\r\n        notifySettingsChange(gameSettingsSelector(store.getState()))\r\n    }\r\n\r\n    const handleStartBattle = () => startGame(settings)\r\n\r\n    if(!user.roomId) return null\r\n\r\n    return (\r\n        <div className={styles['settings-wrapper']}>\r\n            <div className={styles['settings-content-box']}>\r\n                <Button\r\n                    onClick={() => handleStartBattle()}\r\n                    type={\"primary\"}\r\n                    style={{width: '300px', marginTop: '10px'}}\r\n                    disabled={!isHost}\r\n                >\r\n                    Battle!\r\n                </Button>\r\n                <div className={styles['settings-list']}>\r\n                    <Divider>Only Host Can Modify This Settings</Divider>\r\n                    <Divider>Map Dimmensions</Divider>\r\n                    <div>\r\n                        <FormItem help={`Map Width: ${mapWidth}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={40}\r\n                                value={mapWidth}\r\n                                onChange={(v) => handleChangeSetting('mapWidth', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Map Height: ${mapHeight}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={40}\r\n                                value={mapHeight}\r\n                                onChange={(v) => handleChangeSetting('mapHeight', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Game Rules</Divider>\r\n                        <FormItem help='Game Mode'>\r\n                            <Select\r\n                                disabled={!isHost}\r\n                                value={gameMode}\r\n                                onChange={(v) => handleChangeSetting('gameMode', v)}\r\n                            >\r\n                                {\r\n                                    AVAILABLE_GAME_MODES.map(v => <Option value={v.name} key={v.name}>{v.name}</Option>)\r\n                                }\r\n                                {\r\n                                    DISABLED_GAME_MODES.map(v => <Option value={v.name} key={v.name} disabled={true}>{v.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                        </FormItem>\r\n                        <FormItem help={`Duration Of Non-Aggression Pact: ${nonAggression}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={300}\r\n                                step={10}\r\n                                value={nonAggression}\r\n                                onChange={(v) => handleChangeSetting('nonAggression', v)}\r\n                            />\r\n                        </FormItem>\r\n                    <Divider>Map Objects</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Density: ${castlesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={castlesDensity}\r\n                                onChange={(v) => handleChangeSetting('castlesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Mountains Density: ${mountainDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={mountainDensity}\r\n                                onChange={(v) => handleChangeSetting('mountainDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Other</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Units Production Time: ${castleProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={castleProduction}\r\n                                onChange={(v) => handleChangeSetting('castleProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Field Units Production Time: ${fieldProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={fieldProduction}\r\n                                onChange={(v) => handleChangeSetting('fieldProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Resp Turn Duration: ${turnDuration} ms`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={250}\r\n                                max={3000}\r\n                                step={250}\r\n                                value={turnDuration}\r\n                                onChange={(v) => handleChangeSetting('turnDuration', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { playersSelector, userColorsSelector, usersStatsSelector, tourCounterSelector, playerRoleSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport styles from './GameInfo.module.scss'\r\nimport { Button } from 'antd'\r\nimport { setPlayerRole } from '../storage/game/game.action'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const userColors = useSelector(userColorsSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const tour = useSelector(tourCounterSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const {nonAggression} = useSelector(gameSettingsSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickLobby = () => dispatch(setPlayerRole('lobby'))\r\n\r\n    return (\r\n        <div className={styles['info-panel']}>\r\n            <div className={classnames(styles['grid-container'])}>\r\n                <div/>\r\n                <div className={styles['room-header']}>\r\n                    Player\r\n                </div>\r\n                <div>Army</div>\r\n                <div>Lands</div>\r\n                {\r\n                    players.map(v => (\r\n                        <React.Fragment key={v.socketId}>\r\n                            <div>\r\n                                <div\r\n                                    className={styles['color-box']}\r\n                                    style={{background: userColors[v.socketId]}}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {`${v.userName}`}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.units || 0}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.lands || 0}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div>\r\n                Tour: {tour} / {nonAggression}\r\n            </div>\r\n            <div>\r\n                {\r\n                    playerRole === 'spectator' &&\r\n                    <Button\r\n                        onClick={handleClickLobby}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Back To Lobby!\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styles from './AudioControl.module.scss'\r\nimport { Button, Slider } from 'antd'\r\nimport { SoundOutlined } from '@ant-design/icons'\r\nimport { setVolume } from '../audioPlayer/audioPlayer'\r\n\r\nexport default () => {\r\n    const [vloumeLevel, setVloumeLevel] = useState(100)\r\n\r\n    const handleSetVolumeLevel = (level) => {\r\n        setVloumeLevel(level)\r\n        setVolume(level / 100)\r\n    } \r\n\r\n    return (\r\n        <div className={styles['audio-panel']}>\r\n            <Button\r\n                onClick={() => handleSetVolumeLevel(vloumeLevel ? 0 : 100)}\r\n                icon={<SoundOutlined />}\r\n            />\r\n            <div className={styles['slider-wrapper']}>\r\n                <Slider\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={handleSetVolumeLevel}\r\n                    value={vloumeLevel}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport io from './socket/socketManager'\nimport Lobby from './Lobby/Lobby.jsx';\nimport LiveChat from './LiveChat/LiveChat';\nimport Board from './Game/Board';\nimport Settings from './Settings/Settings';\nimport { useSelector } from 'react-redux';\nimport GameInfo from './GameInfo/GameInfo';\nimport { playerRoleSelector } from './storage/game/game.selector';\nimport { playOpeningMusic } from './audioPlayer/audioPlayer';\nimport AudioControl from './AudioControl/AudioControl';\nimport './App.css'\n\nfunction App() {\n  const playerRole = useSelector(playerRoleSelector)\n  useEffect(() => {\n    playOpeningMusic()\n  }, [])\n\n  return (\n    <div>\n      <AudioControl/>\n      <GameInfo/>\n      <LiveChat/>\n      {\n        playerRole ==='lobby' &&\n        <>\n          <Lobby/>\n          <Settings/>\n        </>\n      }\n      {\n        (playerRole === 'fighter' || playerRole === 'spectator') &&\n        <Board/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './storage/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-wrapper\":\"LiveChat_chat-wrapper__3yyAJ\",\"chat-history\":\"LiveChat_chat-history__2VHgG\",\"chat-header\":\"LiveChat_chat-header__1SPj-\",\"new-message\":\"LiveChat_new-message__1I6jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-panel\":\"GameInfo_info-panel__3NB7p\",\"grid-container\":\"GameInfo_grid-container__1DJ7y\",\"color-box\":\"GameInfo_color-box__kQ-B1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobby-wrapper\":\"Lobby_lobby-wrapper__lDjyO\",\"lobby-content-box\":\"Lobby_lobby-content-box__QuG4U\",\"header\":\"Lobby_header__2r9_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-wrapper\":\"Settings_settings-wrapper__1-tcm\",\"settings-content-box\":\"Settings_settings-content-box__38rES\",\"settings-list\":\"Settings_settings-list__3xNVK\"};"],"sourceRoot":""}