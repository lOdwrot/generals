{"version":3,"sources":["AudioControl/AudioControl.module.scss","BattleHistory/BattleHistory.module.scss","audioPlayer/audioPlayer.js","config.js","storage/user/user.reducer.js","storage/messages/message.reducer.js","storage/game/game.action.js","storage/game/game.reducer.js","storage/settings/settings.reducer.js","storage/history/history.reducer.js","storage/reducer.js","storage/user/user.action.js","storage/messages/message.action.js","storage/settings/settings.action.js","storage/history/history.action.js","storage/store.js","storage/game/game.selector.js","socket/socketManager.js","storage/user/user.selector.js","Lobby/Lobby.jsx","storage/messages/messages.selector.js","LiveChat/LiveChat.jsx","Game/Moves.js","Game/Reactions.js","Game/Field.jsx","Game/Board.jsx","storage/settings/settings.selector.js","Settings/Settings.jsx","GameInfo/GameInfo.jsx","AudioControl/AudioControl.jsx","storage/history/history.selector.js","hooks/useRefState.js","BattleHistory/BattleHistory.jsx","App.js","serviceWorker.js","index.js","LiveChat/LiveChat.module.scss","GameInfo/GameInfo.module.scss","Lobby/Lobby.module.scss","Settings/Settings.module.scss"],"names":["module","exports","audio","dialogsAudio","config","address","INITIAL_STATE","userName","socketId","roomId","SET_BOARD","setActiveField","coordinates","type","payload","setCommands","commands","removeCommands","commandIds","setPlayerRole","role","players","board","activeField","x","y","userColors","usersStats","tourCounter","playerRole","moveType","privateSettings","gameSettings","mapWidth","mapHeight","gameMode","nonAggression","castlesDensity","mountainDensity","castleProduction","fieldProduction","turnDuration","history","reducers","user","state","action","messages","game","reduce","acc","v","color","actions","filter","includes","id","settings","settingName","value","rootReducer","combineReducers","createStoreWithMiddleware","applyMiddleware","thunk","createStore","reducer","BATTLE_START_MUSIC","process","OPENING_MUSIC","PEACFULL_BACKGROUNDS","BATTLE_MUSIC","LOST_MUSIC","WON_MUSIC","playPeacfullBackgoundMusic","playMusic","sample","volume","audioPath","pause","Audio","play","playDialog","playersSelector","boardSelector","activeFieldSelector","commandsSelector","userColorsSelector","playerRoleSelector","usersStatsSelector","tourCounterSelector","moveTypeSelector","io","socketIO","eraseCommands","emit","on","store","dispatch","setTimeout","getState","setUserColorsInHistory","stats","updateStats","winner","flat","owner","forEach","vX","vY","isVisible","setBoard","message","createRoom","replaceGameSetting","setUser","setPlayers","window","alert","userSelector","FormItem","Form","Item","useDispatch","useState","setRoomId","isNameConfirmed","setIsNameConfirmed","useSelector","isAllDisabled","className","styles","help","style","display","onChange","e","target","placeholder","disabled","onClick","width","joinToRoom","messagesSelector","newMessage","setNewMessage","setIsVisible","map","index","key","move","prevX","prevY","translateDirectionKeyToMove","direction","isPositionValid","tileTo","command","nextCommand","from","uniqid","length","clickOnActiveField","MOVE_KEYS","keyboardListener","eraseLastCommand","eraseAllCommands","commandToErase","React","memo","field","seeAll","units","isOwner","isActiveField","backgroundColor","backgroundImage","getImageLink","classnames","getClassForArrow","getSignForArrow","prevProps","nextProps","isEqual","imagePath","debug","overridedBoard","overridedUserColors","isAllVisible","mouseMoveListener","movementX","movementY","buttons","document","getElementById","left","top","Number","slice","mouseWheelListener","deltaY","nextScale","transform","String","padEnd","useEffect","addEventListener","removeEventListener","commandsForFields","push","row","Field","gameSettingsSelector","Option","Select","AVAILABLE_GAME_MODES","name","description","DISABLED_GAME_MODES","descroption","notifySettingsChange","debounce","setRoomSettings","isHost","handleChangeSetting","modifyGameSetting","handleStartBattle","gameParams","marginTop","min","max","step","userStats","tour","Fragment","background","lands","vloumeLevel","setVloumeLevel","handleSetVolumeLevel","level","setVolume","icon","SoundOutlined","historySelector","historyUserColorsSelector","useRefState","initialValue","setState","stateRef","useRef","current","historyUserColors","tourIndexRef","setTourIndex","speed","speedRef","setSpeed","isAutoPlay","isAutoPlayRef","setIsAutoPlay","updateBoard","tourIndex","rewindBack","frames","nextBoardIndex","rewindForward","autoFrma","init","DoubleLeftOutlined","BackwardOutlined","CaretLeftOutlined","CaretRightOutlined","FastForwardOutlined","DoubleRightOutlined","App","AudioControl","GameInfo","LiveChat","Lobby","Settings","BattleHistory","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bebf3179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"audio-panel\":\"AudioControl_audio-panel__1D5FQ\",\"slider-wrapper\":\"AudioControl_slider-wrapper__3K4Ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speed-slider\":\"BattleHistory_speed-slider__1IaQG\"};","import {sample} from 'lodash'\r\n\r\nconst BATTLE_START_MUSIC =  `${process.env.PUBLIC_URL}/battleStart1.mp3`\r\nconst OPENING_MUSIC =  `${process.env.PUBLIC_URL}/open.mp3`\r\nconst CAPTURE_CAPITOL_SOUND = `${process.env.PUBLIC_URL}/cnquest.mp3`\r\n\r\nconst PEACFULL_MUSIC = `${process.env.PUBLIC_URL}/peacefullMusic.mp3`\r\nconst PEACFULL_MUSIC2 = `${process.env.PUBLIC_URL}/peacefullMusic2.mp3`\r\nconst PEACFULL_MUSIC3 = `${process.env.PUBLIC_URL}/peacefullMusic3.mp3`\r\nconst PEACFULL_MUSIC4 = `${process.env.PUBLIC_URL}/peacefullMusic4.mp3`\r\nconst PEACFULL_BACKGROUNDS = [PEACFULL_MUSIC, PEACFULL_MUSIC2, PEACFULL_MUSIC3, PEACFULL_MUSIC4]\r\n\r\nconst BATTLE_MUSIC = `${process.env.PUBLIC_URL}/battleMusic.mp3`\r\n\r\nconst LOST_MUSIC = `${process.env.PUBLIC_URL}/lost.mp3`\r\nconst WON_MUSIC = `${process.env.PUBLIC_URL}/won.mp3`\r\n\r\n\r\nexport const playOpeningMusic = () => setTimeout(() => playMusic(OPENING_MUSIC), 1000)\r\nexport const playBattleStartMusic = () => playMusic(BATTLE_START_MUSIC)\r\nexport const playCaptureCapitolSound = () => playDialog(CAPTURE_CAPITOL_SOUND)\r\n\r\nexport const playPeacfullBackgoundMusic = () => playMusic(sample(PEACFULL_BACKGROUNDS))\r\nexport const playBattleMusic = () => playMusic(BATTLE_MUSIC)\r\n\r\nexport const playLostMusic = () => playDialog(LOST_MUSIC)\r\nexport const playWinMusic = () => playMusic(WON_MUSIC)\r\n\r\n\r\nvar audio\r\nvar dialogsAudio\r\nvar volume = 0.5\r\n\r\nconst playMusic = (audioPath) => {\r\n    if(audio) audio.pause()\r\n    audio = new Audio(audioPath)\r\n    audio.volume = volume\r\n    audio.play()\r\n}\r\n\r\nconst playDialog = (audioPath) => {\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n    dialogsAudio = new Audio(audioPath)\r\n    dialogsAudio.volume = volume\r\n    dialogsAudio.play()\r\n}\r\n\r\nexport const stopSounds = () => {\r\n    if(audio) audio.pause()\r\n    if(dialogsAudio) dialogsAudio.pause()\r\n}\r\n\r\nexport const setVolume = (level) => {\r\n    volume = level\r\n\r\n    if(audio) audio.volume = volume\r\n    if(dialogsAudio) dialogsAudio.volume = volume\r\n}","const devConfig = {\r\n    address: '/'\r\n}\r\n\r\nconst config = devConfig\r\n\r\nexport default config","import * as actions from './user.action'\r\n\r\nconst INITIAL_STATE = {\r\n    userName: 'p1',\r\n    socketId: '',\r\n    roomId: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_USER_NAME:\r\n            return {...state, userName: action.payload}\r\n        case actions.SET_USER:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './message.action'\r\n\r\nconst INITIAL_STATE = []\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ADD_MESSAGE:\r\n            return [...state, action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","export const SET_PLAYERS = 'game.setPlayers'\r\nexport const setPlayers = (players) => ({\r\n    type: SET_PLAYERS,\r\n    payload: players\r\n})\r\n\r\nexport const SET_BOARD = 'game.setBoard'\r\nexport const setBoard = (board) => ({\r\n    type: SET_BOARD,\r\n    payload: board\r\n})\r\n\r\nexport const SET_ACTIVE_FIELD = 'game.setActiveField'\r\nexport const setActiveField = (coordinates) => ({\r\n    type: SET_ACTIVE_FIELD,\r\n    payload: coordinates\r\n})\r\n\r\nexport const SET_COMMANDS = 'game.setCommands'\r\nexport const setCommands = (commands) => ({\r\n    type: SET_COMMANDS,\r\n    payload: commands\r\n})\r\n\r\nexport const REMOVE_COMMANDS = 'game.removeCommands'\r\nexport const removeCommands = (commandIds) => ({\r\n    type: REMOVE_COMMANDS,\r\n    payload: commandIds\r\n})\r\n\r\nexport const SET_PLAYER_ROLE = 'game.setPlayerRole'\r\nexport const setPlayerRole = (role) => ({\r\n    type: SET_PLAYER_ROLE,\r\n    payload: role\r\n})\r\n\r\nexport const UPDATE_STATS = 'game.updateStats'\r\nexport const updateStats = (stats) => ({\r\n    type: UPDATE_STATS,\r\n    payload: stats\r\n})\r\n\r\nexport const SET_MOVE_TYPE = 'game.setMoveType'\r\nexport const setMoveType = (type) => ({\r\n    type: SET_MOVE_TYPE,\r\n    payload: type\r\n})","import * as actions from './game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    players: [],\r\n    board: [[]],\r\n    activeField: {x: -1, y: -1},\r\n    commands: [],\r\n    userColors: {},\r\n    usersStats: {},\r\n    tourCounter: 0,\r\n    playerRole: 'lobby',\r\n    moveType: 'all',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.SET_PLAYERS:\r\n            return {\r\n                ...state, \r\n                players: action.payload, \r\n                userColors: action.payload.reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n            }\r\n        case actions.SET_BOARD:\r\n            return {...state, board: action.payload}\r\n        case actions.SET_ACTIVE_FIELD:\r\n            return {...state, activeField: action.payload, moveType: 'all'}\r\n        case actions.SET_COMMANDS:\r\n            return {...state, commands: action.payload}\r\n        case actions.REMOVE_COMMANDS:\r\n            return {...state, commands: state.commands.filter(v => !action.payload.includes(v.id))}\r\n        case actions.SET_PLAYER_ROLE:\r\n            return {...state, playerRole: action.payload}\r\n        case actions.UPDATE_STATS:\r\n            return {...state, ...action.payload}\r\n        case actions.SET_MOVE_TYPE:\r\n            return {...state, moveType: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './settings.action'\r\n\r\n\r\nconst INITIAL_STATE = ({\r\n    privateSettings: {},\r\n    gameSettings: {\r\n        mapWidth: 20,\r\n        mapHeight: 20,\r\n        gameMode: 'Conquest',\r\n        nonAggression: 50,\r\n        castlesDensity: 0.5,\r\n        mountainDensity: 0.5,\r\n        castleProduction: 1,\r\n        fieldProduction: 25,\r\n        turnDuration: 1000\r\n    }\r\n})\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.REPLACE_GAME_SETTING:\r\n            return {...state, gameSettings: action.payload}\r\n        case actions.MODIFY_GAME_SETTING:{\r\n            const {settingName, value} = action.payload\r\n            return {...state, gameSettings: {...state.gameSettings, [settingName]: value}}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as actions from './history.action'\r\nimport { SET_BOARD } from '../game/game.action'\r\n\r\nconst INITIAL_STATE = {\r\n    history: [],\r\n    userColors: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case actions.ERASE_HISTORY:\r\n            return INITIAL_STATE\r\n        case actions.SET_USER_COLORS:\r\n            return {...state, userColors: action.payload}\r\n        case SET_BOARD:\r\n            return {...state, history: [...state.history, action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport user from './user/user.reducer'\r\nimport messages from './messages/message.reducer'\r\nimport game from './game/game.reducer'\r\nimport settings from './settings/settings.reducer'\r\nimport history from './history/history.reducer'\r\n\r\nconst reducers = {\r\n    user,\r\n    messages,\r\n    game,\r\n    settings,\r\n    history\r\n}\r\n\r\nconst rootReducer = (state ={}, action) => combineReducers(reducers)(state, action)\r\n\r\nexport default rootReducer\r\n","export const SET_USER_NAME = 'user.setName'\r\nexport const setUserName = (name) => ({\r\n    type: SET_USER_NAME,\r\n    payload: name\r\n})\r\n\r\nexport const SET_USER = 'user.setUser'\r\nexport const setUser = (user) => ({\r\n    type: SET_USER,\r\n    payload: user\r\n})","export const ADD_MESSAGE = 'messages.addMessage'\r\nexport const addMessage = (msg) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: msg\r\n})","export const MODIFY_GAME_SETTING = 'MODIFY_GAME_SETTING'\r\nexport const modifyGameSetting = (settingName, value) => ({\r\n    type: MODIFY_GAME_SETTING,\r\n    payload: {settingName, value}\r\n})\r\n\r\nexport const REPLACE_GAME_SETTING = 'REPLACE_GAME_SETTING'\r\nexport const replaceGameSetting = (settings) => ({\r\n    type: REPLACE_GAME_SETTING,\r\n    payload: settings\r\n})","export const ERASE_HISTORY = 'history.erase'\r\nexport const eraseHistory = () => ({\r\n    type: ERASE_HISTORY\r\n})\r\n\r\nexport const SET_USER_COLORS = 'history.setUserColors'\r\nexport const setUserColorsInHistory = (userColors) => ({\r\n    type: SET_USER_COLORS,\r\n    payload: userColors\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    thunk,\r\n    // logger\r\n)(createStore)\r\n\r\nexport default createStoreWithMiddleware(reducer)","export const playersSelector = state => state.game.players\r\nexport const boardSelector = state => state.game.board\r\nexport const activeFieldSelector = state => state.game.activeField\r\nexport const commandsSelector = state => state.game.commands\r\nexport const userColorsSelector = state => state.game.userColors\r\nexport const playerRoleSelector = state => state.game.playerRole\r\nexport const usersStatsSelector = state => state.game.usersStats\r\nexport const tourCounterSelector = state => state.game.tourCounter\r\nexport const moveTypeSelector = state => state.game.moveType","import socketIO from 'socket.io-client'\r\nimport config from '../config'\r\nimport store from '../storage/store'\r\nimport { setUser } from '../storage/user/user.action'\r\nimport { setPlayers, setBoard, removeCommands, updateStats, setPlayerRole, setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { addMessage } from '../storage/messages/message.action'\r\nimport { replaceGameSetting } from '../storage/settings/settings.action'\r\nimport { playBattleStartMusic, playPeacfullBackgoundMusic, playLostMusic, playWinMusic, playBattleMusic } from '../audioPlayer/audioPlayer'\r\nimport { eraseHistory, setUserColorsInHistory } from '../storage/history/history.action'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst io = socketIO(config.address)\r\n\r\n// GAME\r\nexport const startGame = (gameParams) => io.emit('start', gameParams)\r\nexport const addCommand = (command) => io.emit('addCommand', command)\r\nexport const eraseCommands = (commandIds) => io.emit('eraseCommands', commandIds)\r\nio.on('startBattle', () => {\r\n    store.dispatch(setActiveField({x: -1, y: -1}))\r\n    store.dispatch(setCommands([]))\r\n    \r\n    playBattleStartMusic()\r\n    setTimeout(() => playPeacfullBackgoundMusic(), 6000)\r\n    store.dispatch(setPlayerRole('fighter'))\r\n    \r\n    // HISTORY\r\n    const userColors = playersSelector(store.getState())\r\n                        .reduce((acc, v) => ({...acc, [v.socketId]: v.color}), {})\r\n    store.dispatch(eraseHistory())\r\n    store.dispatch(setUserColorsInHistory(userColors))\r\n})\r\nio.on('updateStats', (stats) => store.dispatch(updateStats(stats)))\r\nio.on('loser', () => {\r\n    playLostMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\nio.on('winner', winner => {\r\n    playWinMusic()\r\n    store.dispatch(setPlayerRole('spectator'))\r\n})\r\n\r\nio.on('endOfPeace', () => {\r\n    playBattleMusic()\r\n})\r\n\r\nio.on('updateBoard', board => {\r\n    const socketId = store.getState().user.socketId\r\n    board\r\n        .flat()\r\n        .filter(v => v.owner === socketId)\r\n        .forEach((({x, y}) => {\r\n            for(let vX = x -1; vX <= x + 1; vX++)\r\n                for(let vY = y -1; vY <= y + 1; vY++) \r\n                    if(board[vY] && board[vY][vX])\r\n                        board[vY][vX].isVisible = true\r\n        }))\r\n\r\n    store.dispatch(setBoard(board))\r\n})\r\nio.on('removeCommands', commandIds => store.dispatch(removeCommands(commandIds)))\r\n\r\n// CHAT\r\nexport const sendMessage = (message) => io.emit('sendMessage', message)\r\nio.on('chat', message => store.dispatch(addMessage(message)))\r\n\r\n// ROOM\r\nexport const createRoom = () => io.emit('createRoom', store.getState().user.userName)\r\nexport const joinToRoom = (roomId) => io.emit('join', {\r\n    roomId,\r\n    userName: store.getState().user.userName\r\n})\r\nexport const setRoomSettings = (settings) => io.emit('setRoomSettings', settings)\r\nio.on('setRoomSettings', settings => store.dispatch(replaceGameSetting(settings)))\r\nio.on('joined', user => store.dispatch(setUser(user)))\r\nio.on('refreshPlayersInRoom', players => store.dispatch(setPlayers(players)))\r\nio.on('noRoom', () => window.alert('No room with given id'))\r\n\r\nexport default io","export const userSelector = state => state.user","import React, { useState } from 'react';\r\nimport { Button, Input, Form } from 'antd';\r\nimport { createRoom, joinToRoom } from '../socket/socketManager';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUserName } from '../storage/user/user.action';\r\nimport styles from './Lobby.module.scss'\r\nimport { userSelector } from '../storage/user/user.selector';\r\n\r\nconst FormItem = Form.Item\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch()\r\n    const [roomId, setRoomId] = useState('')\r\n    const [isNameConfirmed, setIsNameConfirmed] = useState(false)\r\n    const user = useSelector(userSelector)\r\n    const isAllDisabled = !!user.roomId\r\n    \r\n    return (\r\n        <div className={styles['lobby-wrapper']}>\r\n            <div className={styles['lobby-content-box']}>\r\n                <h3 className={styles['header']}>Overlight Generals</h3>\r\n                <FormItem help='User Name'>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Input\r\n                            onChange={e => dispatch(setUserName(e.target.value))}\r\n                            value={user.userName}\r\n                            placeholder='User Name'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                        />\r\n                        <Button \r\n                            type='primary'\r\n                            disabled={isNameConfirmed || isAllDisabled}\r\n                            onClick={() => setIsNameConfirmed(true)}\r\n                        >\r\n                            Confirm\r\n                        </Button>\r\n                    </div>\r\n                </FormItem>\r\n                <Button\r\n                    disabled={user.roomId}\r\n                    onClick={createRoom}\r\n                    style={{width: '255px'}}\r\n                >\r\n                    Create Room\r\n                </Button>\r\n                {\r\n                    !user.roomId &&\r\n                    <FormItem help={'Room ID to join'}>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Input \r\n                                placeholder='Room ID' \r\n                                onChange={(e) => setRoomId(e.target.value)}\r\n                            />\r\n                            <Button onClick={() => joinToRoom(roomId)}>\r\n                                Join\r\n                            </Button>\r\n                        </div>\r\n                    </FormItem>\r\n                }\r\n\r\n                {\r\n                    user.roomId &&\r\n                    <FormItem help={'Room ID'}>\r\n                        <Input value={user.roomId}/>\r\n                    </FormItem>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messagesSelector = state => state.messages","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { messagesSelector } from '../storage/messages/messages.selector'\r\nimport { sendMessage } from '../socket/socketManager'\r\nimport styles from './LiveChat.module.scss'\r\nimport { Input, Button } from 'antd'\r\n\r\nexport default () => {\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const messages = useSelector(messagesSelector)\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage)\r\n        setNewMessage('')\r\n    }\r\n\r\n    return (\r\n        <div className={styles['chat-wrapper']}>\r\n            <div \r\n                onClick={() => setIsVisible(!isVisible)}\r\n                className={styles['chat-header']}>\r\n                Room Chat\r\n            </div>\r\n            {\r\n                isVisible &&\r\n                <div>\r\n                    <div className={styles['chat-history']}>\r\n                        {\r\n                            messages.map((v, index) => <div key={index}>{v}</div>)\r\n                        }\r\n                    </div>\r\n                    <div className={styles['new-message']}>\r\n                        <Input \r\n                            placeholder='Message....'\r\n                            value={newMessage}\r\n                            onChange={e => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button onClick={handleSendMessage}>\r\n                            Send Message\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import store from '../storage/store'\r\nimport { setActiveField, setCommands } from '../storage/game/game.action'\r\nimport { activeFieldSelector, commandsSelector, boardSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport uniqid from 'uniqid'\r\nimport { addCommand } from '../socket/socketManager'\r\n\r\nconst CMD_MOVE_ALL = 'MOVE_ALL'\r\nconst CMD_MOVE_HALF = 'MOVE_HALF'\r\n\r\nexport const move = (key) => {\r\n    const commands = commandsSelector(store.getState())\r\n    const board = boardSelector(store.getState())\r\n    const activeField = activeFieldSelector(store.getState())\r\n    const moveType = moveTypeSelector(store.getState())\r\n    const prevX = activeField.x, prevY = activeField.y\r\n    \r\n    const {x, y, direction} = translateDirectionKeyToMove(prevX, prevY, key)\r\n\r\n    if(\r\n        !isPositionValid(x, y, board) || \r\n        !isPositionValid(prevX, prevY, board)\r\n    ) return\r\n\r\n    const tileTo = board[y][x]\r\n    if(tileTo.isVisible && tileTo.type === 'mountain') {\r\n        return\r\n    }\r\n\r\n    const nextCommand = {\r\n        from: {x: prevX, y: prevY},\r\n        direction,\r\n        id: uniqid(),\r\n        type: moveType === 'all' \r\n            ? CMD_MOVE_ALL\r\n            : CMD_MOVE_HALF\r\n    }\r\n\r\n    addCommand(nextCommand)\r\n    store.dispatch(setActiveField({x, y}))\r\n    store.dispatch(setCommands([...commands, nextCommand]))\r\n}\r\n\r\nconst isPositionValid = (x, y, board) => {\r\n    return (\r\n        x >= 0 && x < board[0].length &&\r\n        y >= 0 && y < board.length\r\n    )\r\n}\r\n\r\nconst translateDirectionKeyToMove = (x, y, key) => {\r\n    let direction\r\n    if(key === 'w') {\r\n        direction = 'u'\r\n        y--\r\n    }\r\n    if(key === 's') {\r\n        y++\r\n        direction = 'd'\r\n    }\r\n    if(key === 'a') {\r\n        x--\r\n        direction = 'l'\r\n    }\r\n    if(key === 'd') {\r\n        x++\r\n        direction = 'r'\r\n    }\r\n\r\n    return {x, y, direction}\r\n}","import store from '../storage/store'\r\nimport { setActiveField, removeCommands, setMoveType } from '../storage/game/game.action'\r\nimport { move } from './Moves'\r\nimport { commandsSelector } from '../storage/game/game.selector'\r\nimport { eraseCommands } from '../socket/socketManager'\r\n\r\nexport const clickOnActiveField = (x, y) => store.dispatch(setActiveField({x, y}))\r\nexport const setHalfUnitsMove = () => store.dispatch(setMoveType('half'))\r\n\r\nconst MOVE_KEYS = ['w', 's', 'a', 'd']\r\nexport const keyboardListener = ({key}) => {\r\n    if(MOVE_KEYS.includes(key)) return move(key)\r\n    if(key === 'e') eraseLastCommand()\r\n    if(key === 'q') eraseAllCommands()\r\n}\r\n\r\nconst eraseLastCommand = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n    const commandToErase = commands[commands.length - 1]\r\n    const commandIds = [commandToErase.id]\r\n\r\n    if(commandToErase.from) {\r\n        const {x, y} = commandToErase.from\r\n        clickOnActiveField(x, y)\r\n    }\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\nconst eraseAllCommands = () => {\r\n    const commands = commandsSelector(store.getState())\r\n    if(commands.length === 0) return\r\n\r\n    const commandIds = commands.map(v => v.id)\r\n    \r\n    eraseCommands(commandIds)\r\n    store.dispatch(removeCommands(commandIds))\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport { activeFieldSelector, userColorsSelector, moveTypeSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport { clickOnActiveField, setHalfUnitsMove } from './Reactions'\r\nimport {isEqual} from 'lodash'\r\n\r\nexport default React.memo(({\r\n    field,\r\n    commands,\r\n    seeAll,\r\n    userColors\r\n}) => {\r\n    const user = useSelector(userSelector)\r\n    const activeField = useSelector(activeFieldSelector)\r\n    const moveType = useSelector(moveTypeSelector)\r\n    const { type, owner, units, x, y, isVisible } = field\r\n    const isOwner = user.socketId === owner\r\n    const isActiveField = activeField.x === x && activeField.y === y\r\n\r\n    const handleClickField = () => {\r\n        if (!isOwner || seeAll) return\r\n        if (isActiveField && moveType === 'all') return setHalfUnitsMove()\r\n        clickOnActiveField(x, y)\r\n    }\r\n\r\n    const getBackgroundColor = () => {\r\n        if (!seeAll && !isVisible === true) return '#202020'\r\n        if(owner === 'n') return 'grey'\r\n        return userColors[owner] || 'grey'\r\n    }\r\n\r\n    const getFieldUnits = () => (seeAll || !!isVisible) && (units != null) && units\r\n    \r\n    // not-visible\r\n    return (\r\n        <div \r\n            onClick={handleClickField}\r\n            style={{\r\n                backgroundColor: getBackgroundColor(),\r\n                backgroundImage: getImageLink(type, isVisible || seeAll)\r\n            }}\r\n            className={classnames('board-tile', {\r\n                'clicable': isOwner,\r\n                'selected-field': isActiveField,\r\n            })}\r\n        >\r\n            {\r\n                (isActiveField && moveType === 'half')\r\n                    ? '50%'\r\n                    :  getFieldUnits()\r\n            }\r\n            {\r\n                commands.map(v => (\r\n                    <div className={getClassForArrow(v)}>\r\n                        {getSignForArrow(v)}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    if(\r\n        isEqual(prevProps.commands, nextProps.commands) &&\r\n        isEqual(prevProps.field, nextProps.field) &&\r\n        isEqual(prevProps.seeAll, nextProps.seeAll)\r\n    ) return true\r\n    return false\r\n})\r\n\r\nfunction getImageLink(type, isVisible) {\r\n    let imagePath = '';\r\n    isVisible = isVisible || window.debug\r\n    if(!isVisible && (type === 'castle' || type === 'mountain')) imagePath = '/obstacle.png'\r\n    else if(type === 'castle') imagePath = '/city.png'\r\n    else if(type === 'mountain') imagePath = '/mountain.png'\r\n    else if(isVisible && type === 'capitol') imagePath = '/crown.png'\r\n\r\n    return `url(${process.env.PUBLIC_URL + imagePath})`\r\n}\r\n  \r\nfunction getSignForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return '↑'\r\n        case 'd':return '↓'\r\n        case 'l':return '←'\r\n        case 'r':return '→'\r\n        default: return 'x'\r\n    }\r\n}\r\n\r\nfunction getClassForArrow({direction}) {\r\n    switch (direction) {\r\n        case 'u':return 'arrow-container arrow-up'\r\n        case 'd':return 'arrow-container arrow-down'\r\n        case 'l':return 'arrow-container arrow-left'\r\n        case 'r':return 'arrow-container arrow-right'\r\n        default: return alert('command without direction')\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { boardSelector, commandsSelector, playerRoleSelector, userColorsSelector } from '../storage/game/game.selector'\r\nimport './Board.css'\r\nimport Field from './Field'\r\nimport { keyboardListener } from './Reactions'\r\n\r\nexport default ({\r\n    overridedBoard,\r\n    overridedUserColors\r\n}) => {\r\n    const board = overridedBoard || useSelector(boardSelector)\r\n    const userColors = overridedUserColors || useSelector(userColorsSelector)\r\n    const commands = useSelector(commandsSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n\r\n    const isAllVisible = playerRole === 'spectator' || playerRole === 'historySpectator' || window.debug === true\r\n    \r\n    const mouseMoveListener = ({movementX, movementY, buttons}) => {\r\n        if(buttons !== 1) return\r\n        const board = document.getElementById('board')\r\n        const {left, top} = board.style\r\n        board.style.left = (Number(left.slice(0, -2)) + movementX) + 'px'\r\n        board.style.top = (Number(top.slice(0, -2)) + movementY) + 'px'\r\n\r\n    }\r\n\r\n    const mouseWheelListener = ({deltaY}) => {\r\n        const board = document.getElementById('board')\r\n        const currnetScale = Number(board.style.transform.slice(6, -1))\r\n        const nextScale = currnetScale + (deltaY > 0\r\n                ? -0.1\r\n                : 0.1\r\n            )\r\n        if (nextScale > 2 || nextScale < 0.3) return\r\n\r\n        board.style.transform = `scale(${String(nextScale).padEnd(3, '.0')})`\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(playerRole !== 'historySpectator') {\r\n            window.addEventListener('keypress', keyboardListener)\r\n        }\r\n        window.addEventListener('mousemove', mouseMoveListener)\r\n        window.addEventListener('mousewheel', mouseWheelListener)\r\n        return () => {\r\n            if(playerRole !== 'historySpectator') {\r\n                window.removeEventListener('keypress', keyboardListener)\r\n            }\r\n            window.removeEventListener('mousemove', mouseMoveListener)\r\n            window.removeEventListener('mousewheel', mouseWheelListener)\r\n        }\r\n    }, [])\r\n\r\n    const commandsForFields = commands.reduce((acc, v) => {\r\n        const key = `${v.from.x}-${v.from.y}`\r\n        if(!acc[key]) acc[key] = []\r\n        acc[key].push(v)\r\n        return acc\r\n    }, {})\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                id='board'\r\n                className='board-container'\r\n                style={{left: '10px', top: \"10px\", transform: \"scale(1)\"}}\r\n            >\r\n                {\r\n                    board.map((row, index) => (\r\n                        <div key={index} className='board-row '>\r\n                            {\r\n                                row.map((v, index) => (\r\n                                    <Field\r\n                                        key={index}\r\n                                        userColors={userColors}\r\n                                        seeAll={isAllVisible}\r\n                                        commands={commandsForFields[`${v.x}-${v.y}`] || []}\r\n                                        field={v}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const gameSettingsSelector = state => state.settings.gameSettings","import React from 'react'\r\nimport styles from './Settings.module.scss'\r\nimport { Slider, Form, Divider, Select, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { modifyGameSetting } from '../storage/settings/settings.action'\r\nimport { userSelector } from '../storage/user/user.selector'\r\nimport {debounce} from 'lodash'\r\nimport { setRoomSettings, startGame } from '../socket/socketManager'\r\nimport store from '../storage/store'\r\nimport { playersSelector } from '../storage/game/game.selector'\r\n\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\nconst AVAILABLE_GAME_MODES = [\r\n    {name: 'Conquest', description: 'Capture all opponent capitols'}\r\n]\r\nconst DISABLED_GAME_MODES = [\r\n    {name: 'Units Collector', descroption: 'Gather the biggest army in whole state'}, \r\n    {name: 'King of Castles', descroption: 'Capture the castles around the whole world'}, \r\n    {name: 'Territory Wars', descroption: 'Rule the whole world'}, \r\n]\r\n\r\nconst notifySettingsChange = debounce(\r\n    (settings) =>  setRoomSettings(settings),\r\n    500\r\n)\r\n\r\nexport default () => {\r\n    const settings = useSelector(gameSettingsSelector)\r\n    const user = useSelector(userSelector)\r\n    const players = useSelector(playersSelector)\r\n    const dispatch = useDispatch()\r\n    const isHost = user.socketId === players[0]?.socketId\r\n\r\n    const {\r\n        mapWidth,\r\n        mapHeight,\r\n        gameMode,\r\n        nonAggression,\r\n        castlesDensity,\r\n        mountainDensity,\r\n        castleProduction,\r\n        fieldProduction,\r\n        turnDuration,\r\n    } = settings\r\n\r\n    const handleChangeSetting = (settingName, value) => {\r\n        dispatch(modifyGameSetting(settingName, value))\r\n        notifySettingsChange(gameSettingsSelector(store.getState()))\r\n    }\r\n\r\n    const handleStartBattle = () => startGame(settings)\r\n\r\n    if(!user.roomId) return null\r\n\r\n    return (\r\n        <div className={styles['settings-wrapper']}>\r\n            <div className={styles['settings-content-box']}>\r\n                <Button\r\n                    onClick={() => handleStartBattle()}\r\n                    type={\"primary\"}\r\n                    style={{width: '300px', marginTop: '10px'}}\r\n                    disabled={!isHost}\r\n                >\r\n                    Battle!\r\n                </Button>\r\n                <div className={styles['settings-list']}>\r\n                    <Divider>Only Host Can Modify This Settings</Divider>\r\n                    <Divider>Map Dimmensions</Divider>\r\n                    <div>\r\n                        <FormItem help={`Map Width: ${mapWidth}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapWidth}\r\n                                onChange={(v) => handleChangeSetting('mapWidth', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Map Height: ${mapHeight}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={15}\r\n                                max={55}\r\n                                value={mapHeight}\r\n                                onChange={(v) => handleChangeSetting('mapHeight', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Game Rules</Divider>\r\n                        <FormItem help='Game Mode'>\r\n                            <Select\r\n                                disabled={!isHost}\r\n                                value={gameMode}\r\n                                onChange={(v) => handleChangeSetting('gameMode', v)}\r\n                            >\r\n                                {\r\n                                    AVAILABLE_GAME_MODES.map(v => <Option value={v.name} key={v.name}>{v.name}</Option>)\r\n                                }\r\n                                {\r\n                                    DISABLED_GAME_MODES.map(v => <Option value={v.name} key={v.name} disabled={true}>{v.name}</Option>)\r\n                                }\r\n                            </Select>\r\n                        </FormItem>\r\n                        <FormItem help={`Duration Of Non-Aggression Pact: ${nonAggression}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={10}\r\n                                max={300}\r\n                                step={10}\r\n                                value={nonAggression}\r\n                                onChange={(v) => handleChangeSetting('nonAggression', v)}\r\n                            />\r\n                        </FormItem>\r\n                    <Divider>Map Objects</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Density: ${castlesDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={castlesDensity}\r\n                                onChange={(v) => handleChangeSetting('castlesDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Mountains Density: ${mountainDensity}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                value={mountainDensity}\r\n                                onChange={(v) => handleChangeSetting('mountainDensity', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                    <Divider>Other</Divider>\r\n                    <div>\r\n                        <FormItem help={`Castles Units Production Time: ${castleProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={castleProduction}\r\n                                onChange={(v) => handleChangeSetting('castleProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Field Units Production Time: ${fieldProduction}`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={1}\r\n                                max={60}\r\n                                step={1}\r\n                                value={fieldProduction}\r\n                                onChange={(v) => handleChangeSetting('fieldProduction', v)}\r\n                            />\r\n                        </FormItem>\r\n                        <FormItem help={`Turn Duration: ${turnDuration} ms`}>\r\n                            <Slider\r\n                                disabled={!isHost}\r\n                                min={250}\r\n                                max={3000}\r\n                                step={250}\r\n                                value={turnDuration}\r\n                                onChange={(v) => handleChangeSetting('turnDuration', v)}\r\n                            />\r\n                        </FormItem>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { playersSelector, userColorsSelector, usersStatsSelector, tourCounterSelector, playerRoleSelector } from '../storage/game/game.selector'\r\nimport classnames from 'classnames'\r\nimport styles from './GameInfo.module.scss'\r\nimport { Button } from 'antd'\r\nimport { setPlayerRole } from '../storage/game/game.action'\r\nimport { gameSettingsSelector } from '../storage/settings/settings.selector'\r\nimport { playPeacfullBackgoundMusic } from '../audioPlayer/audioPlayer'\r\n\r\nexport default () => {\r\n    const players = useSelector(playersSelector)\r\n    const userColors = useSelector(userColorsSelector)\r\n    const userStats = useSelector(usersStatsSelector)\r\n    const tour = useSelector(tourCounterSelector)\r\n    const playerRole = useSelector(playerRoleSelector)\r\n    const {nonAggression} = useSelector(gameSettingsSelector)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickLobby = () => dispatch(setPlayerRole('lobby'))\r\n    const handleClickHistory = () => {\r\n        playPeacfullBackgoundMusic()\r\n        dispatch(setPlayerRole('historySpectator'))\r\n    }\r\n\r\n    return (\r\n        <div className={styles['info-panel']}>\r\n            <div className={classnames(styles['grid-container'])}>\r\n                <div/>\r\n                <div className={styles['room-header']}>\r\n                    Player\r\n                </div>\r\n                <div>Army</div>\r\n                <div>Lands</div>\r\n                {\r\n                    players.map(v => (\r\n                        <React.Fragment key={v.socketId}>\r\n                            <div>\r\n                                <div\r\n                                    className={styles['color-box']}\r\n                                    style={{background: userColors[v.socketId]}}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {`${v.userName}`}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.units || 0}\r\n                            </div>\r\n                            <div>\r\n                                {userStats[v.socketId]?.lands || 0}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div>\r\n                Tour: {tour} / {nonAggression}\r\n            </div>\r\n            <div>\r\n                {\r\n                    playerRole === 'spectator'  &&\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={handleClickHistory}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Battle History\r\n                    </Button>\r\n                }\r\n                {\r\n                    (playerRole === 'spectator' || playerRole === 'historySpectator') &&\r\n                    <Button\r\n                        onClick={handleClickLobby}\r\n                        type={\"danger\"}\r\n                        style={{width: '100%'}}\r\n                    >\r\n                        Back To Lobby!\r\n                    </Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styles from './AudioControl.module.scss'\r\nimport { Button, Slider } from 'antd'\r\nimport { SoundOutlined } from '@ant-design/icons'\r\nimport { setVolume } from '../audioPlayer/audioPlayer'\r\n\r\nexport default () => {\r\n    const [vloumeLevel, setVloumeLevel] = useState(50)\r\n\r\n    const handleSetVolumeLevel = (level) => {\r\n        setVloumeLevel(level)\r\n        setVolume(level / 100)\r\n    } \r\n\r\n    return (\r\n        <div className={styles['audio-panel']}>\r\n            <Button\r\n                onClick={() => handleSetVolumeLevel(vloumeLevel ? 0 : 100)}\r\n                icon={<SoundOutlined />}\r\n            />\r\n            <div className={styles['slider-wrapper']}>\r\n                <Slider\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={handleSetVolumeLevel}\r\n                    value={vloumeLevel}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const historySelector = state => state.history.history\r\nexport const historyUserColorsSelector = state => state.history.userColors\r\n","import { useState, useRef, useEffect } from \"react\"\r\n\r\nconst useRefState = initialValue => {\r\n    const [state, setState] = useState(initialValue)\r\n    const stateRef = useRef(state)\r\n    useEffect(\r\n      () => { stateRef.current = state },\r\n      [state]\r\n    )\r\n    return [state, stateRef, setState]\r\n}\r\n\r\nexport default useRefState","import React, { useState } from 'react'\r\nimport { historySelector, historyUserColorsSelector } from '../storage/history/history.selector'\r\nimport { useSelector } from 'react-redux'\r\nimport styles from './BattleHistory.module.scss'\r\nimport Board from '../Game/Board'\r\nimport { Slider, Button } from 'antd'\r\nimport { DoubleLeftOutlined, BackwardOutlined, CaretLeftOutlined, CaretRightOutlined, FastForwardOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport useRefState from '../hooks/useRefState'\r\n\r\n\r\nexport default () => {\r\n    const history = useSelector(historySelector)\r\n    const historyUserColors = useSelector(historyUserColorsSelector)\r\n    const [tourIndex, tourIndexRef, setTourIndex] = useRefState(0)\r\n    const [board, setBoard] = useState(history[0])\r\n    const [speed, speedRef, setSpeed] = useRefState(25)\r\n    const [isAutoPlay, isAutoPlayRef, setIsAutoPlay] = useRefState(false)\r\n\r\n    const updateBoard = (tourIndex) => {\r\n        setTourIndex(tourIndex)\r\n        setBoard(history[tourIndex])\r\n    }\r\n\r\n    const incrementBoard = () => {\r\n        if(!history[tourIndexRef.current + 1]) {\r\n            return false\r\n        }\r\n        updateBoard(tourIndexRef.current + 1)\r\n        return true\r\n    }\r\n\r\n    const rewindBack = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current - frames\r\n        updateBoard(nextBoardIndex < 0 \r\n            ? 0 \r\n            : nextBoardIndex\r\n        )\r\n    }\r\n\r\n    const rewindForward = (frames) => {\r\n        const nextBoardIndex = tourIndexRef.current + frames\r\n        updateBoard(nextBoardIndex >= history.length \r\n                        ? (history.length - 1) \r\n                        : nextBoardIndex\r\n        )\r\n    }\r\n\r\n\r\n    const autoFrma = (init) => {\r\n        if((init || isAutoPlayRef.current) && incrementBoard()) setTimeout(() => {\r\n            autoFrma()\r\n        }, 1000 / speedRef.current)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles['speed-slider']}>\r\n                <Slider\r\n                    max={100}\r\n                    min={1}\r\n                    step={1}\r\n                    value={speed}\r\n                    onChange={setSpeed}\r\n                />\r\n                <div>\r\n                    Speed x {speed}\r\n                </div>\r\n                <div>\r\n                    <Button\r\n                        icon={<DoubleLeftOutlined />}\r\n                        onClick={() => rewindBack(40)}\r\n                    />\r\n                    <Button\r\n                        icon={<BackwardOutlined/>}\r\n                        onClick={() => rewindBack(20)}\r\n                    />\r\n                    <Button\r\n                        icon={<CaretLeftOutlined />}\r\n                        onClick={() => rewindBack(10)}\r\n                    />\r\n                    {\r\n                        !isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => {\r\n                                setIsAutoPlay(true)\r\n                                autoFrma(true)\r\n                            }}\r\n                        >\r\n                            Auto Play\r\n                        </Button>\r\n                    }\r\n                    {\r\n                        isAutoPlay &&\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => setIsAutoPlay(false)}\r\n                        >\r\n                            Pause\r\n                        </Button>\r\n                    }\r\n                    <Button\r\n                        icon={<CaretRightOutlined />}\r\n                        onClick={() => rewindForward(10)}\r\n                    />\r\n                    <Button\r\n                        icon={<FastForwardOutlined />}\r\n                        onClick={() => rewindForward(20)}\r\n                    />                \r\n                    <Button\r\n                        icon={<DoubleRightOutlined />}\r\n                        onClick={() => rewindForward(40)}\r\n                    />                \r\n                </div>\r\n            </div>\r\n            {\r\n                board &&\r\n                <Board\r\n                    overridedBoard={board}\r\n                    overridedUserColors={historyUserColors}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport 'antd/dist/antd.css'\nimport io from './socket/socketManager'\nimport Lobby from './Lobby/Lobby.jsx';\nimport LiveChat from './LiveChat/LiveChat';\nimport Board from './Game/Board';\nimport Settings from './Settings/Settings';\nimport { useSelector } from 'react-redux';\nimport GameInfo from './GameInfo/GameInfo';\nimport { playerRoleSelector } from './storage/game/game.selector';\nimport { playOpeningMusic } from './audioPlayer/audioPlayer';\nimport AudioControl from './AudioControl/AudioControl';\nimport './App.css'\nimport BattleHistory from './BattleHistory/BattleHistory';\n\nfunction App() {\n  const playerRole = useSelector(playerRoleSelector)\n  useEffect(() => {\n    playOpeningMusic()\n  }, [])\n\n  return (\n    <div>\n      <AudioControl/>\n      <GameInfo/>\n      <LiveChat/>\n      {\n        playerRole ==='lobby' &&\n        <>\n          <Lobby/>\n          <Settings/>\n        </>\n      }\n      {\n        (playerRole === 'fighter' || playerRole === 'spectator') &&\n        <Board/>\n      }\n      {\n        playerRole === 'historySpectator' &&\n        <BattleHistory/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './storage/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-wrapper\":\"LiveChat_chat-wrapper__3yyAJ\",\"chat-history\":\"LiveChat_chat-history__2VHgG\",\"chat-header\":\"LiveChat_chat-header__1SPj-\",\"new-message\":\"LiveChat_new-message__1I6jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-panel\":\"GameInfo_info-panel__3NB7p\",\"grid-container\":\"GameInfo_grid-container__1DJ7y\",\"color-box\":\"GameInfo_color-box__kQ-B1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobby-wrapper\":\"Lobby_lobby-wrapper__lDjyO\",\"lobby-content-box\":\"Lobby_lobby-content-box__QuG4U\",\"header\":\"Lobby_header__2r9_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-wrapper\":\"Settings_settings-wrapper__1-tcm\",\"settings-content-box\":\"Settings_settings-content-box__38rES\",\"settings-list\":\"Settings_settings-list__3xNVK\"};"],"sourceRoot":""}